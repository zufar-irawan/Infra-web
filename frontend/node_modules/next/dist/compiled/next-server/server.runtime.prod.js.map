{"version":3,"file":"server.runtime.prod.js","sources":["webpack://next/../../node_modules/.pnpm/react@19.2.0-canary-0bdb9206-20250818/node_modules/react/cjs/react.production.js","webpack://next/../../node_modules/.pnpm/react@19.2.0-canary-0bdb9206-20250818/node_modules/react/index.js","webpack://next/../next-env/dist/index.js","webpack://next/./dist/compiled/@edge-runtime/cookies/index.js","webpack://next/./dist/compiled/cookie/index.js","webpack://next/./dist/compiled/fresh/index.js","webpack://next/./dist/compiled/p-queue/index.js","webpack://next/./dist/compiled/path-to-regexp/index.js","webpack://next/./dist/src/server/node-environment-baseline.ts","webpack://next/./dist/src/server/node-polyfill-crypto.ts","webpack://next/./dist/src/shared/lib/isomorphic/path.js","webpack://next/./dist/src/shared/lib/modern-browserslist-target.js","webpack://next/./dist/compiled/superstruct/index.cjs","webpack://next/webpack/runtime/compat_get_default_export","webpack://next/webpack/runtime/define_property_getters","webpack://next/webpack/runtime/has_own_property","webpack://next/webpack/runtime/make_namespace_object","webpack://next/./dist/src/server/node-environment-extensions/web-crypto.tsx","webpack://next/./dist/src/server/lib/source-maps.ts","webpack://next/./dist/src/lib/picocolors.ts","webpack://next/./dist/src/server/lib/lru-cache.ts","webpack://next/./dist/src/server/lib/parse-stack.ts","webpack://next/./dist/src/shared/lib/is-internal.ts","webpack://next/./dist/src/server/patch-error-inspect.ts","webpack://next/./dist/src/server/node-environment-extensions/error-inspect.tsx","webpack://next/./dist/src/next-devtools/server/shared.ts","webpack://next/./dist/src/server/dynamic-rendering-utils.ts","webpack://next/./dist/src/shared/lib/invariant-error.ts","webpack://next/./dist/src/server/app-render/dynamic-rendering.ts","webpack://next/./dist/src/server/node-environment-extensions/utils.tsx","webpack://next/./dist/src/server/node-environment-extensions/random.tsx","webpack://next/./dist/src/server/node-environment-extensions/date.tsx","webpack://next/./dist/src/server/node-environment-extensions/node-crypto.tsx","webpack://next/./dist/src/server/require-hook.ts","webpack://next/./dist/src/shared/lib/utils.ts","webpack://next/./dist/src/lib/route-pattern-normalizer.ts","webpack://next/./dist/src/shared/lib/router/utils/route-match-utils.ts","webpack://next/./dist/src/shared/lib/router/utils/route-matcher.ts","webpack://next/./dist/src/server/request-meta.ts","webpack://next/./dist/src/shared/lib/constants.ts","webpack://next/./dist/src/lib/find-pages-dir.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/reflect.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/headers.ts","webpack://next/./dist/src/lib/constants.ts","webpack://next/./dist/src/server/api-utils/index.ts","webpack://next/./dist/src/client/components/redirect-status-code.ts","webpack://next/./dist/src/server/api-utils/get-cookie-parser.ts","webpack://next/./dist/src/server/base-http/index.ts","webpack://next/./dist/src/server/base-http/node.ts","webpack://next/./dist/src/server/send-payload.ts","webpack://next/./dist/src/server/lib/cache-control.ts","webpack://next/./dist/src/server/lib/etag.ts","webpack://next/./dist/src/shared/lib/router/utils/querystring.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-url.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-relative-url.ts","webpack://next/./dist/src/build/output/log.ts","webpack://next/./dist/src/server/lib/is-ipv6.ts","webpack://next/./dist/src/shared/lib/page-path/ensure-leading-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/app-paths.ts","webpack://next/./dist/src/shared/lib/segment.ts","webpack://next/./dist/src/shared/lib/router/utils/interception-routes.ts","webpack://next/./dist/src/shared/lib/router/utils/is-dynamic.ts","webpack://next/./dist/src/shared/lib/router/utils/html-bots.ts","webpack://next/./dist/src/shared/lib/router/utils/is-bot.ts","webpack://next/./dist/src/server/stream-utils/node-web-streams-helper.ts","webpack://next/./dist/src/server/stream-utils/encoded-tags.ts","webpack://next/./dist/src/server/web/utils.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://next/./dist/src/shared/lib/router/utils/parse-path.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/add-path-suffix.ts","webpack://next/./dist/src/shared/lib/router/utils/path-has-prefix.ts","webpack://next/./dist/src/shared/lib/get-hostname.ts","webpack://next/./dist/src/shared/lib/i18n/normalize-locale-path.ts","webpack://next/./dist/src/shared/lib/router/utils/remove-path-prefix.ts","webpack://next/./dist/src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://next/./dist/src/server/web/next-url.ts","webpack://next/./dist/src/shared/lib/i18n/detect-domain-locale.ts","webpack://next/./dist/src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://next/./dist/src/shared/lib/router/utils/add-locale.ts","webpack://next/./dist/src/server/web/error.ts","webpack://next/./dist/src/server/web/spec-extension/request.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/next-request.ts","webpack://next/./dist/src/lib/detached-promise.ts","webpack://next/./dist/src/server/lib/trace/constants.ts","webpack://next/./dist/src/server/client-component-renderer-logger.ts","webpack://next/./dist/src/server/pipe-readable.ts","webpack://next/./dist/src/server/render-result.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-path-sep.ts","webpack://next/./dist/src/shared/lib/page-path/denormalize-page-path.ts","webpack://next/./dist/src/shared/lib/router/utils/path-match.ts","webpack://next/./dist/src/shared/lib/escape-regexp.ts","webpack://next/./dist/src/shared/lib/router/utils/get-dynamic-param.ts","webpack://next/./dist/src/shared/lib/router/utils/route-regex.ts","webpack://next/./dist/src/shared/lib/router/utils/prepare-destination.ts","webpack://next/./dist/src/server/lib/decode-query-path-parameter.ts","webpack://next/./dist/src/shared/lib/router/utils/format-url.ts","webpack://next/./dist/src/server/app-render/types.ts","webpack://next/./dist/src/client/components/app-router-headers.ts","webpack://next/./dist/src/lib/generate-interception-routes-rewrites.ts","webpack://next/./dist/src/server/server-utils.ts","webpack://next/./dist/src/lib/is-error.ts","webpack://next/./dist/src/shared/lib/is-plain-object.ts","webpack://next/./dist/src/server/normalizers/locale-route-normalizer.ts","webpack://next/./dist/src/shared/lib/router/utils/sorted-routes.ts","webpack://next/./dist/src/server/route-matchers/route-matcher.ts","webpack://next/./dist/src/server/route-matchers/locale-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-managers/default-route-matcher-manager.ts","webpack://next/./dist/src/server/normalizers/normalizers.ts","webpack://next/./dist/src/server/normalizers/prefixing-normalizer.ts","webpack://next/./dist/src/shared/lib/page-path/normalize-page-path.ts","webpack://next/./dist/src/server/normalizers/underscore-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/app-filename-normalizer.ts","webpack://next/./dist/src/lib/is-app-route-route.ts","webpack://next/./dist/src/lib/metadata/is-metadata-route.ts","webpack://next/./dist/src/server/normalizers/wrap-normalizer-fn.ts","webpack://next/./dist/src/server/normalizers/built/app/app-pathname-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/app/index.ts","webpack://next/./dist/src/server/route-kind.ts","webpack://next/./dist/src/server/route-matchers/app-page-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/cached-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/manifest-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/app-page-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-app-page-route.ts","webpack://next/./dist/src/server/route-matchers/app-route-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/app-route-route-matcher-provider.ts","webpack://next/./dist/src/lib/is-api-route.ts","webpack://next/./dist/src/server/route-matchers/pages-api-route-matcher.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-bundle-path-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/pages-filename-normalizer.ts","webpack://next/./dist/src/server/normalizers/built/pages/index.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-api-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matchers/pages-route-matcher.ts","webpack://next/./dist/src/server/route-matcher-providers/pages-route-matcher-provider.ts","webpack://next/./dist/src/server/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader.ts","webpack://next/./dist/src/server/lib/i18n-provider.ts","webpack://next/./dist/src/server/send-response.ts","webpack://next/./dist/src/server/lib/match-next-data-pathname.ts","webpack://next/./dist/src/server/normalizers/request/suffix.ts","webpack://next/./dist/src/server/normalizers/request/rsc.ts","webpack://next/./dist/src/server/normalizers/request/prefetch-rsc.ts","webpack://next/./dist/src/server/normalizers/request/prefix.ts","webpack://next/./dist/src/server/normalizers/request/next-data.ts","webpack://next/./dist/src/server/lib/to-route.ts","webpack://next/./dist/src/server/app-render/async-local-storage.ts","webpack://next/./dist/src/server/after/builtin-request-context.ts","webpack://next/./dist/src/server/web/spec-extension/fetch-event.ts","webpack://next/./dist/src/server/web/spec-extension/response.ts","webpack://next/./dist/src/server/web/spec-extension/adapters/request-cookies.ts","webpack://next/./dist/src/server/use-cache/handlers.ts","webpack://next/./dist/src/server/web/adapter.ts","webpack://next/./dist/src/server/normalizers/request/segment-prefix-rsc.ts","webpack://next/./dist/src/server/base-server.ts","webpack://next/./dist/src/server/app-render/strip-flight-headers.ts","webpack://next/./dist/src/shared/lib/router/utils/get-route-from-asset-path.ts","webpack://next/./dist/src/server/lib/format-hostname.ts","webpack://next/./dist/src/server/lib/experimental/ppr.ts","webpack://next/./dist/src/server/lib/patch-set-header.ts","webpack://next/./dist/src/server/lib/fix-mojibake.ts","webpack://next/./dist/src/client/components/router-reducer/compute-changed-path.ts","webpack://next/./dist/src/server/app-render/parse-and-validate-flight-router-state.tsx","webpack://next/./dist/src/lib/url.ts","webpack://next/./dist/src/server/lib/streaming-metadata.ts","webpack://next/./dist/src/server/utils.ts","webpack://next/./dist/src/lib/fallback.ts","webpack://next/./dist/src/server/lib/server-action-request-meta.ts","webpack://next/./dist/src/server/route-modules/checks.ts","webpack://next/./dist/src/server/require.ts","webpack://next/./dist/src/lib/interop-default.ts","webpack://next/./dist/src/lib/wait.ts","webpack://next/./dist/src/server/app-render/encryption-utils.ts","webpack://next/./dist/src/server/load-components.ts","webpack://next/./dist/src/server/app-render/action-utils.ts","webpack://next/./dist/src/shared/lib/router/utils/middleware-route-matcher.ts","webpack://next/./dist/src/lib/batcher.ts","webpack://next/./dist/src/lib/scheduler.ts","webpack://next/./dist/src/server/response-cache/types.ts","webpack://next/./dist/src/server/response-cache/utils.ts","webpack://next/./dist/src/server/response-cache/index.ts","webpack://next/./dist/src/lib/multi-file-writer.ts","webpack://next/./dist/src/server/lib/incremental-cache/file-system-cache.ts","webpack://next/./dist/src/server/lib/incremental-cache/index.ts","webpack://next/./dist/src/server/lib/node-fs-methods.ts","webpack://next/./dist/src/server/lib/mock-request.ts","webpack://next/./dist/src/lib/format-dynamic-import-path.ts","webpack://next/./dist/src/server/lib/async-callback-set.ts","webpack://next/./dist/src/server/lib/router-utils/is-postpone.ts","webpack://next/./dist/src/server/lib/module-loader/node-module-loader.ts","webpack://next/./dist/src/server/lib/router-utils/router-server-context.ts","webpack://next/./dist/src/server/next-server.ts","webpack://next/./dist/src/server/route-matches/pages-api-route-match.ts","webpack://next/./dist/src/server/setup-http-agent-env.ts","webpack://next/./dist/src/lib/static-env.ts","webpack://next/./dist/src/server/body-streams.ts"],"sourcesContent":["/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray;\nfunction noop() {}\nvar ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, props) {\n  var refProp = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== refProp ? refProp : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(oldElement.type, newKey, oldElement.props);\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cacheSignal = function () {\n  return null;\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    null !== prevTransition &&\n      null !== currentTransition.types &&\n      (prevTransition.types = currentTransition.types),\n      (ReactSharedInternals.T = prevTransition);\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.2.0-canary-0bdb9206-20250818\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","(()=>{var e={383:e=>{\"use strict\";function _searchLast(e,t){const n=Array.from(e.matchAll(t));return n.length>0?n.slice(-1)[0].index:-1}function _interpolate(e,t,n){const r=_searchLast(e,/(?!(?<=\\\\))\\$/g);if(r===-1)return e;const o=e.slice(r);const s=/((?!(?<=\\\\))\\${?([\\w]+)(?::-([^}\\\\]*))?}?)/;const i=o.match(s);if(i!=null){const[,r,o,s]=i;return _interpolate(e.replace(r,t[o]||s||n.parsed[o]||\"\"),t,n)}return e}function _resolveEscapeSequences(e){return e.replace(/\\\\\\$/g,\"$\")}function expand(e){const t=e.ignoreProcessEnv?{}:process.env;for(const n in e.parsed){const r=Object.prototype.hasOwnProperty.call(t,n)?t[n]:e.parsed[n];e.parsed[n]=_resolveEscapeSequences(_interpolate(r,t,e))}for(const n in e.parsed){t[n]=e.parsed[n]}return e}e.exports.j=expand},234:(e,t,n)=>{const r=n(147);const o=n(17);const s=n(37);const i=n(113);const c=n(803);const a=c.version;const p=/(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/gm;function parse(e){const t={};let n=e.toString();n=n.replace(/\\r\\n?/gm,\"\\n\");let r;while((r=p.exec(n))!=null){const e=r[1];let n=r[2]||\"\";n=n.trim();const o=n[0];n=n.replace(/^(['\"`])([\\s\\S]*)\\1$/gm,\"$2\");if(o==='\"'){n=n.replace(/\\\\n/g,\"\\n\");n=n.replace(/\\\\r/g,\"\\r\")}t[e]=n}return t}function _parseVault(e){const t=_vaultPath(e);const n=l.configDotenv({path:t});if(!n.parsed){throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`)}const r=_dotenvKey(e).split(\",\");const o=r.length;let s;for(let e=0;e<o;e++){try{const t=r[e].trim();const o=_instructions(n,t);s=l.decrypt(o.ciphertext,o.key);break}catch(t){if(e+1>=o){throw t}}}return l.parse(s)}function _log(e){console.log(`[dotenv@${a}][INFO] ${e}`)}function _warn(e){console.log(`[dotenv@${a}][WARN] ${e}`)}function _debug(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function _dotenvKey(e){if(e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0){return e.DOTENV_KEY}if(process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0){return process.env.DOTENV_KEY}return\"\"}function _instructions(e,t){let n;try{n=new URL(t)}catch(e){if(e.code===\"ERR_INVALID_URL\"){throw new Error(\"INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development\")}throw e}const r=n.password;if(!r){throw new Error(\"INVALID_DOTENV_KEY: Missing key part\")}const o=n.searchParams.get(\"environment\");if(!o){throw new Error(\"INVALID_DOTENV_KEY: Missing environment part\")}const s=`DOTENV_VAULT_${o.toUpperCase()}`;const i=e.parsed[s];if(!i){throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`)}return{ciphertext:i,key:r}}function _vaultPath(e){let t=o.resolve(process.cwd(),\".env\");if(e&&e.path&&e.path.length>0){t=e.path}return t.endsWith(\".vault\")?t:`${t}.vault`}function _resolveHome(e){return e[0]===\"~\"?o.join(s.homedir(),e.slice(1)):e}function _configVault(e){_log(\"Loading env from encrypted .env.vault\");const t=l._parseVault(e);let n=process.env;if(e&&e.processEnv!=null){n=e.processEnv}l.populate(n,t,e);return{parsed:t}}function configDotenv(e){let t=o.resolve(process.cwd(),\".env\");let n=\"utf8\";const s=Boolean(e&&e.debug);if(e){if(e.path!=null){t=_resolveHome(e.path)}if(e.encoding!=null){n=e.encoding}}try{const o=l.parse(r.readFileSync(t,{encoding:n}));let s=process.env;if(e&&e.processEnv!=null){s=e.processEnv}l.populate(s,o,e);return{parsed:o}}catch(e){if(s){_debug(`Failed to load ${t} ${e.message}`)}return{error:e}}}function config(e){const t=_vaultPath(e);if(_dotenvKey(e).length===0){return l.configDotenv(e)}if(!r.existsSync(t)){_warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);return l.configDotenv(e)}return l._configVault(e)}function decrypt(e,t){const n=Buffer.from(t.slice(-64),\"hex\");let r=Buffer.from(e,\"base64\");const o=r.slice(0,12);const s=r.slice(-16);r=r.slice(12,-16);try{const e=i.createDecipheriv(\"aes-256-gcm\",n,o);e.setAuthTag(s);return`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError;const n=e.message===\"Invalid key length\";const r=e.message===\"Unsupported state or unable to authenticate data\";if(t||n){const e=\"INVALID_DOTENV_KEY: It must be 64 characters long (or more)\";throw new Error(e)}else if(r){const e=\"DECRYPTION_FAILED: Please check your DOTENV_KEY\";throw new Error(e)}else{console.error(\"Error: \",e.code);console.error(\"Error: \",e.message);throw e}}}function populate(e,t,n={}){const r=Boolean(n&&n.debug);const o=Boolean(n&&n.override);if(typeof t!==\"object\"){throw new Error(\"OBJECT_REQUIRED: Please check the processEnv argument being passed to populate\")}for(const n of Object.keys(t)){if(Object.prototype.hasOwnProperty.call(e,n)){if(o===true){e[n]=t[n]}if(r){if(o===true){_debug(`\"${n}\" is already defined and WAS overwritten`)}else{_debug(`\"${n}\" is already defined and was NOT overwritten`)}}}else{e[n]=t[n]}}}const l={configDotenv:configDotenv,_configVault:_configVault,_parseVault:_parseVault,config:config,decrypt:decrypt,parse:parse,populate:populate};e.exports.configDotenv=l.configDotenv;e.exports._configVault=l._configVault;e.exports._parseVault=l._parseVault;e.exports.config=l.config;e.exports.decrypt=l.decrypt;e.exports.parse=l.parse;e.exports.populate=l.populate;e.exports=l},113:e=>{\"use strict\";e.exports=require(\"crypto\")},147:e=>{\"use strict\";e.exports=require(\"fs\")},37:e=>{\"use strict\";e.exports=require(\"os\")},17:e=>{\"use strict\";e.exports=require(\"path\")},803:e=>{\"use strict\";e.exports=JSON.parse('{\"name\":\"dotenv\",\"version\":\"16.3.1\",\"description\":\"Loads environment variables from .env file\",\"main\":\"lib/main.js\",\"types\":\"lib/main.d.ts\",\"exports\":{\".\":{\"types\":\"./lib/main.d.ts\",\"require\":\"./lib/main.js\",\"default\":\"./lib/main.js\"},\"./config\":\"./config.js\",\"./config.js\":\"./config.js\",\"./lib/env-options\":\"./lib/env-options.js\",\"./lib/env-options.js\":\"./lib/env-options.js\",\"./lib/cli-options\":\"./lib/cli-options.js\",\"./lib/cli-options.js\":\"./lib/cli-options.js\",\"./package.json\":\"./package.json\"},\"scripts\":{\"dts-check\":\"tsc --project tests/types/tsconfig.json\",\"lint\":\"standard\",\"lint-readme\":\"standard-markdown\",\"pretest\":\"npm run lint && npm run dts-check\",\"test\":\"tap tests/*.js --100 -Rspec\",\"prerelease\":\"npm test\",\"release\":\"standard-version\"},\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/motdotla/dotenv.git\"},\"funding\":\"https://github.com/motdotla/dotenv?sponsor=1\",\"keywords\":[\"dotenv\",\"env\",\".env\",\"environment\",\"variables\",\"config\",\"settings\"],\"readmeFilename\":\"README.md\",\"license\":\"BSD-2-Clause\",\"devDependencies\":{\"@definitelytyped/dtslint\":\"^0.0.133\",\"@types/node\":\"^18.11.3\",\"decache\":\"^4.6.1\",\"sinon\":\"^14.0.1\",\"standard\":\"^17.0.0\",\"standard-markdown\":\"^7.1.0\",\"standard-version\":\"^9.5.0\",\"tap\":\"^16.3.0\",\"tar\":\"^6.1.11\",\"typescript\":\"^4.8.4\"},\"engines\":{\"node\":\">=12\"},\"browser\":{\"fs\":false}}')}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var o=t[n]={exports:{}};var s=true;try{e[n](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return o.exports}(()=>{__nccwpck_require__.n=e=>{var t=e&&e.__esModule?()=>e[\"default\"]:()=>e;__nccwpck_require__.d(t,{a:t});return t}})();(()=>{__nccwpck_require__.d=(e,t)=>{for(var n in t){if(__nccwpck_require__.o(t,n)&&!__nccwpck_require__.o(e,n)){Object.defineProperty(e,n,{enumerable:true,get:t[n]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!==\"undefined\"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"})}Object.defineProperty(e,\"__esModule\",{value:true})}})();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{\"use strict\";__nccwpck_require__.r(n);__nccwpck_require__.d(n,{initialEnv:()=>a,updateInitialEnv:()=>updateInitialEnv,processEnv:()=>processEnv,resetEnv:()=>resetEnv,loadEnvConfig:()=>loadEnvConfig});var e=__nccwpck_require__(147);var t=__nccwpck_require__.n(e);var r=__nccwpck_require__(17);var o=__nccwpck_require__.n(r);var s=__nccwpck_require__(234);var i=__nccwpck_require__.n(s);var c=__nccwpck_require__(383);let a=undefined;let p=undefined;let l=undefined;let u=[];let _=[];function updateInitialEnv(e){Object.assign(a||{},e)}function replaceProcessEnv(e){Object.keys(process.env).forEach((t=>{if(!t.startsWith(\"__NEXT_PRIVATE\")){if(e[t]===undefined||e[t]===\"\"){delete process.env[t]}}}));Object.entries(e).forEach((([e,t])=>{process.env[e]=t}))}function processEnv(e,t,n=console,o=false,i){var p;if(!a){a=Object.assign({},process.env)}if(!o&&(process.env.__NEXT_PROCESSED_ENV||e.length===0)){return[process.env]}process.env.__NEXT_PROCESSED_ENV=\"true\";const l=Object.assign({},a);const u={};for(const o of e){try{let e={};e.parsed=s.parse(o.contents);e=(0,c.j)(e);if(e.parsed&&!_.some((e=>e.contents===o.contents&&e.path===o.path))){i===null||i===void 0?void 0:i(o.path)}for(const t of Object.keys(e.parsed||{})){if(typeof u[t]===\"undefined\"&&typeof l[t]===\"undefined\"){u[t]=(p=e.parsed)===null||p===void 0?void 0:p[t]}}o.env=e.parsed||{}}catch(e){n.error(`Failed to load env from ${r.join(t||\"\",o.path)}`,e)}}return[Object.assign(process.env,u),u]}function resetEnv(){if(a){replaceProcessEnv(a)}}function loadEnvConfig(t,n,o=console,s=false,i){if(!a){a=Object.assign({},process.env)}if(p&&!s){return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}replaceProcessEnv(a);_=u;u=[];const c=process.env.NODE_ENV===\"test\";const d=c?\"test\":n?\"development\":\"production\";const f=[`.env.${d}.local`,d!==\"test\"&&`.env.local`,`.env.${d}`,\".env\"].filter(Boolean);for(const n of f){const s=r.join(t,n);try{const t=e.statSync(s);if(!t.isFile()&&!t.isFIFO()){continue}const r=e.readFileSync(s,\"utf8\");u.push({path:n,contents:r,env:{}})}catch(e){if(e.code!==\"ENOENT\"){o.error(`Failed to load env from ${n}`,e)}}}[p,l]=processEnv(u,t,o,s,i);return{combinedEnv:p,parsedEnv:l,loadedEnvFiles:u}}})();module.exports=n})();","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var n=e;Object.defineProperty(n,\"__esModule\",{value:true});n.pathToRegexp=n.tokensToRegexp=n.regexpToFunction=n.match=n.tokensToFunction=n.compile=n.parse=void 0;function lexer(e){var n=[];var r=0;while(r<e.length){var t=e[r];if(t===\"*\"||t===\"+\"||t===\"?\"){n.push({type:\"MODIFIER\",index:r,value:e[r++]});continue}if(t===\"\\\\\"){n.push({type:\"ESCAPED_CHAR\",index:r++,value:e[r++]});continue}if(t===\"{\"){n.push({type:\"OPEN\",index:r,value:e[r++]});continue}if(t===\"}\"){n.push({type:\"CLOSE\",index:r,value:e[r++]});continue}if(t===\":\"){var a=\"\";var i=r+1;while(i<e.length){var o=e.charCodeAt(i);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){a+=e[i++];continue}break}if(!a)throw new TypeError(\"Missing parameter name at \".concat(r));n.push({type:\"NAME\",index:r,value:a});r=i;continue}if(t===\"(\"){var c=1;var f=\"\";var i=r+1;if(e[i]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '.concat(i))}while(i<e.length){if(e[i]===\"\\\\\"){f+=e[i++]+e[i++];continue}if(e[i]===\")\"){c--;if(c===0){i++;break}}else if(e[i]===\"(\"){c++;if(e[i+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \".concat(i))}}f+=e[i++]}if(c)throw new TypeError(\"Unbalanced pattern at \".concat(r));if(!f)throw new TypeError(\"Missing pattern at \".concat(r));n.push({type:\"PATTERN\",index:r,value:f});r=i;continue}n.push({type:\"CHAR\",index:r,value:e[r++]})}n.push({type:\"END\",index:r,value:\"\"});return n}function parse(e,n){if(n===void 0){n={}}var r=lexer(e);var t=n.prefixes,a=t===void 0?\"./\":t,i=n.delimiter,o=i===void 0?\"/#?\":i;var c=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<r.length&&r[u].type===e)return r[u++].value};var mustConsume=function(e){var n=tryConsume(e);if(n!==undefined)return n;var t=r[u],a=t.type,i=t.index;throw new TypeError(\"Unexpected \".concat(a,\" at \").concat(i,\", expected \").concat(e))};var consumeText=function(){var e=\"\";var n;while(n=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=n}return e};var isSafe=function(e){for(var n=0,r=o;n<r.length;n++){var t=r[n];if(e.indexOf(t)>-1)return true}return false};var safePattern=function(e){var n=c[c.length-1];var r=e||(n&&typeof n===\"string\"?n:\"\");if(n&&!r){throw new TypeError('Must have text between two parameters, missing text after \"'.concat(n.name,'\"'))}if(!r||isSafe(r))return\"[^\".concat(escapeString(o),\"]+?\");return\"(?:(?!\".concat(escapeString(r),\")[^\").concat(escapeString(o),\"])+?\")};while(u<r.length){var v=tryConsume(\"CHAR\");var s=tryConsume(\"NAME\");var d=tryConsume(\"PATTERN\");if(s||d){var g=v||\"\";if(a.indexOf(g)===-1){p+=g;g=\"\"}if(p){c.push(p);p=\"\"}c.push({name:s||f++,prefix:g,suffix:\"\",pattern:d||safePattern(g),modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var x=v||tryConsume(\"ESCAPED_CHAR\");if(x){p+=x;continue}if(p){c.push(p);p=\"\"}var h=tryConsume(\"OPEN\");if(h){var g=consumeText();var l=tryConsume(\"NAME\")||\"\";var m=tryConsume(\"PATTERN\")||\"\";var T=consumeText();mustConsume(\"CLOSE\");c.push({name:l||(m?f++:\"\"),pattern:l&&!m?safePattern(g):m,prefix:g,suffix:T,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return c}n.parse=parse;function compile(e,n){return tokensToFunction(parse(e,n),n)}n.compile=compile;function tokensToFunction(e,n){if(n===void 0){n={}}var r=flags(n);var t=n.encode,a=t===void 0?function(e){return e}:t,i=n.validate,o=i===void 0?true:i;var c=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\".concat(e.pattern,\")$\"),r)}}));return function(n){var r=\"\";for(var t=0;t<e.length;t++){var i=e[t];if(typeof i===\"string\"){r+=i;continue}var f=n?n[i.name]:undefined;var u=i.modifier===\"?\"||i.modifier===\"*\";var p=i.modifier===\"*\"||i.modifier===\"+\";if(Array.isArray(f)){if(!p){throw new TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'))}if(f.length===0){if(u)continue;throw new TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var v=0;v<f.length;v++){var s=a(f[v],i);if(o&&!c[t].test(s)){throw new TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix}continue}if(typeof f===\"string\"||typeof f===\"number\"){var s=a(String(f),i);if(o&&!c[t].test(s)){throw new TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix;continue}if(u)continue;var d=p?\"an array\":\"a string\";throw new TypeError('Expected \"'.concat(i.name,'\" to be ').concat(d))}return r}}n.tokensToFunction=tokensToFunction;function match(e,n){var r=[];var t=pathToRegexp(e,r,n);return regexpToFunction(t,r,n)}n.match=match;function regexpToFunction(e,n,r){if(r===void 0){r={}}var t=r.decode,a=t===void 0?function(e){return e}:t;return function(r){var t=e.exec(r);if(!t)return false;var i=t[0],o=t.index;var c=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var r=n[e-1];if(r.modifier===\"*\"||r.modifier===\"+\"){c[r.name]=t[e].split(r.prefix+r.suffix).map((function(e){return a(e,r)}))}else{c[r.name]=a(t[e],r)}};for(var f=1;f<t.length;f++){_loop_1(f)}return{path:i,index:o,params:c}}}n.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,n){if(!n)return e;var r=/\\((?:\\?<(.*?)>)?(?!\\?)/g;var t=0;var a=r.exec(e.source);while(a){n.push({name:a[1]||t++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"});a=r.exec(e.source)}return e}function arrayToRegexp(e,n,r){var t=e.map((function(e){return pathToRegexp(e,n,r).source}));return new RegExp(\"(?:\".concat(t.join(\"|\"),\")\"),flags(r))}function stringToRegexp(e,n,r){return tokensToRegexp(parse(e,r),n,r)}function tokensToRegexp(e,n,r){if(r===void 0){r={}}var t=r.strict,a=t===void 0?false:t,i=r.start,o=i===void 0?true:i,c=r.end,f=c===void 0?true:c,u=r.encode,p=u===void 0?function(e){return e}:u,v=r.delimiter,s=v===void 0?\"/#?\":v,d=r.endsWith,g=d===void 0?\"\":d;var x=\"[\".concat(escapeString(g),\"]|$\");var h=\"[\".concat(escapeString(s),\"]\");var l=o?\"^\":\"\";for(var m=0,T=e;m<T.length;m++){var E=T[m];if(typeof E===\"string\"){l+=escapeString(p(E))}else{var w=escapeString(p(E.prefix));var y=escapeString(p(E.suffix));if(E.pattern){if(n)n.push(E);if(w||y){if(E.modifier===\"+\"||E.modifier===\"*\"){var R=E.modifier===\"*\"?\"?\":\"\";l+=\"(?:\".concat(w,\"((?:\").concat(E.pattern,\")(?:\").concat(y).concat(w,\"(?:\").concat(E.pattern,\"))*)\").concat(y,\")\").concat(R)}else{l+=\"(?:\".concat(w,\"(\").concat(E.pattern,\")\").concat(y,\")\").concat(E.modifier)}}else{if(E.modifier===\"+\"||E.modifier===\"*\"){throw new TypeError('Can not repeat \"'.concat(E.name,'\" without a prefix and suffix'))}l+=\"(\".concat(E.pattern,\")\").concat(E.modifier)}}else{l+=\"(?:\".concat(w).concat(y,\")\").concat(E.modifier)}}}if(f){if(!a)l+=\"\".concat(h,\"?\");l+=!r.endsWith?\"$\":\"(?=\".concat(x,\")\")}else{var A=e[e.length-1];var _=typeof A===\"string\"?h.indexOf(A[A.length-1])>-1:A===undefined;if(!a){l+=\"(?:\".concat(h,\"(?=\").concat(x,\"))?\")}if(!_){l+=\"(?=\".concat(h,\"|\").concat(x,\")\")}}return new RegExp(l,flags(r))}n.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,n,r){if(e instanceof RegExp)return regexpToRegexp(e,n);if(Array.isArray(e))return arrayToRegexp(e,n,r);return stringToRegexp(e,n,r)}n.pathToRegexp=pathToRegexp})();module.exports=e})();","// This file should be imported before any others. It sets up the environment\n// for later imports to work properly.\n\n// expose AsyncLocalStorage on global for react usage if it isn't already provided by the environment\nif (typeof (globalThis as any).AsyncLocalStorage !== 'function') {\n  const { AsyncLocalStorage } =\n    require('async_hooks') as typeof import('async_hooks')\n  ;(globalThis as any).AsyncLocalStorage = AsyncLocalStorage\n}\n\nif (typeof (globalThis as any).WebSocket !== 'function') {\n  Object.defineProperty(globalThis, 'WebSocket', {\n    configurable: true,\n    get() {\n      return (\n        require('next/dist/compiled/ws') as typeof import('next/dist/compiled/ws')\n      ).WebSocket\n    },\n    set(value) {\n      Object.defineProperty(globalThis, 'WebSocket', {\n        configurable: true,\n        writable: true,\n        value,\n      })\n    },\n  })\n}\n","// Polyfill crypto() in the Node.js environment\n\nif (!global.crypto) {\n  let webcrypto: Crypto | undefined\n\n  Object.defineProperty(global, 'crypto', {\n    enumerable: false,\n    configurable: true,\n    get() {\n      if (!webcrypto) {\n        // @ts-expect-error -- TODO: Is this actually safe?\n        webcrypto = (require('node:crypto') as typeof import('node:crypto'))\n          .webcrypto\n      }\n      return webcrypto\n    },\n    set(value: Crypto) {\n      webcrypto = value\n    },\n  })\n}\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n","(()=>{var e={318:function(e,t){(function(e,n){true?n(t):0})(this,(function(e){\"use strict\";class StructError extends TypeError{constructor(e,t){let n;const{message:r,explanation:i,...c}=e;const{path:o}=e;const a=o.length===0?r:`At path: ${o.join(\".\")} -- ${r}`;super(i??a);if(i!=null)this.cause=a;Object.assign(this,c);this.name=this.constructor.name;this.failures=()=>n??(n=[e,...t()])}}function isIterable(e){return isObject(e)&&typeof e[Symbol.iterator]===\"function\"}function isObject(e){return typeof e===\"object\"&&e!=null}function isPlainObject(e){if(Object.prototype.toString.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}function print(e){if(typeof e===\"symbol\"){return e.toString()}return typeof e===\"string\"?JSON.stringify(e):`${e}`}function shiftIterator(e){const{done:t,value:n}=e.next();return t?undefined:n}function toFailure(e,t,n,r){if(e===true){return}else if(e===false){e={}}else if(typeof e===\"string\"){e={message:e}}const{path:i,branch:c}=t;const{type:o}=n;const{refinement:a,message:s=`Expected a value of type \\`${o}\\`${a?` with refinement \\`${a}\\``:\"\"}, but received: \\`${print(r)}\\``}=e;return{value:r,type:o,refinement:a,key:i[i.length-1],path:i,branch:c,...e,message:s}}function*toFailures(e,t,n,r){if(!isIterable(e)){e=[e]}for(const i of e){const e=toFailure(i,t,n,r);if(e){yield e}}}function*run(e,t,n={}){const{path:r=[],branch:i=[e],coerce:c=false,mask:o=false}=n;const a={path:r,branch:i};if(c){e=t.coercer(e,a);if(o&&t.type!==\"type\"&&isObject(t.schema)&&isObject(e)&&!Array.isArray(e)){for(const n in e){if(t.schema[n]===undefined){delete e[n]}}}}let s=\"valid\";for(const r of t.validator(e,a)){r.explanation=n.message;s=\"not_valid\";yield[r,undefined]}for(let[u,f,l]of t.entries(e,a)){const t=run(f,l,{path:u===undefined?r:[...r,u],branch:u===undefined?i:[...i,f],coerce:c,mask:o,message:n.message});for(const n of t){if(n[0]){s=n[0].refinement!=null?\"not_refined\":\"not_valid\";yield[n[0],undefined]}else if(c){f=n[1];if(u===undefined){e=f}else if(e instanceof Map){e.set(u,f)}else if(e instanceof Set){e.add(f)}else if(isObject(e)){if(f!==undefined||u in e)e[u]=f}}}}if(s!==\"not_valid\"){for(const r of t.refiner(e,a)){r.explanation=n.message;s=\"not_refined\";yield[r,undefined]}}if(s===\"valid\"){yield[undefined,e]}}class Struct{constructor(e){const{type:t,schema:n,validator:r,refiner:i,coercer:c=(e=>e),entries:o=function*(){}}=e;this.type=t;this.schema=n;this.entries=o;this.coercer=c;if(r){this.validator=(e,t)=>{const n=r(e,t);return toFailures(n,t,this,e)}}else{this.validator=()=>[]}if(i){this.refiner=(e,t)=>{const n=i(e,t);return toFailures(n,t,this,e)}}else{this.refiner=()=>[]}}assert(e,t){return assert(e,this,t)}create(e,t){return create(e,this,t)}is(e){return is(e,this)}mask(e,t){return mask(e,this,t)}validate(e,t={}){return validate(e,this,t)}}function assert(e,t,n){const r=validate(e,t,{message:n});if(r[0]){throw r[0]}}function create(e,t,n){const r=validate(e,t,{coerce:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function mask(e,t,n){const r=validate(e,t,{coerce:true,mask:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function is(e,t){const n=validate(e,t);return!n[0]}function validate(e,t,n={}){const r=run(e,t,n);const i=shiftIterator(r);if(i[0]){const e=new StructError(i[0],(function*(){for(const e of r){if(e[0]){yield e[0]}}}));return[e,undefined]}else{const e=i[1];return[undefined,e]}}function assign(...e){const t=e[0].type===\"type\";const n=e.map((e=>e.schema));const r=Object.assign({},...n);return t?type(r):object(r)}function define(e,t){return new Struct({type:e,schema:null,validator:t})}function deprecated(e,t){return new Struct({...e,refiner:(t,n)=>t===undefined||e.refiner(t,n),validator(n,r){if(n===undefined){return true}else{t(n,r);return e.validator(n,r)}}})}function dynamic(e){return new Struct({type:\"dynamic\",schema:null,*entries(t,n){const r=e(t,n);yield*r.entries(t,n)},validator(t,n){const r=e(t,n);return r.validator(t,n)},coercer(t,n){const r=e(t,n);return r.coercer(t,n)},refiner(t,n){const r=e(t,n);return r.refiner(t,n)}})}function lazy(e){let t;return new Struct({type:\"lazy\",schema:null,*entries(n,r){t??(t=e());yield*t.entries(n,r)},validator(n,r){t??(t=e());return t.validator(n,r)},coercer(n,r){t??(t=e());return t.coercer(n,r)},refiner(n,r){t??(t=e());return t.refiner(n,r)}})}function omit(e,t){const{schema:n}=e;const r={...n};for(const e of t){delete r[e]}switch(e.type){case\"type\":return type(r);default:return object(r)}}function partial(e){const t=e instanceof Struct?{...e.schema}:{...e};for(const e in t){t[e]=optional(t[e])}return object(t)}function pick(e,t){const{schema:n}=e;const r={};for(const e of t){r[e]=n[e]}return object(r)}function struct(e,t){console.warn(\"superstruct@0.11 - The `struct` helper has been renamed to `define`.\");return define(e,t)}function any(){return define(\"any\",(()=>true))}function array(e){return new Struct({type:\"array\",schema:e,*entries(t){if(e&&Array.isArray(t)){for(const[n,r]of t.entries()){yield[n,r,e]}}},coercer(e){return Array.isArray(e)?e.slice():e},validator(e){return Array.isArray(e)||`Expected an array value, but received: ${print(e)}`}})}function bigint(){return define(\"bigint\",(e=>typeof e===\"bigint\"))}function boolean(){return define(\"boolean\",(e=>typeof e===\"boolean\"))}function date(){return define(\"date\",(e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \\`Date\\` object, but received: ${print(e)}`))}function enums(e){const t={};const n=e.map((e=>print(e))).join();for(const n of e){t[n]=n}return new Struct({type:\"enums\",schema:t,validator(t){return e.includes(t)||`Expected one of \\`${n}\\`, but received: ${print(t)}`}})}function func(){return define(\"func\",(e=>typeof e===\"function\"||`Expected a function, but received: ${print(e)}`))}function instance(e){return define(\"instance\",(t=>t instanceof e||`Expected a \\`${e.name}\\` instance, but received: ${print(t)}`))}function integer(){return define(\"integer\",(e=>typeof e===\"number\"&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${print(e)}`))}function intersection(e){return new Struct({type:\"intersection\",schema:null,*entries(t,n){for(const r of e){yield*r.entries(t,n)}},*validator(t,n){for(const r of e){yield*r.validator(t,n)}},*refiner(t,n){for(const r of e){yield*r.refiner(t,n)}}})}function literal(e){const t=print(e);const n=typeof e;return new Struct({type:\"literal\",schema:n===\"string\"||n===\"number\"||n===\"boolean\"?e:null,validator(n){return n===e||`Expected the literal \\`${t}\\`, but received: ${print(n)}`}})}function map(e,t){return new Struct({type:\"map\",schema:null,*entries(n){if(e&&t&&n instanceof Map){for(const[r,i]of n.entries()){yield[r,r,e];yield[r,i,t]}}},coercer(e){return e instanceof Map?new Map(e):e},validator(e){return e instanceof Map||`Expected a \\`Map\\` object, but received: ${print(e)}`}})}function never(){return define(\"never\",(()=>false))}function nullable(e){return new Struct({...e,validator:(t,n)=>t===null||e.validator(t,n),refiner:(t,n)=>t===null||e.refiner(t,n)})}function number(){return define(\"number\",(e=>typeof e===\"number\"&&!isNaN(e)||`Expected a number, but received: ${print(e)}`))}function object(e){const t=e?Object.keys(e):[];const n=never();return new Struct({type:\"object\",schema:e?e:null,*entries(r){if(e&&isObject(r)){const i=new Set(Object.keys(r));for(const n of t){i.delete(n);yield[n,r[n],e[n]]}for(const e of i){yield[e,r[e],n]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function optional(e){return new Struct({...e,validator:(t,n)=>t===undefined||e.validator(t,n),refiner:(t,n)=>t===undefined||e.refiner(t,n)})}function record(e,t){return new Struct({type:\"record\",schema:null,*entries(n){if(isObject(n)){for(const r in n){const i=n[r];yield[r,r,e];yield[r,i,t]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`}})}function regexp(){return define(\"regexp\",(e=>e instanceof RegExp))}function set(e){return new Struct({type:\"set\",schema:null,*entries(t){if(e&&t instanceof Set){for(const n of t){yield[n,n,e]}}},coercer(e){return e instanceof Set?new Set(e):e},validator(e){return e instanceof Set||`Expected a \\`Set\\` object, but received: ${print(e)}`}})}function string(){return define(\"string\",(e=>typeof e===\"string\"||`Expected a string, but received: ${print(e)}`))}function tuple(e){const t=never();return new Struct({type:\"tuple\",schema:null,*entries(n){if(Array.isArray(n)){const r=Math.max(e.length,n.length);for(let i=0;i<r;i++){yield[i,n[i],e[i]||t]}}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${print(e)}`}})}function type(e){const t=Object.keys(e);return new Struct({type:\"type\",schema:e,*entries(n){if(isObject(n)){for(const r of t){yield[r,n[r],e[r]]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function union(e){const t=e.map((e=>e.type)).join(\" | \");return new Struct({type:\"union\",schema:null,coercer(t){for(const n of e){const[e,r]=n.validate(t,{coerce:true});if(!e){return r}}return t},validator(n,r){const i=[];for(const t of e){const[...e]=run(n,t,r);const[c]=e;if(!c[0]){return[]}else{for(const[t]of e){if(t){i.push(t)}}}}return[`Expected the value to satisfy a union of \\`${t}\\`, but received: ${print(n)}`,...i]}})}function unknown(){return define(\"unknown\",(()=>true))}function coerce(e,t,n){return new Struct({...e,coercer:(r,i)=>is(r,t)?e.coercer(n(r,i),i):e.coercer(r,i)})}function defaulted(e,t,n={}){return coerce(e,unknown(),(e=>{const r=typeof t===\"function\"?t():t;if(e===undefined){return r}if(!n.strict&&isPlainObject(e)&&isPlainObject(r)){const t={...e};let n=false;for(const e in r){if(t[e]===undefined){t[e]=r[e];n=true}}if(n){return t}}return e}))}function trimmed(e){return coerce(e,string(),(e=>e.trim()))}function empty(e){return refine(e,\"empty\",(t=>{const n=getSize(t);return n===0||`Expected an empty ${e.type} but received one with a size of \\`${n}\\``}))}function getSize(e){if(e instanceof Map||e instanceof Set){return e.size}else{return e.length}}function max(e,t,n={}){const{exclusive:r}=n;return refine(e,\"max\",(n=>r?n<t:n<=t||`Expected a ${e.type} less than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function min(e,t,n={}){const{exclusive:r}=n;return refine(e,\"min\",(n=>r?n>t:n>=t||`Expected a ${e.type} greater than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function nonempty(e){return refine(e,\"nonempty\",(t=>{const n=getSize(t);return n>0||`Expected a nonempty ${e.type} but received an empty one`}))}function pattern(e,t){return refine(e,\"pattern\",(n=>t.test(n)||`Expected a ${e.type} matching \\`/${t.source}/\\` but received \"${n}\"`))}function size(e,t,n=t){const r=`Expected a ${e.type}`;const i=t===n?`of \\`${t}\\``:`between \\`${t}\\` and \\`${n}\\``;return refine(e,\"size\",(e=>{if(typeof e===\"number\"||e instanceof Date){return t<=e&&e<=n||`${r} ${i} but received \\`${e}\\``}else if(e instanceof Map||e instanceof Set){const{size:c}=e;return t<=c&&c<=n||`${r} with a size ${i} but received one with a size of \\`${c}\\``}else{const{length:c}=e;return t<=c&&c<=n||`${r} with a length ${i} but received one with a length of \\`${c}\\``}}))}function refine(e,t,n){return new Struct({...e,*refiner(r,i){yield*e.refiner(r,i);const c=n(r,i);const o=toFailures(c,i,e,r);for(const e of o){yield{...e,refinement:t}}}})}e.Struct=Struct;e.StructError=StructError;e.any=any;e.array=array;e.assert=assert;e.assign=assign;e.bigint=bigint;e.boolean=boolean;e.coerce=coerce;e.create=create;e.date=date;e.defaulted=defaulted;e.define=define;e.deprecated=deprecated;e.dynamic=dynamic;e.empty=empty;e.enums=enums;e.func=func;e.instance=instance;e.integer=integer;e.intersection=intersection;e.is=is;e.lazy=lazy;e.literal=literal;e.map=map;e.mask=mask;e.max=max;e.min=min;e.never=never;e.nonempty=nonempty;e.nullable=nullable;e.number=number;e.object=object;e.omit=omit;e.optional=optional;e.partial=partial;e.pattern=pattern;e.pick=pick;e.record=record;e.refine=refine;e.regexp=regexp;e.set=set;e.size=size;e.string=string;e.struct=struct;e.trimmed=trimmed;e.tuple=tuple;e.type=type;e.union=union;e.unknown=unknown;e.validate=validate}))}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t={};e[318](0,t);module.exports=t})();","// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * We extend Web Crypto APIs during builds and revalidates to ensure that prerenders don't observe random bytes\n * When cacheComponents is enabled. Random bytes are a form of IO even if they resolve synchronously. When cacheComponents is\n * enabled we need to ensure that random bytes are excluded from prerenders unless they are cached.\n *\n *\n * The extensions here never error nor alter the underlying return values and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nlet webCrypto: typeof crypto\nif (process.env.NEXT_RUNTIME === 'edge') {\n  webCrypto = crypto\n} else {\n  if (typeof crypto === 'undefined') {\n    // @ts-expect-error -- TODO: Is this actually safe?\n    webCrypto = (require('node:crypto') as typeof import('node:crypto'))\n      .webcrypto\n  } else {\n    webCrypto = crypto\n  }\n}\n\nconst getRandomValuesExpression = '`crypto.getRandomValues()`'\ntry {\n  const _getRandomValues = webCrypto.getRandomValues\n  webCrypto.getRandomValues = function getRandomValues() {\n    io(getRandomValuesExpression, 'crypto')\n    return _getRandomValues.apply(webCrypto, arguments as any)\n  }\n} catch {\n  console.error(\n    `Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n\nconst randomUUIDExpression = '`crypto.randomUUID()`'\ntry {\n  const _randomUUID = webCrypto.randomUUID\n  webCrypto.randomUUID = function randomUUID() {\n    io(randomUUIDExpression, 'crypto')\n    return _randomUUID.apply(webCrypto, arguments as any)\n  } as typeof _randomUUID\n} catch {\n  console.error(\n    `Failed to install ${getRandomValuesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n","import type { SourceMap } from 'module'\nimport { LRUCache } from './lru-cache'\n\nfunction noSourceMap(): SourceMap | undefined {\n  return undefined\n}\n\n// Edge runtime does not implement `module`\nconst nativeFindSourceMap =\n  process.env.NEXT_RUNTIME === 'edge'\n    ? noSourceMap\n    : (require('module') as typeof import('module')).findSourceMap\n\n/**\n * https://tc39.es/source-map/#index-map\n */\ninterface IndexSourceMapSection {\n  offset: {\n    line: number\n    column: number\n  }\n  map: BasicSourceMapPayload\n}\n\n// TODO(veil): Upstream types\n/** https://tc39.es/ecma426/#sec-index-source-map */\ninterface IndexSourceMap {\n  version: number\n  file: string\n  sections: IndexSourceMapSection[]\n}\n\n/** https://tc39.es/ecma426/#sec-source-map-format */\nexport interface BasicSourceMapPayload {\n  version: number\n  // TODO: Move to https://github.com/jridgewell/sourcemaps which is actively maintained\n  /** WARNING: `file` is optional. */\n  file: string\n  sourceRoot?: string\n  // TODO: Move to https://github.com/jridgewell/sourcemaps which is actively maintained\n  /** WARNING: `sources[number]` can be `null`. */\n  sources: Array<string>\n  names: Array<string>\n  mappings: string\n  ignoreList?: number[]\n}\n\nexport type ModernSourceMapPayload = BasicSourceMapPayload | IndexSourceMap\n\nexport function sourceMapIgnoreListsEverything(\n  sourceMap: BasicSourceMapPayload\n): boolean {\n  return (\n    sourceMap.ignoreList !== undefined &&\n    sourceMap.sources.length === sourceMap.ignoreList.length\n  )\n}\n\n/**\n * Finds the sourcemap payload applicable to a given frame.\n * Equal to the input unless an Index Source Map is used.\n * @param line0 - The line number of the frame, 0-based.\n * @param column0 - The column number of the frame, 0-based.\n */\nexport function findApplicableSourceMapPayload(\n  line0: number,\n  column0: number,\n  payload: ModernSourceMapPayload\n): BasicSourceMapPayload | undefined {\n  if ('sections' in payload) {\n    if (payload.sections.length === 0) {\n      return undefined\n    }\n\n    // Sections must not overlap and must be sorted: https://tc39.es/source-map/#section-object\n    // Therefore the last section that has an offset less than or equal to the frame is the applicable one.\n    const sections = payload.sections\n    let left = 0\n    let right = sections.length - 1\n    let result: IndexSourceMapSection | null = null\n\n    while (left <= right) {\n      // fast Math.floor\n      const middle = ~~((left + right) / 2)\n      const section = sections[middle]\n      const offset = section.offset\n\n      if (\n        offset.line < line0 ||\n        (offset.line === line0 && offset.column <= column0)\n      ) {\n        result = section\n        left = middle + 1\n      } else {\n        right = middle - 1\n      }\n    }\n\n    return result === null ? undefined : result.map\n  } else {\n    return payload\n  }\n}\n\nconst didWarnAboutInvalidSourceMapDEV = new Set<string>()\n\nconst findSourceMap: (scriptNameOrSourceURL: string) => SourceMap | undefined =\n  process.env.NEXT_RUNTIME === 'nodejs' &&\n  process.versions.node?.startsWith('18')\n    ? // Node.js 18 has a horribly slow `findSourceMap` implementation\n      noSourceMap\n    : nativeFindSourceMap\n\nexport function filterStackFrameDEV(\n  sourceURL: string,\n  functionName: string,\n  line1: number,\n  column1: number\n): boolean {\n  if (sourceURL === '') {\n    // The default implementation filters out <anonymous> stack frames\n    // but we want to retain them because current Server Components and\n    // built-in Components in parent stacks don't have source location.\n    // Filter out frames that show up in Promises to get good names in React's\n    // Server Request track until we come up with a better heuristic.\n    return functionName !== 'new Promise'\n  }\n  if (sourceURL.startsWith('node:') || sourceURL.includes('node_modules')) {\n    return false\n  }\n  try {\n    // Node.js loads source maps eagerly so this call is cheap.\n    // TODO: ESM sourcemaps are O(1) but CommonJS sourcemaps are O(Number of CJS modules).\n    // Make sure this doesn't adversely affect performance when CJS is used by Next.js.\n    const sourceMap = findSourceMap(sourceURL)\n    if (sourceMap === undefined) {\n      // No source map assoicated.\n      // TODO: Node.js types should reflect that `findSourceMap` can return `undefined`.\n      return true\n    }\n    const sourceMapPayload = findApplicableSourceMapPayload(\n      line1 - 1,\n      column1 - 1,\n      sourceMap.payload\n    )\n    if (sourceMapPayload === undefined) {\n      // No source map section applicable to the frame.\n      return true\n    }\n    return !sourceMapIgnoreListsEverything(sourceMapPayload)\n  } catch (cause) {\n    if (process.env.NODE_ENV !== 'production') {\n      // TODO: Share cache with patch-error-inspect\n      if (!didWarnAboutInvalidSourceMapDEV.has(sourceURL)) {\n        didWarnAboutInvalidSourceMapDEV.add(sourceURL)\n        // We should not log an actual error instance here because that will re-enter\n        // this codepath during error inspection and could lead to infinite recursion.\n        console.error(\n          `${sourceURL}: Invalid source map. Only conformant source maps can be used to filter stack frames. Cause: ${cause}`\n        )\n      }\n    }\n\n    return true\n  }\n}\n\nconst invalidSourceMap = Symbol('invalid-source-map')\nconst sourceMapURLs = new LRUCache<string | typeof invalidSourceMap>(\n  512 * 1024 * 1024,\n  (url) =>\n    url === invalidSourceMap\n      ? // Ideally we'd account for key length. So we just guestimate a small source map\n        // so that we don't create a huge cache with empty source maps.\n        8 * 1024\n      : // these URLs contain only ASCII characters so .length is equal to Buffer.byteLength\n        url.length\n)\nexport function findSourceMapURLDEV(\n  scriptNameOrSourceURL: string\n): string | null {\n  let sourceMapURL = sourceMapURLs.get(scriptNameOrSourceURL)\n  if (sourceMapURL === undefined) {\n    let sourceMapPayload: ModernSourceMapPayload | undefined\n    try {\n      sourceMapPayload = findSourceMap(scriptNameOrSourceURL)?.payload\n    } catch (cause) {\n      console.error(\n        `${scriptNameOrSourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n    }\n\n    if (sourceMapPayload === undefined) {\n      sourceMapURL = invalidSourceMap\n    } else {\n      // TODO: Might be more efficient to extract the relevant section from Index Maps.\n      // Unclear if that search is worth the smaller payload we have to stringify.\n      const sourceMapJSON = JSON.stringify(sourceMapPayload)\n      const sourceMapURLData = Buffer.from(sourceMapJSON, 'utf8').toString(\n        'base64'\n      )\n      sourceMapURL = `data:application/json;base64,${sourceMapURLData}`\n    }\n\n    sourceMapURLs.set(scriptNameOrSourceURL, sourceMapURL)\n  }\n\n  return sourceMapURL === invalidSourceMap ? null : sourceMapURL\n}\n\nexport function devirtualizeReactServerURL(sourceURL: string): string {\n  if (sourceURL.startsWith('about://React/')) {\n    // about://React/Server/file://<filename>?42 => file://<filename>\n    const envIdx = sourceURL.indexOf('/', 'about://React/'.length)\n    const suffixIdx = sourceURL.lastIndexOf('?')\n    if (envIdx > -1 && suffixIdx > -1) {\n      return decodeURI(sourceURL.slice(envIdx + 1, suffixIdx))\n    }\n  }\n  return sourceURL\n}\n\nfunction isAnonymousFrameLikelyJSNative(methodName: string): boolean {\n  // Anonymous frames can also be produced in React parent stacks either from\n  // host components or Server Components. We don't want to ignore those.\n  // This could hide user-space methods that are named like native JS methods but\n  // should you really do that?\n  return (\n    // e.g. JSON.parse\n    methodName.startsWith('JSON.') ||\n    // E.g. Promise.withResolves\n    methodName.startsWith('Function.') ||\n    // various JS built-ins\n    methodName.startsWith('Promise.') ||\n    methodName.startsWith('Array.') ||\n    methodName.startsWith('Set.') ||\n    methodName.startsWith('Map.')\n  )\n}\n\nexport function ignoreListAnonymousStackFramesIfSandwiched<Frame>(\n  frames: Frame[],\n  isAnonymousFrame: (frame: Frame) => boolean,\n  isIgnoredFrame: (frame: Frame) => boolean,\n  getMethodName: (frame: Frame) => string,\n  /** only passes frames for which `isAnonymousFrame` and their method is a native JS method or `isIgnoredFrame` return true */\n  ignoreFrame: (frame: Frame) => void\n): void {\n  for (let i = 1; i < frames.length; i++) {\n    const currentFrame = frames[i]\n    if (\n      !(\n        isAnonymousFrame(currentFrame) &&\n        isAnonymousFrameLikelyJSNative(getMethodName(currentFrame))\n      )\n    ) {\n      continue\n    }\n\n    const previousFrameIsIgnored = isIgnoredFrame(frames[i - 1])\n    if (previousFrameIsIgnored && i < frames.length - 1) {\n      let ignoreSandwich = false\n      let j = i + 1\n      for (j; j < frames.length; j++) {\n        const nextFrame = frames[j]\n        const nextFrameIsAnonymous =\n          isAnonymousFrame(nextFrame) &&\n          isAnonymousFrameLikelyJSNative(getMethodName(nextFrame))\n        if (nextFrameIsAnonymous) {\n          continue\n        }\n\n        const nextFrameIsIgnored = isIgnoredFrame(nextFrame)\n        if (nextFrameIsIgnored) {\n          ignoreSandwich = true\n          break\n        }\n      }\n\n      if (ignoreSandwich) {\n        for (i; i < j; i++) {\n          ignoreFrame(frames[i])\n        }\n      }\n    }\n  }\n}\n","// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n","/**\n * Node in the doubly-linked list used for LRU tracking.\n * Each node represents a cache entry with bidirectional pointers.\n */\nclass LRUNode<T> {\n  public readonly key: string\n  public data: T\n  public size: number\n  public prev: LRUNode<T> | SentinelNode<T> | null = null\n  public next: LRUNode<T> | SentinelNode<T> | null = null\n\n  constructor(key: string, data: T, size: number) {\n    this.key = key\n    this.data = data\n    this.size = size\n  }\n}\n\n/**\n * Sentinel node used for head/tail boundaries.\n * These nodes don't contain actual cache data but simplify list operations.\n */\nclass SentinelNode<T> {\n  public prev: LRUNode<T> | SentinelNode<T> | null = null\n  public next: LRUNode<T> | SentinelNode<T> | null = null\n}\n\n/**\n * LRU (Least Recently Used) Cache implementation using a doubly-linked list\n * and hash map for O(1) operations.\n *\n * Algorithm:\n * - Uses a doubly-linked list to maintain access order (most recent at head)\n * - Hash map provides O(1) key-to-node lookup\n * - Sentinel head/tail nodes simplify edge case handling\n * - Size-based eviction supports custom size calculation functions\n *\n * Data Structure Layout:\n * HEAD <-> [most recent] <-> ... <-> [least recent] <-> TAIL\n *\n * Operations:\n * - get(): Move accessed node to head (mark as most recent)\n * - set(): Add new node at head, evict from tail if over capacity\n * - Eviction: Remove least recent node (tail.prev) when size exceeds limit\n */\nexport class LRUCache<T> {\n  private readonly cache: Map<string, LRUNode<T>> = new Map()\n  private readonly head: SentinelNode<T>\n  private readonly tail: SentinelNode<T>\n  private totalSize: number = 0\n  private readonly maxSize: number\n  private readonly calculateSize: ((value: T) => number) | undefined\n\n  constructor(maxSize: number, calculateSize?: (value: T) => number) {\n    this.maxSize = maxSize\n    this.calculateSize = calculateSize\n\n    // Create sentinel nodes to simplify doubly-linked list operations\n    // HEAD <-> TAIL (empty list)\n    this.head = new SentinelNode<T>()\n    this.tail = new SentinelNode<T>()\n    this.head.next = this.tail\n    this.tail.prev = this.head\n  }\n\n  /**\n   * Adds a node immediately after the head (marks as most recently used).\n   * Used when inserting new items or when an item is accessed.\n   * PRECONDITION: node must be disconnected (prev/next should be null)\n   */\n  private addToHead(node: LRUNode<T>): void {\n    node.prev = this.head\n    node.next = this.head.next\n    // head.next is always non-null (points to tail or another node)\n    this.head.next!.prev = node\n    this.head.next = node\n  }\n\n  /**\n   * Removes a node from its current position in the doubly-linked list.\n   * Updates the prev/next pointers of adjacent nodes to maintain list integrity.\n   * PRECONDITION: node must be connected (prev/next are non-null)\n   */\n  private removeNode(node: LRUNode<T>): void {\n    // Connected nodes always have non-null prev/next\n    node.prev!.next = node.next\n    node.next!.prev = node.prev\n  }\n\n  /**\n   * Moves an existing node to the head position (marks as most recently used).\n   * This is the core LRU operation - accessed items become most recent.\n   */\n  private moveToHead(node: LRUNode<T>): void {\n    this.removeNode(node)\n    this.addToHead(node)\n  }\n\n  /**\n   * Removes and returns the least recently used node (the one before tail).\n   * This is called during eviction when the cache exceeds capacity.\n   * PRECONDITION: cache is not empty (ensured by caller)\n   */\n  private removeTail(): LRUNode<T> {\n    const lastNode = this.tail.prev as LRUNode<T>\n    // tail.prev is always non-null and always LRUNode when cache is not empty\n    this.removeNode(lastNode)\n    return lastNode\n  }\n\n  /**\n   * Sets a key-value pair in the cache.\n   * If the key exists, updates the value and moves to head.\n   * If new, adds at head and evicts from tail if necessary.\n   *\n   * Time Complexity:\n   * - O(1) for uniform item sizes\n   * - O(k) where k is the number of items evicted (can be O(N) for variable sizes)\n   */\n  public set(key: string, value: T): void {\n    const size = this.calculateSize?.(value) ?? 1\n    if (size > this.maxSize) {\n      console.warn('Single item size exceeds maxSize')\n      return\n    }\n\n    const existing = this.cache.get(key)\n    if (existing) {\n      // Update existing node: adjust size and move to head (most recent)\n      existing.data = value\n      this.totalSize = this.totalSize - existing.size + size\n      existing.size = size\n      this.moveToHead(existing)\n    } else {\n      // Add new node at head (most recent position)\n      const newNode = new LRUNode(key, value, size)\n      this.cache.set(key, newNode)\n      this.addToHead(newNode)\n      this.totalSize += size\n    }\n\n    // Evict least recently used items until under capacity\n    while (this.totalSize > this.maxSize && this.cache.size > 0) {\n      const tail = this.removeTail()\n      this.cache.delete(tail.key)\n      this.totalSize -= tail.size\n    }\n  }\n\n  /**\n   * Checks if a key exists in the cache.\n   * This is a pure query operation - does NOT update LRU order.\n   *\n   * Time Complexity: O(1)\n   */\n  public has(key: string): boolean {\n    return this.cache.has(key)\n  }\n\n  /**\n   * Retrieves a value by key and marks it as most recently used.\n   * Moving to head maintains the LRU property for future evictions.\n   *\n   * Time Complexity: O(1)\n   */\n  public get(key: string): T | undefined {\n    const node = this.cache.get(key)\n    if (!node) return undefined\n\n    // Mark as most recently used by moving to head\n    this.moveToHead(node)\n\n    return node.data\n  }\n\n  /**\n   * Returns an iterator over the cache entries. The order is outputted in the\n   * order of most recently used to least recently used.\n   */\n  public *[Symbol.iterator](): IterableIterator<[string, T]> {\n    let current = this.head.next\n    while (current && current !== this.tail) {\n      // Between head and tail, current is always LRUNode\n      const node = current as LRUNode<T>\n      yield [node.key, node.data]\n      current = current.next\n    }\n  }\n\n  /**\n   * Removes a specific key from the cache.\n   * Updates both the hash map and doubly-linked list.\n   *\n   * Time Complexity: O(1)\n   */\n  public remove(key: string): void {\n    const node = this.cache.get(key)\n    if (!node) return\n\n    this.removeNode(node)\n    this.cache.delete(key)\n    this.totalSize -= node.size\n  }\n\n  /**\n   * Returns the number of items in the cache.\n   */\n  public get size(): number {\n    return this.cache.size\n  }\n\n  /**\n   * Returns the current total size of all cached items.\n   * This uses the custom size calculation if provided.\n   */\n  public get currentSize(): number {\n    return this.totalSize\n  }\n}\n","import { parse } from 'next/dist/compiled/stacktrace-parser'\n\nconst regexNextStatic = /\\/_next(\\/static\\/.+)/\n\nexport interface StackFrame {\n  file: string | null\n  methodName: string\n  arguments: string[]\n  /** 1-based */\n  line1: number | null\n  /** 1-based */\n  column1: number | null\n}\n\nexport function parseStack(\n  stack: string,\n  distDir = process.env.__NEXT_DIST_DIR\n): StackFrame[] {\n  if (!stack) return []\n\n  // throw away eval information that stacktrace-parser doesn't support\n  // adapted from https://github.com/stacktracejs/error-stack-parser/blob/9f33c224b5d7b607755eb277f9d51fcdb7287e24/error-stack-parser.js#L59C33-L59C62\n  stack = stack\n    .split('\\n')\n    .map((line) => {\n      if (line.includes('(eval ')) {\n        line = line\n          .replace(/eval code/g, 'eval')\n          .replace(/\\(eval at [^()]* \\(/, '(file://')\n          .replace(/\\),.*$/g, ')')\n      }\n\n      return line\n    })\n    .join('\\n')\n\n  const frames = parse(stack)\n  return frames.map((frame) => {\n    try {\n      const url = new URL(frame.file!)\n      const res = regexNextStatic.exec(url.pathname)\n      if (res) {\n        const effectiveDistDir = distDir\n          ?.replace(/\\\\/g, '/')\n          ?.replace(/\\/$/, '')\n        if (effectiveDistDir) {\n          frame.file =\n            'file://' + effectiveDistDir.concat(res.pop()!) + url.search\n        }\n      }\n    } catch {}\n    return {\n      file: frame.file,\n      line1: frame.lineNumber,\n      column1: frame.column,\n      methodName: frame.methodName,\n      arguments: frame.arguments,\n    }\n  })\n}\n","/** React that's compiled with `next`. Used by App Router. */\nexport const reactVendoredRe =\n  /[\\\\/]next[\\\\/]dist[\\\\/]compiled[\\\\/](react|react-dom|react-server-dom-(webpack|turbopack)|scheduler)[\\\\/]/\n\n/** React the user installed. Used by Pages Router, or user imports in App Router. */\nexport const reactNodeModulesRe =\n  /node_modules[\\\\/](react|react-dom|scheduler)[\\\\/]/\n\nexport const nextInternalsRe =\n  /(node_modules[\\\\/]next[\\\\/]|[\\\\/].next[\\\\/]static[\\\\/]chunks[\\\\/]webpack\\.js$|(edge-runtime-webpack|webpack-runtime)\\.js$)/\n\nexport default function isInternal(file: string | null) {\n  if (!file) return false\n\n  return (\n    nextInternalsRe.test(file) ||\n    reactVendoredRe.test(file) ||\n    reactNodeModulesRe.test(file)\n  )\n}\n","import { findSourceMap as nativeFindSourceMap } from 'module'\nimport * as path from 'path'\nimport * as url from 'url'\nimport type * as util from 'util'\nimport { SourceMapConsumer as SyncSourceMapConsumer } from 'next/dist/compiled/source-map'\nimport {\n  type ModernSourceMapPayload,\n  findApplicableSourceMapPayload,\n  ignoreListAnonymousStackFramesIfSandwiched as ignoreListAnonymousStackFramesIfSandwichedGeneric,\n  sourceMapIgnoreListsEverything,\n} from './lib/source-maps'\nimport { parseStack, type StackFrame } from './lib/parse-stack'\nimport { getOriginalCodeFrame } from '../next-devtools/server/shared'\nimport { workUnitAsyncStorage } from './app-render/work-unit-async-storage.external'\nimport { dim } from '../lib/picocolors'\n\ntype FindSourceMapPayload = (\n  sourceURL: string\n) => ModernSourceMapPayload | undefined\n// Find a source map using the bundler's API.\n// This is only a fallback for when Node.js fails to due to bugs e.g. https://github.com/nodejs/node/issues/52102\n// TODO: Remove once all supported Node.js versions are fixed.\n// TODO(veil): Set from Webpack as well\nlet bundlerFindSourceMapPayload: FindSourceMapPayload = () => undefined\n\nexport function setBundlerFindSourceMapImplementation(\n  findSourceMapImplementation: FindSourceMapPayload\n): void {\n  bundlerFindSourceMapPayload = findSourceMapImplementation\n}\n\ninterface IgnorableStackFrame extends StackFrame {\n  ignored: boolean\n}\n\ntype SourceMapCache = Map<\n  string,\n  null | { map: SyncSourceMapConsumer; payload: ModernSourceMapPayload }\n>\n\nfunction frameToString(\n  methodName: string | null,\n  sourceURL: string | null,\n  line1: number | null,\n  column1: number | null\n): string {\n  let sourceLocation = line1 !== null ? `:${line1}` : ''\n  if (column1 !== null && sourceLocation !== '') {\n    sourceLocation += `:${column1}`\n  }\n\n  let fileLocation: string | null\n  if (\n    sourceURL !== null &&\n    sourceURL.startsWith('file://') &&\n    URL.canParse(sourceURL)\n  ) {\n    // If not relative to CWD, the path is ambiguous to IDEs and clicking will prompt to select the file first.\n    // In a multi-app repo, this leads to potentially larger file names but will make clicking snappy.\n    // There's no tradeoff for the cases where `dir` in `next dev [dir]` is omitted\n    // since relative to cwd is both the shortest and snappiest.\n    fileLocation = path.relative(process.cwd(), url.fileURLToPath(sourceURL))\n  } else if (sourceURL !== null && sourceURL.startsWith('/')) {\n    fileLocation = path.relative(process.cwd(), sourceURL)\n  } else {\n    fileLocation = sourceURL\n  }\n\n  return methodName\n    ? `    at ${methodName} (${fileLocation}${sourceLocation})`\n    : `    at ${fileLocation}${sourceLocation}`\n}\n\nfunction computeErrorName(error: Error): string {\n  // TODO: Node.js seems to use a different algorithm\n  // class ReadonlyRequestCookiesError extends Error {}` would read `ReadonlyRequestCookiesError: [...]`\n  // in the stack i.e. seems like under certain conditions it favors the constructor name.\n  return error.name || 'Error'\n}\n\nfunction prepareUnsourcemappedStackTrace(\n  error: Error,\n  structuredStackTrace: any[]\n): string {\n  const name = computeErrorName(error)\n  const message = error.message || ''\n  let stack = name + ': ' + message\n  for (let i = 0; i < structuredStackTrace.length; i++) {\n    stack += '\\n    at ' + structuredStackTrace[i].toString()\n  }\n  return stack\n}\n\nfunction shouldIgnoreListGeneratedFrame(file: string): boolean {\n  return file.startsWith('node:') || file.includes('node_modules')\n}\n\nfunction shouldIgnoreListOriginalFrame(file: string): boolean {\n  return file.includes('node_modules')\n}\n\ninterface SourcemappableStackFrame extends StackFrame {\n  file: NonNullable<StackFrame['file']>\n}\n\ninterface SourceMappedFrame {\n  stack: IgnorableStackFrame\n  // DEV only\n  code: string | null\n}\n\nfunction createUnsourcemappedFrame(\n  frame: SourcemappableStackFrame\n): SourceMappedFrame {\n  return {\n    stack: {\n      file: frame.file,\n      line1: frame.line1,\n      column1: frame.column1,\n      methodName: frame.methodName,\n      arguments: frame.arguments,\n      ignored: shouldIgnoreListGeneratedFrame(frame.file),\n    },\n    code: null,\n  }\n}\n\nfunction ignoreListAnonymousStackFramesIfSandwiched(\n  sourceMappedFrames: Array<{\n    stack: IgnorableStackFrame\n    code: string | null\n  }>\n) {\n  return ignoreListAnonymousStackFramesIfSandwichedGeneric(\n    sourceMappedFrames,\n    (frame) => frame.stack.file === '<anonymous>',\n    (frame) => frame.stack.ignored,\n    (frame) => frame.stack.methodName,\n    (frame) => {\n      frame.stack.ignored = true\n    }\n  )\n}\n\n/**\n * @param frame\n * @param sourceMapCache\n * @returns The original frame if not sourcemapped.\n */\nfunction getSourcemappedFrameIfPossible(\n  frame: SourcemappableStackFrame,\n  sourceMapCache: SourceMapCache,\n  inspectOptions: util.InspectOptions\n): {\n  stack: IgnorableStackFrame\n  code: string | null\n} {\n  const sourceMapCacheEntry = sourceMapCache.get(frame.file)\n  let sourceMapConsumer: SyncSourceMapConsumer\n  let sourceMapPayload: ModernSourceMapPayload\n  if (sourceMapCacheEntry === undefined) {\n    let sourceURL = frame.file\n    // e.g. \"/APP/.next/server/chunks/ssr/[root-of-the-server]__2934a0._.js\"\n    // will be keyed by Node.js as \"file:///APP/.next/server/chunks/ssr/[root-of-the-server]__2934a0._.js\".\n    // This is likely caused by `callsite.toString()` in `Error.prepareStackTrace converting file URLs to paths.\n    if (sourceURL.startsWith('/')) {\n      sourceURL = url.pathToFileURL(frame.file).toString()\n    }\n    let maybeSourceMapPayload: ModernSourceMapPayload | undefined\n    try {\n      const sourceMap = nativeFindSourceMap(sourceURL)\n      maybeSourceMapPayload = sourceMap?.payload\n    } catch (cause) {\n      // We should not log an actual error instance here because that will re-enter\n      // this codepath during error inspection and could lead to infinite recursion.\n      console.error(\n        `${sourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n      // If loading fails once, it'll fail every time.\n      // So set the cache to avoid duplicate errors.\n      sourceMapCache.set(frame.file, null)\n      // Don't even fall back to the bundler because it might be not as strict\n      // with regards to parsing and then we fail later once we consume the\n      // source map payload.\n      // This essentially avoids a redundant error where we fail here and then\n      // later on consumption because the bundler just handed back an invalid\n      // source map.\n      return createUnsourcemappedFrame(frame)\n    }\n    if (maybeSourceMapPayload === undefined) {\n      maybeSourceMapPayload = bundlerFindSourceMapPayload(sourceURL)\n    }\n\n    if (maybeSourceMapPayload === undefined) {\n      return createUnsourcemappedFrame(frame)\n    }\n    sourceMapPayload = maybeSourceMapPayload\n    try {\n      sourceMapConsumer = new SyncSourceMapConsumer(\n        // @ts-expect-error -- Module.SourceMap['version'] is number but SyncSourceMapConsumer wants a string\n        sourceMapPayload\n      )\n    } catch (cause) {\n      // We should not log an actual error instance here because that will re-enter\n      // this codepath during error inspection and could lead to infinite recursion.\n      console.error(\n        `${sourceURL}: Invalid source map. Only conformant source maps can be used to find the original code. Cause: ${cause}`\n      )\n      // If creating the consumer fails once, it'll fail every time.\n      // So set the cache to avoid duplicate errors.\n      sourceMapCache.set(frame.file, null)\n      return createUnsourcemappedFrame(frame)\n    }\n    sourceMapCache.set(frame.file, {\n      map: sourceMapConsumer,\n      payload: sourceMapPayload,\n    })\n  } else if (sourceMapCacheEntry === null) {\n    // We failed earlier getting the payload or consumer.\n    // Just return an unsourcemapped frame.\n    // Errors will already be logged.\n    return createUnsourcemappedFrame(frame)\n  } else {\n    sourceMapConsumer = sourceMapCacheEntry.map\n    sourceMapPayload = sourceMapCacheEntry.payload\n  }\n\n  const sourcePosition = sourceMapConsumer.originalPositionFor({\n    column: (frame.column1 ?? 1) - 1,\n    line: frame.line1 ?? 1,\n  })\n\n  const applicableSourceMap = findApplicableSourceMapPayload(\n    (frame.line1 ?? 1) - 1,\n    (frame.column1 ?? 1) - 1,\n    sourceMapPayload\n  )\n  let ignored =\n    applicableSourceMap !== undefined &&\n    sourceMapIgnoreListsEverything(applicableSourceMap)\n  if (sourcePosition.source === null) {\n    return {\n      stack: {\n        arguments: frame.arguments,\n        file: frame.file,\n        line1: frame.line1,\n        column1: frame.column1,\n        methodName: frame.methodName,\n        ignored: ignored || shouldIgnoreListGeneratedFrame(frame.file),\n      },\n      code: null,\n    }\n  }\n\n  // TODO(veil): Upstream a method to sourcemap consumer that immediately says if a frame is ignored or not.\n  if (applicableSourceMap === undefined) {\n    console.error('No applicable source map found in sections for frame', frame)\n  } else if (!ignored && shouldIgnoreListOriginalFrame(sourcePosition.source)) {\n    // Externals may be libraries that don't ship ignoreLists.\n    // This is really taking control away from libraries.\n    // They should still ship `ignoreList` so that attached debuggers ignore-list their frames.\n    // TODO: Maybe only ignore library sourcemaps if `ignoreList` is absent?\n    // Though keep in mind that Turbopack omits empty `ignoreList`.\n    // So if we establish this convention, we should communicate it to the ecosystem.\n    ignored = true\n  } else if (!ignored) {\n    // TODO: O(n^2). Consider moving `ignoreList` into a Set\n    const sourceIndex = applicableSourceMap.sources.indexOf(\n      sourcePosition.source\n    )\n    ignored = applicableSourceMap.ignoreList?.includes(sourceIndex) ?? false\n  }\n\n  const originalFrame: IgnorableStackFrame = {\n    // We ignore the sourcemapped name since it won't be the correct name.\n    // The callsite will point to the column of the variable name instead of the\n    // name of the enclosing function.\n    // TODO(NDX-531): Spy on prepareStackTrace to get the enclosing line number for method name mapping.\n    methodName: frame.methodName\n      ?.replace('__WEBPACK_DEFAULT_EXPORT__', 'default')\n      ?.replace('__webpack_exports__.', ''),\n    file: sourcePosition.source,\n    line1: sourcePosition.line,\n    column1: sourcePosition.column + 1,\n    // TODO: c&p from async createOriginalStackFrame but why not frame.arguments?\n    arguments: [],\n    ignored,\n  }\n\n  /** undefined = not yet computed*/\n  let codeFrame: string | null | undefined\n\n  return Object.defineProperty(\n    {\n      stack: originalFrame,\n      code: null,\n    },\n    'code',\n    {\n      get: () => {\n        if (codeFrame === undefined) {\n          const sourceContent: string | null =\n            sourceMapConsumer.sourceContentFor(\n              sourcePosition.source,\n              /* returnNullOnMissing */ true\n            ) ?? null\n          codeFrame = getOriginalCodeFrame(\n            originalFrame,\n            sourceContent,\n            inspectOptions.colors\n          )\n        }\n        return codeFrame\n      },\n    }\n  )\n}\n\nfunction parseAndSourceMap(\n  error: Error,\n  inspectOptions: util.InspectOptions\n): string {\n  // TODO(veil): Expose as CLI arg or config option. Useful for local debugging.\n  const showIgnoreListed = false\n  // We overwrote Error.prepareStackTrace earlier so error.stack is not sourcemapped.\n  let unparsedStack = String(error.stack)\n  // We could just read it from `error.stack`.\n  // This works around cases where a 3rd party `Error.prepareStackTrace` implementation\n  // doesn't implement the name computation correctly.\n  const errorName = computeErrorName(error)\n\n  let idx = unparsedStack.indexOf('react_stack_bottom_frame')\n  if (idx !== -1) {\n    idx = unparsedStack.lastIndexOf('\\n', idx)\n  } else {\n    idx = unparsedStack.indexOf('react-stack-bottom-frame')\n    if (idx !== -1) {\n      idx = unparsedStack.lastIndexOf('\\n', idx)\n    }\n  }\n  if (idx !== -1 && !showIgnoreListed) {\n    // Cut off everything after the bottom frame since it'll be React internals.\n    unparsedStack = unparsedStack.slice(0, idx)\n  }\n\n  const unsourcemappedStack = parseStack(unparsedStack)\n  const sourceMapCache: SourceMapCache = new Map()\n\n  const sourceMappedFrames: Array<{\n    stack: IgnorableStackFrame\n    code: string | null\n  }> = []\n  let sourceFrame: null | string = null\n  for (const frame of unsourcemappedStack) {\n    if (frame.file === null) {\n      sourceMappedFrames.push({\n        code: null,\n        stack: {\n          file: frame.file,\n          line1: frame.line1,\n          column1: frame.column1,\n          methodName: frame.methodName,\n          arguments: frame.arguments,\n          ignored: false,\n        },\n      })\n    } else {\n      const sourcemappedFrame = getSourcemappedFrameIfPossible(\n        // We narrowed this earlier by bailing if `frame.file` is null.\n        frame as SourcemappableStackFrame,\n        sourceMapCache,\n        inspectOptions\n      )\n      sourceMappedFrames.push(sourcemappedFrame)\n\n      // We can determine the sourceframe here.\n      // anonymous frames won't have a sourceframe so we don't need to scan\n      // all stacks again to check if they are sandwiched between ignored frames.\n      if (\n        sourceFrame === null &&\n        // TODO: Is this the right choice?\n        !sourcemappedFrame.stack.ignored &&\n        sourcemappedFrame.code !== null\n      ) {\n        sourceFrame = sourcemappedFrame.code\n      }\n    }\n  }\n\n  ignoreListAnonymousStackFramesIfSandwiched(sourceMappedFrames)\n\n  let sourceMappedStack = ''\n  for (let i = 0; i < sourceMappedFrames.length; i++) {\n    const frame = sourceMappedFrames[i]\n\n    if (!frame.stack.ignored) {\n      sourceMappedStack +=\n        '\\n' +\n        frameToString(\n          frame.stack.methodName,\n          frame.stack.file,\n          frame.stack.line1,\n          frame.stack.column1\n        )\n    } else if (showIgnoreListed) {\n      sourceMappedStack +=\n        '\\n' +\n        dim(\n          frameToString(\n            frame.stack.methodName,\n            frame.stack.file,\n            frame.stack.line1,\n            frame.stack.column1\n          )\n        )\n    }\n  }\n\n  return (\n    errorName +\n    ': ' +\n    error.message +\n    sourceMappedStack +\n    (sourceFrame !== null ? '\\n' + sourceFrame : '')\n  )\n}\n\nfunction sourceMapError(\n  this: void,\n  error: Error,\n  inspectOptions: util.InspectOptions\n): Error {\n  // Create a new Error object with the source mapping applied and then use native\n  // Node.js formatting on the result.\n  const newError =\n    error.cause !== undefined\n      ? // Setting an undefined `cause` would print `[cause]: undefined`\n        new Error(error.message, { cause: error.cause })\n      : new Error(error.message)\n\n  // TODO: Ensure `class MyError extends Error {}` prints `MyError` as the name\n  newError.stack = parseAndSourceMap(error, inspectOptions)\n\n  for (const key in error) {\n    if (!Object.prototype.hasOwnProperty.call(newError, key)) {\n      // @ts-expect-error -- We're copying all enumerable properties.\n      // So they definitely exist on `this` and obviously have no type on `newError` (yet)\n      newError[key] = error[key]\n    }\n  }\n\n  return newError\n}\n\nexport function patchErrorInspectNodeJS(\n  errorConstructor: ErrorConstructor\n): void {\n  const inspectSymbol = Symbol.for('nodejs.util.inspect.custom')\n\n  errorConstructor.prepareStackTrace = prepareUnsourcemappedStackTrace\n\n  // @ts-expect-error -- TODO upstream types\n  // eslint-disable-next-line no-extend-native -- We're not extending but overriding.\n  errorConstructor.prototype[inspectSymbol] = function (\n    depth: number,\n    inspectOptions: util.InspectOptions,\n    inspect: typeof util.inspect\n  ): string {\n    // avoid false-positive dynamic i/o warnings e.g. due to usage of `Math.random` in `source-map`.\n    return workUnitAsyncStorage.exit(() => {\n      const newError = sourceMapError(this, inspectOptions)\n\n      const originalCustomInspect = (newError as any)[inspectSymbol]\n      // Prevent infinite recursion.\n      // { customInspect: false } would result in `error.cause` not using our inspect.\n      Object.defineProperty(newError, inspectSymbol, {\n        value: undefined,\n        enumerable: false,\n        writable: true,\n      })\n      try {\n        return inspect(newError, {\n          ...inspectOptions,\n          depth:\n            (inspectOptions.depth ??\n              // Default in Node.js\n              2) - depth,\n        })\n      } finally {\n        ;(newError as any)[inspectSymbol] = originalCustomInspect\n      }\n    })\n  }\n}\n\nexport function patchErrorInspectEdgeLite(\n  errorConstructor: ErrorConstructor\n): void {\n  const inspectSymbol = Symbol.for('edge-runtime.inspect.custom')\n\n  errorConstructor.prepareStackTrace = prepareUnsourcemappedStackTrace\n\n  // @ts-expect-error -- TODO upstream types\n  // eslint-disable-next-line no-extend-native -- We're not extending but overriding.\n  errorConstructor.prototype[inspectSymbol] = function ({\n    format,\n  }: {\n    format: (...args: unknown[]) => string\n  }): string {\n    // avoid false-positive dynamic i/o warnings e.g. due to usage of `Math.random` in `source-map`.\n    return workUnitAsyncStorage.exit(() => {\n      const newError = sourceMapError(this, {})\n\n      const originalCustomInspect = (newError as any)[inspectSymbol]\n      // Prevent infinite recursion.\n      Object.defineProperty(newError, inspectSymbol, {\n        value: undefined,\n        enumerable: false,\n        writable: true,\n      })\n      try {\n        return format(newError)\n      } finally {\n        ;(newError as any)[inspectSymbol] = originalCustomInspect\n      }\n    })\n  }\n}\n","import { patchErrorInspectNodeJS } from '../patch-error-inspect'\n\npatchErrorInspectNodeJS(globalThis.Error)\n","import { codeFrameColumns } from 'next/dist/compiled/babel/code-frame'\nimport isInternal from '../../shared/lib/is-internal'\nimport type { StackFrame } from '../../server/lib/parse-stack'\nimport { ignoreListAnonymousStackFramesIfSandwiched as ignoreListAnonymousStackFramesIfSandwichedGeneric } from '../../server/lib/source-maps'\n\nexport type { StackFrame }\n\nexport interface IgnorableStackFrame extends StackFrame {\n  ignored: boolean\n}\n\nexport interface OriginalStackFramesRequest {\n  frames: readonly StackFrame[]\n  isServer: boolean\n  isEdgeServer: boolean\n  isAppDirectory: boolean\n}\n\nexport type OriginalStackFramesResponse = OriginalStackFrameResponseResult[]\n\nexport type OriginalStackFrameResponseResult =\n  PromiseSettledResult<OriginalStackFrameResponse>\n\nexport interface OriginalStackFrameResponse {\n  originalStackFrame: (StackFrame & { ignored: boolean }) | null\n  originalCodeFrame: string | null\n}\n\nexport function ignoreListAnonymousStackFramesIfSandwiched(\n  responses: OriginalStackFramesResponse\n): void {\n  ignoreListAnonymousStackFramesIfSandwichedGeneric(\n    responses,\n    (response) => {\n      return (\n        response.status === 'fulfilled' &&\n        response.value.originalStackFrame !== null &&\n        response.value.originalStackFrame.file === '<anonymous>'\n      )\n    },\n    (response) => {\n      return (\n        response.status === 'fulfilled' &&\n        response.value.originalStackFrame !== null &&\n        response.value.originalStackFrame.ignored === true\n      )\n    },\n    (response) => {\n      return response.status === 'fulfilled' &&\n        response.value.originalStackFrame !== null\n        ? response.value.originalStackFrame.methodName\n        : ''\n    },\n    (response) => {\n      ;(\n        response as PromiseFulfilledResult<OriginalStackFrameResponse>\n      ).value.originalStackFrame!.ignored = true\n    }\n  )\n}\n\n/**\n * It looks up the code frame of the traced source.\n * @note It ignores Next.js/React internals, as these can often be huge bundled files.\n */\nexport function getOriginalCodeFrame(\n  frame: IgnorableStackFrame,\n  source: string | null,\n  colors: boolean = process.stdout.isTTY\n): string | null {\n  if (!source || isInternal(frame.file)) {\n    return null\n  }\n\n  return codeFrameColumns(\n    source,\n    {\n      start: {\n        // 1-based, but -1 means start line without highlighting\n        line: frame.line1 ?? -1,\n        // 1-based, but 0 means whole line without column highlighting\n        column: frame.column1 ?? 0,\n      },\n    },\n    { forceColor: colors }\n  )\n}\n","export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(\n    public readonly route: string,\n    public readonly expression: string\n  ) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  route: string,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(route, expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(route, expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n\nexport function makeDevtoolsIOAwarePromise<T>(underlying: T): Promise<T> {\n  // in React DevTools if we resolve in a setTimeout we will observe\n  // the promise resolution as something that can suspend a boundary or root.\n  return new Promise<T>((resolve) => {\n    // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n    setTimeout(() => {\n      resolve(underlying)\n    }, 0)\n  })\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * Use this function when dynamically prerendering with dynamicIO.\n * We don't want to error, because it's better to return something\n * (and we've already aborted the render at the point where the sync dynamic error occured),\n * but we should log an error server-side.\n * @internal\n */\nexport function warnOnSyncDynamicError(dynamicTracking: DynamicTrackingState) {\n  if (dynamicTracking.syncDynamicErrorWithStack) {\n    // the server did something sync dynamic, likely\n    // leading to an early termination of the prerender.\n    console.error(dynamicTracking.syncDynamicErrorWithStack)\n  }\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    if (serverDynamic.syncDynamicErrorWithStack) {\n      // There is no shell and the server did something sync dynamic likely\n      // leading to an early termination of the prerender before the shell\n      // could be completed. We terminate the build/validating render.\n      logDisallowedDynamicError(\n        workStore,\n        serverDynamic.syncDynamicErrorWithStack\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n","import { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  abortOnSynchronousPlatformIOAccess,\n  trackSynchronousPlatformIOAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\ntype ApiType = 'time' | 'random' | 'crypto'\n\nexport function io(expression: string, type: ApiType) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workUnitStore || !workStore) {\n    return\n  }\n\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime': {\n      const prerenderSignal = workUnitStore.controller.signal\n\n      if (prerenderSignal.aborted === false) {\n        // If the prerender signal is already aborted we don't need to construct\n        // any stacks because something else actually terminated the prerender.\n        let message: string\n        switch (type) {\n          case 'time':\n            message = `Route \"${workStore.route}\" used ${expression} instead of using \\`performance\\` or without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-current-time`\n            break\n          case 'random':\n            message = `Route \"${workStore.route}\" used ${expression} outside of \\`\"use cache\"\\` and without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-random`\n            break\n          case 'crypto':\n            message = `Route \"${workStore.route}\" used ${expression} outside of \\`\"use cache\"\\` and without explicitly calling \\`await connection()\\` beforehand. See more info here: https://nextjs.org/docs/messages/next-prerender-crypto`\n            break\n          default:\n            throw new InvariantError(\n              'Unknown expression type in abortOnSynchronousPlatformIOAccess.'\n            )\n        }\n\n        abortOnSynchronousPlatformIOAccess(\n          workStore.route,\n          expression,\n          applyOwnerStack(new Error(message), workUnitStore),\n          workUnitStore\n        )\n      }\n      break\n    }\n    case 'prerender-client': {\n      const prerenderSignal = workUnitStore.controller.signal\n\n      if (prerenderSignal.aborted === false) {\n        // If the prerender signal is already aborted we don't need to construct\n        // any stacks because something else actually terminated the prerender.\n        let message: string\n        switch (type) {\n          case 'time':\n            message = `Route \"${workStore.route}\" used ${expression} inside a Client Component without a Suspense boundary above it. See more info here: https://nextjs.org/docs/messages/next-prerender-current-time-client`\n            break\n          case 'random':\n            message = `Route \"${workStore.route}\" used ${expression} inside a Client Component without a Suspense boundary above it. See more info here: https://nextjs.org/docs/messages/next-prerender-random-client`\n            break\n          case 'crypto':\n            message = `Route \"${workStore.route}\" used ${expression} inside a Client Component without a Suspense boundary above it. See more info here: https://nextjs.org/docs/messages/next-prerender-crypto-client`\n            break\n          default:\n            throw new InvariantError(\n              'Unknown expression type in abortOnSynchronousPlatformIOAccess.'\n            )\n        }\n\n        abortOnSynchronousPlatformIOAccess(\n          workStore.route,\n          expression,\n          applyOwnerStack(new Error(message), workUnitStore),\n          workUnitStore\n        )\n      }\n      break\n    }\n    case 'request':\n      if (workUnitStore.prerenderPhase === true) {\n        trackSynchronousPlatformIOAccessInDev(workUnitStore)\n      }\n      break\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction applyOwnerStack(error: Error, workUnitStore: PrerenderStoreModern) {\n  // TODO: Instead of stitching the stacks here, we should log the original\n  // error as-is when it occurs, and let `patchErrorInspect` handle adding the\n  // owner stack, instead of logging it deferred in the `LogSafely` component\n  // via `throwIfDisallowedDynamic`.\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    workUnitStore.captureOwnerStack\n  ) {\n    const ownerStack = workUnitStore.captureOwnerStack()\n\n    if (ownerStack) {\n      let stack = ownerStack\n\n      if (error.stack) {\n        const frames: string[] = []\n\n        for (const frame of error.stack.split('\\n').slice(1)) {\n          if (frame.includes('react_stack_bottom_frame')) {\n            break\n          }\n\n          frames.push(frame)\n        }\n\n        stack = '\\n' + frames.join('\\n') + stack\n      }\n\n      error.stack = error.name + ': ' + error.message + stack\n    }\n  }\n\n  return error\n}\n","/**\n * We extend Math.random() during builds and revalidates to ensure that prerenders don't observe randomness\n * When cacheComponents is enabled. randomness is a form of IO even though it resolves synchronously. When cacheComponents is\n * enabled we need to ensure that randomness is excluded from prerenders.\n *\n * The extensions here never error nor alter the random generation itself and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nconst expression = '`Math.random()`'\ntry {\n  const _random = Math.random\n  Math.random = function random() {\n    io(expression, 'random')\n    return _random.apply(null, arguments as any)\n\n    // We bind here to alter the `toString` printing to match `Math.random`'s native `toString`.\n    // eslint-disable-next-line no-extra-bind\n  }.bind(null)\n  Object.defineProperty(Math.random, 'name', { value: 'random' })\n} catch {\n  console.error(\n    `Failed to install ${expression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n  )\n}\n","/**\n * We extend `Date` during builds and revalidates to ensure that prerenders don't observe the clock as a source of IO\n * When cacheComponents is enabled. The current time is a form of IO even though it resolves synchronously. When cacheComponents is\n * enabled we need to ensure that clock time is excluded from prerenders unless it is cached.\n *\n * There is tension here because time is used for both output and introspection. While arbitrary we intend to reserve\n * `Date` for output use cases and `performance` for introspection use cases. If you want to measure\n * how long something takes use `performance.timeOrigin` and `performance.now()` rather than `Date.now()` for instance.\n *\n * The extensions here never error nor alter the underlying Date objects, strings, and numbers created and thus should be transparent to callers.\n */\nimport { io } from './utils'\n\nfunction createNow(originalNow: typeof Date.now) {\n  return {\n    now: function now() {\n      io('`Date.now()`', 'time')\n      return originalNow()\n    },\n  }['now'.slice() as 'now'].bind(null)\n}\n\nfunction createDate(originalConstructor: typeof Date): typeof Date {\n  const properties = Object.getOwnPropertyDescriptors(originalConstructor)\n  properties.now.value = createNow(originalConstructor.now)\n\n  const apply = Reflect.apply\n  const construct = Reflect.construct\n\n  const newConstructor = Object.defineProperties(\n    // Ideally this should not minify the name.\n    function Date() {\n      if (new.target === undefined) {\n        io('`Date()`', 'time')\n        return apply(originalConstructor, undefined, arguments)\n      }\n      if (arguments.length === 0) {\n        io('`new Date()`', 'time')\n      }\n      return construct(originalConstructor, arguments, new.target)\n    },\n    properties\n  )\n  Object.defineProperty(originalConstructor.prototype, 'constructor', {\n    value: newConstructor,\n  })\n  return newConstructor as typeof Date\n}\n\ntry {\n  // eslint-disable-next-line no-native-reassign\n  Date = createDate(Date)\n} catch {\n  console.error(\n    'Failed to install `Date` class extension. When using `experimental.cacheComponents`, APIs that read the current time will not correctly trigger dynamic behavior.'\n  )\n}\n","/**\n * We extend node:crypto APIs during builds and revalidates to ensure that prerenders don't observe random bytes\n * When cacheComponents is enabled. Random bytes are a form of IO even if they resolve synchronously. When cacheComponents is\n * enabled we need to ensure that random bytes are excluded from prerenders unless they are cached.\n *\n *\n * The extensions here never error nor alter the underlying return values and thus should be transparent to callers.\n */\n\nimport { io } from './utils'\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  // nothing to patch\n} else {\n  const nodeCrypto = require('node:crypto') as typeof import('node:crypto')\n\n  // require('node:crypto').getRandomValues is an alias for\n  // crypto.getRandomValues which is extended in web-crypto.tsx\n\n  // require('node:crypto').randomUUID is not an alias for crypto.randomUUID\n\n  const randomUUIDExpression = \"`require('node:crypto').randomUUID()`\"\n  try {\n    const _randomUUID = nodeCrypto.randomUUID\n    nodeCrypto.randomUUID = function randomUUID() {\n      io(randomUUIDExpression, 'random')\n      return _randomUUID.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomUUIDExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomBytesExpression = \"`require('node:crypto').randomBytes(size)`\"\n  try {\n    const _randomBytes = nodeCrypto.randomBytes\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.randomBytes = function randomBytes() {\n      if (typeof arguments[1] !== 'function') {\n        // randomBytes is sync if the second arg is undefined\n        io(randomBytesExpression, 'random')\n      }\n      return _randomBytes.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomBytesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function without a callback argument will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomFillSyncExpression =\n    \"`require('node:crypto').randomFillSync(...)`\"\n  try {\n    const _randomFillSync = nodeCrypto.randomFillSync\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.randomFillSync = function randomFillSync() {\n      io(randomFillSyncExpression, 'random')\n      return _randomFillSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomFillSyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const randomIntExpression = \"`require('node:crypto').randomInt(min, max)`\"\n  try {\n    const _randomInt = nodeCrypto.randomInt\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.randomInt = function randomInt() {\n      if (typeof arguments[2] !== 'function') {\n        // randomInt is sync if the third arg is undefined\n        io(randomIntExpression, 'random')\n      }\n      return _randomInt.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${randomBytesExpression} extension. When using \\`experimental.cacheComponents\\` calling this function without a callback argument will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generatePrimeSyncExpression =\n    \"`require('node:crypto').generatePrimeSync(...)`\"\n  try {\n    const _generatePrimeSync = nodeCrypto.generatePrimeSync\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.generatePrimeSync = function generatePrimeSync() {\n      io(generatePrimeSyncExpression, 'random')\n      return _generatePrimeSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generatePrimeSyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generateKeyPairSyncExpression =\n    \"`require('node:crypto').generateKeyPairSync(...)`\"\n  try {\n    const _generateKeyPairSync = nodeCrypto.generateKeyPairSync\n    // @ts-expect-error -- TODO: tell TS the overloads are preserved\n    nodeCrypto.generateKeyPairSync = function generateKeyPairSync() {\n      io(generateKeyPairSyncExpression, 'random')\n      return _generateKeyPairSync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generateKeyPairSyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n\n  const generateKeySyncExpression =\n    \"`require('node:crypto').generateKeySync(...)`\"\n  try {\n    const _generateKeySync = nodeCrypto.generateKeySync\n    nodeCrypto.generateKeySync = function generateKeySync() {\n      io(generateKeySyncExpression, 'random')\n      return _generateKeySync.apply(this, arguments as any)\n    }\n  } catch {\n    console.error(\n      `Failed to install ${generateKeySyncExpression} extension. When using \\`experimental.cacheComponents\\` calling this function will not correctly trigger dynamic behavior.`\n    )\n  }\n}\n","// Synchronously inject a require hook for webpack and webpack/. It's required to use the internal ncc webpack version.\n// This is needed for userland plugins to attach to the same webpack instance as Next.js'.\n// Individually compiled modules are as defined for the compilation in bundles/webpack/packages/*.\n\n// This module will only be loaded once per process.\nconst path = require('path') as typeof import('path')\nconst mod = require('module') as typeof import('module')\nconst originalRequire = mod.prototype.require\nconst resolveFilename =\n  // @ts-expect-error\n  mod._resolveFilename\n\nlet resolve: typeof require.resolve = process.env.NEXT_MINIMAL\n  ? // @ts-ignore\n    __non_webpack_require__.resolve\n  : require.resolve\n\nexport const hookPropertyMap = new Map()\n\nexport const defaultOverrides = {\n  'styled-jsx': path.dirname(resolve('styled-jsx/package.json')),\n  'styled-jsx/style': resolve('styled-jsx/style'),\n  'styled-jsx/style.js': resolve('styled-jsx/style'),\n}\n\nconst toResolveMap = (map: Record<string, string>): [string, string][] =>\n  Object.entries(map).map(([key, value]) => [key, resolve(value)])\n\nexport function addHookAliases(aliases: [string, string][] = []) {\n  for (const [key, value] of aliases) {\n    hookPropertyMap.set(key, value)\n  }\n}\n\naddHookAliases(toResolveMap(defaultOverrides))\n\n// @ts-expect-error\nmod._resolveFilename = function (\n  originalResolveFilename: (\n    request: string,\n    parent: string,\n    isMain: boolean,\n    opts: any\n  ) => string,\n  requestMap: Map<string, string>,\n  request: string,\n  parent: string,\n  isMain: boolean,\n  options: any\n) {\n  const hookResolved = requestMap.get(request)\n  if (hookResolved) request = hookResolved\n\n  return originalResolveFilename.call(mod, request, parent, isMain, options)\n\n  // We use `bind` here to avoid referencing outside variables to create potential memory leaks.\n}.bind(null, resolveFilename, hookPropertyMap)\n\n// @ts-expect-error\n// This is a hack to make sure that if a user requires a Next.js module that wasn't bundled\n// that needs to point to the rendering runtime version, it will point to the correct one.\n// This can happen on `pages` when a user requires a dependency that uses next/image for example.\nmod.prototype.require = function (request: string) {\n  if (request.endsWith('.shared-runtime')) {\n    return originalRequire.call(\n      this,\n      `next/dist/server/route-modules/pages/vendored/contexts/${path.basename(\n        request,\n        '.shared-runtime'\n      )}`\n    )\n  }\n\n  return originalRequire.call(this, request)\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","import type { Token } from 'next/dist/compiled/path-to-regexp'\n\n/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */\n\n/**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */\nconst PARAM_SEPARATOR = '_NEXTSEP_'\n\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */\nexport function hasAdjacentParameterIssues(route: string): boolean {\n  if (typeof route !== 'string') return false\n\n  // Check for interception route markers followed immediately by parameters\n  // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n  // These patterns cause \"Must have text between two parameters\" errors\n  if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n    return true\n  }\n\n  // Check for basic adjacent parameters without separators\n  // Pattern: :param1:param2 (but not :param* or other URL patterns)\n  if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */\nexport function normalizeAdjacentParameters(route: string): string {\n  let normalized = route\n\n  // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n  normalized = normalized.replace(\n    /(\\([^)]*\\)):([^/\\s]+)/g,\n    `$1${PARAM_SEPARATOR}:$2`\n  )\n\n  // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n  normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`)\n\n  return normalized\n}\n\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */\nexport function normalizeTokensForRegexp(tokens: Token[]): Token[] {\n  return tokens.map((token) => {\n    // Token union type: Token = string | TokenObject\n    // Literal path segments are strings, parameters/wildcards are objects\n    if (\n      typeof token === 'object' &&\n      token !== null &&\n      // Not all token objects have 'modifier' property (e.g., simple text tokens)\n      'modifier' in token &&\n      // Only repeating modifiers (* or +) cause the validation error\n      // Other modifiers like '?' (optional) are fine\n      (token.modifier === '*' || token.modifier === '+') &&\n      // Token objects can have different shapes depending on route pattern\n      'prefix' in token &&\n      'suffix' in token &&\n      // Both prefix and suffix must be empty strings\n      // This is what causes the validation error in path-to-regexp\n      token.prefix === '' &&\n      token.suffix === ''\n    ) {\n      // Add minimal prefix to satisfy path-to-regexp validation\n      // We use '/' as it's the most common path delimiter and won't break route matching\n      // The prefix gets used in regex generation but doesn't affect parameter extraction\n      return {\n        ...token,\n        prefix: '/',\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */\nexport function stripParameterSeparators(\n  params: Record<string, any>\n): Record<string, any> {\n  const cleaned: Record<string, any> = {}\n\n  for (const [key, value] of Object.entries(params)) {\n    if (typeof value === 'string') {\n      // Remove the separator if it appears at the start of parameter values\n      cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n    } else if (Array.isArray(value)) {\n      // Handle array parameters (from repeated route segments)\n      cleaned[key] = value.map((item) =>\n        typeof item === 'string'\n          ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n          : item\n      )\n    } else {\n      cleaned[key] = value\n    }\n  }\n\n  return cleaned\n}\n","/**\n * Client-safe utilities for route matching that don't import server-side\n * utilities to avoid bundling issues with Turbopack\n */\n\nimport type {\n  Key,\n  TokensToRegexpOptions,\n  ParseOptions,\n  TokensToFunctionOptions,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  pathToRegexp,\n  compile,\n  regexpToFunction,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  hasAdjacentParameterIssues,\n  normalizeAdjacentParameters,\n  stripParameterSeparators,\n} from '../../../../lib/route-pattern-normalizer'\n\n/**\n * Client-safe wrapper around pathToRegexp that handles path-to-regexp 6.3.0+ validation errors.\n * This includes both \"Can not repeat without prefix/suffix\" and \"Must have text between parameters\" errors.\n */\nexport function safePathToRegexp(\n  route: string | RegExp | Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  if (typeof route !== 'string') {\n    return pathToRegexp(route, keys, options)\n  }\n\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return pathToRegexp(routeToUse, keys, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return pathToRegexp(normalizedRoute, keys, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around compile that handles path-to-regexp 6.3.0+ validation errors.\n * No server-side error reporting to avoid bundling issues.\n */\nexport function safeCompile(\n  route: string,\n  options?: TokensToFunctionOptions & ParseOptions\n) {\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return compile(routeToUse, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return compile(normalizedRoute, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around regexpToFunction that automatically cleans parameters.\n */\nexport function safeRegexpToFunction<\n  T extends Record<string, any> = Record<string, any>,\n>(regexp: RegExp, keys?: Key[]): (pathname: string) => { params: T } | false {\n  const originalMatcher = regexpToFunction<T>(regexp, keys || [])\n\n  return (pathname: string) => {\n    const result = originalMatcher(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return {\n      ...result,\n      params: stripParameterSeparators(result.params as any) as T,\n    }\n  }\n}\n\n/**\n * Safe wrapper for route matcher functions that automatically cleans parameters.\n * This is client-safe and doesn't import path-to-regexp.\n */\nexport function safeRouteMatcher<T extends Record<string, any>>(\n  matcherFn: (pathname: string) => false | T\n): (pathname: string) => false | T {\n  return (pathname: string) => {\n    const result = matcherFn(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return stripParameterSeparators(result) as T\n  }\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\nimport { safeRouteMatcher } from './route-match-utils'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  const rawMatcher = (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n\n  // Wrap with safe matcher to handle parameter cleaning\n  return safeRouteMatcher(rawMatcher)\n}\n","/* eslint-disable no-redeclare */\nimport type { IncomingMessage } from 'http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { BaseNextRequest } from './base-http'\nimport type { CloneableBody } from './body-streams'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport type { ServerComponentsHmrCache } from './response-cache'\nimport type { PagesDevOverlayBridgeType } from '../next-devtools/userspace/pages/pages-dev-overlay-setup'\n\n// FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta')\n\nexport type NextIncomingMessage = (BaseNextRequest | IncomingMessage) & {\n  [NEXT_REQUEST_META]?: RequestMeta\n}\n\nexport interface RequestMeta {\n  /**\n   * The query that was used to make the request.\n   */\n  initQuery?: ParsedUrlQuery\n\n  /**\n   * The URL that was used to make the request.\n   */\n  initURL?: string\n\n  /**\n   * The protocol that was used to make the request.\n   */\n  initProtocol?: string\n\n  /**\n   * The body that was read from the request. This is used to allow the body to\n   * be read multiple times.\n   */\n  clonableBody?: CloneableBody\n\n  /**\n   * True when the request matched a locale domain that was configured in the\n   * next.config.js file.\n   */\n  isLocaleDomain?: boolean\n\n  /**\n   * True when the request had locale information stripped from the pathname\n   * part of the URL.\n   */\n  didStripLocale?: boolean\n\n  /**\n   * If the request had it's URL rewritten, this is the URL it was rewritten to.\n   */\n  rewroteURL?: string\n\n  /**\n   * The cookies that were added by middleware and were added to the response.\n   */\n  middlewareCookie?: string[]\n\n  /**\n   * The match on the request for a given route.\n   */\n  match?: RouteMatch\n\n  /**\n   * The incremental cache to use for the request.\n   */\n  incrementalCache?: any\n\n  /**\n   * The server components HMR cache, only for dev.\n   */\n  serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  /**\n   * Equals the segment path that was used for the prefetch RSC request.\n   */\n  segmentPrefetchRSCRequest?: string\n\n  /**\n   * True when the request is for the prefetch flight data.\n   */\n  isPrefetchRSCRequest?: true\n\n  /**\n   * True when the request is for the flight data.\n   */\n  isRSCRequest?: true\n\n  /**\n   * A search param set by the Next.js client when performing RSC requests.\n   * Because some CDNs do not vary their cache entries on our custom headers,\n   * this search param represents a hash of the header values. For any cached\n   * RSC request, we should verify that the hash matches before responding.\n   * Otherwise this can lead to cache poisoning.\n   * TODO: Consider not using custom request headers at all, and instead encode\n   * everything into the search param.\n   */\n  cacheBustingSearchParam?: string\n\n  /**\n   * True when the request is for the `/_next/data` route using the pages\n   * router.\n   */\n  isNextDataReq?: true\n\n  /**\n   * Postponed state to use for resumption. If present it's assumed that the\n   * request is for a page that has postponed (there are no guarantees that the\n   * page actually has postponed though as it would incur an additional cache\n   * lookup).\n   */\n  postponed?: string\n\n  /**\n   * If provided, this will be called when a response cache entry was generated\n   * or looked up in the cache.\n   */\n  onCacheEntry?: (\n    cacheEntry: any,\n    requestMeta: any\n  ) => Promise<boolean | void> | boolean | void\n\n  /**\n   * The previous revalidate before rendering 404 page for notFound: true\n   */\n  notFoundRevalidate?: number | false\n\n  /**\n   * In development, the original source page that returned a 404.\n   */\n  developmentNotFoundSourcePage?: string\n\n  /**\n   * The path we routed to and should be invoked\n   */\n  invokePath?: string\n\n  /**\n   * The specific page output we should be matching\n   */\n  invokeOutput?: string\n\n  /**\n   * The status we are invoking the request with from routing\n   */\n  invokeStatus?: number\n\n  /**\n   * The routing error we are invoking with\n   */\n  invokeError?: Error\n\n  /**\n   * The query parsed for the invocation\n   */\n  invokeQuery?: Record<string, undefined | string | string[]>\n\n  /**\n   * Whether the request is a middleware invocation\n   */\n  middlewareInvoke?: boolean\n\n  /**\n   * Whether the request should render the fallback shell or not.\n   */\n  renderFallbackShell?: boolean\n\n  /**\n   * Whether the request is for the custom error page.\n   */\n  customErrorRender?: true\n\n  /**\n   * Whether to bubble up the NoFallbackError to the caller when a 404 is\n   * returned.\n   */\n  bubbleNoFallback?: true\n\n  /**\n   * True when the request had locale information inferred from the default\n   * locale.\n   */\n  localeInferredFromDefault?: true\n\n  /**\n   * The locale that was inferred or explicitly set for the request.\n   */\n  locale?: string\n\n  /**\n   * The default locale that was inferred or explicitly set for the request.\n   */\n  defaultLocale?: string\n\n  /**\n   * The relative project dir the server is running in from project root\n   */\n  relativeProjectDir?: string\n\n  /**\n   * The dist directory the server is currently using\n   */\n  distDir?: string\n\n  /**\n   * The query after resolving routes\n   */\n  query?: ParsedUrlQuery\n\n  /**\n   * The params after resolving routes\n   */\n  params?: ParsedUrlQuery\n\n  /**\n   * The AMP validator to use in development\n   */\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n\n  /**\n   * ErrorOverlay component to use in development for pages router\n   */\n  PagesErrorDebug?: PagesDevOverlayBridgeType\n\n  /**\n   * Whether server is in minimal mode (this will be replaced with more\n   * specific flags in future)\n   */\n  minimalMode?: boolean\n\n  /**\n   * DEV only: The fallback params that should be used when validating prerenders during dev\n   */\n  devValidatingFallbackParams?: Map<string, string>\n}\n\n/**\n * Gets the request metadata. If no key is provided, the entire metadata object\n * is returned.\n *\n * @param req the request to get the metadata from\n * @param key the key to get from the metadata (optional)\n * @returns the value for the key or the entire metadata object\n */\nexport function getRequestMeta(\n  req: NextIncomingMessage,\n  key?: undefined\n): RequestMeta\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key: K\n): RequestMeta[K]\nexport function getRequestMeta<K extends keyof RequestMeta>(\n  req: NextIncomingMessage,\n  key?: K\n): RequestMeta | RequestMeta[K] {\n  const meta = req[NEXT_REQUEST_META] || {}\n  return typeof key === 'string' ? meta[key] : meta\n}\n\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */\nexport function setRequestMeta(req: NextIncomingMessage, meta: RequestMeta) {\n  req[NEXT_REQUEST_META] = meta\n  return meta\n}\n\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */\nexport function addRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K,\n  value: RequestMeta[K]\n) {\n  const meta = getRequestMeta(request)\n  meta[key] = value\n  return setRequestMeta(request, meta)\n}\n\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */\nexport function removeRequestMeta<K extends keyof RequestMeta>(\n  request: NextIncomingMessage,\n  key: K\n) {\n  const meta = getRequestMeta(request)\n  delete meta[key]\n  return setRequestMeta(request, meta)\n}\n\ntype NextQueryMetadata = {\n  /**\n   * The `_rsc` query parameter used for cache busting to ensure that the RSC\n   * requests do not get cached by the browser explicitly.\n   */\n  [NEXT_RSC_UNION_QUERY]?: string\n}\n\nexport type NextParsedUrlQuery = ParsedUrlQuery &\n  NextQueryMetadata & {\n    amp?: '1'\n  }\n\nexport interface NextUrlWithParsedQuery extends UrlWithParsedQuery {\n  query: NextParsedUrlQuery\n}\n","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport enum AdapterOutputType {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `PRERENDER` represents an ISR enabled route that might\n   * have a seeded cache entry or fallback generated during build\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * `STATIC_FILE` represents a static file (ie /_next/static)\n   */\n  STATIC_FILE = 'STATIC_FILE',\n\n  /**\n   * `MIDDLEWARE` represents the middleware output if present\n   */\n  MIDDLEWARE = 'MIDDLEWARE',\n}\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const TURBOPACK_CLIENT_BUILD_MANIFEST = 'client-build-manifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n// server/dynamic-css-manifest.js\nexport const DYNAMIC_CSS_MANIFEST = 'dynamic-css-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import fs from 'fs'\nimport path from 'path'\n\nexport function findDir(dir: string, name: 'pages' | 'app'): string | null {\n  // prioritize ./${name} over ./src/${name}\n  let curDir = path.join(dir, name)\n  if (fs.existsSync(curDir)) return curDir\n\n  curDir = path.join(dir, 'src', name)\n  if (fs.existsSync(curDir)) return curDir\n\n  return null\n}\n\nexport function findPagesDir(dir: string): {\n  pagesDir: string | undefined\n  appDir: string | undefined\n} {\n  const pagesDir = findDir(dir, 'pages') || undefined\n  const appDir = findDir(dir, 'app') || undefined\n\n  if (appDir == null && pagesDir == null) {\n    throw new Error(\n      \"> Couldn't find any `pages` or `app` directory. Please create one under the project root\"\n    )\n  }\n\n  return {\n    pagesDir,\n    appDir,\n  }\n}\n","export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n","import type { IncomingHttpHeaders } from 'http'\n\nimport { ReflectAdapter } from './reflect'\n\n/**\n * @internal\n */\nexport class ReadonlyHeadersError extends Error {\n  constructor() {\n    super(\n      'Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyHeadersError()\n  }\n}\n\nexport type ReadonlyHeaders = Headers & {\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  append(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  set(...args: any[]): void\n  /** @deprecated Method unavailable on `ReadonlyHeaders`. Read more: https://nextjs.org/docs/app/api-reference/functions/headers */\n  delete(...args: any[]): void\n}\nexport class HeadersAdapter extends Headers {\n  private readonly headers: IncomingHttpHeaders\n\n  constructor(headers: IncomingHttpHeaders) {\n    // We've already overridden the methods that would be called, so we're just\n    // calling the super constructor to ensure that the instanceof check works.\n    super()\n\n    this.headers = new Proxy(headers, {\n      get(target, prop, receiver) {\n        // Because this is just an object, we expect that all \"get\" operations\n        // are for properties. If it's a \"get\" for a symbol, we'll just return\n        // the symbol.\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return undefined.\n        if (typeof original === 'undefined') return\n\n        // If the original casing exists, return the value.\n        return ReflectAdapter.get(target, original, receiver)\n      },\n      set(target, prop, value, receiver) {\n        if (typeof prop === 'symbol') {\n          return ReflectAdapter.set(target, prop, value, receiver)\n        }\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, use the prop as the key.\n        return ReflectAdapter.set(target, original ?? prop, value, receiver)\n      },\n      has(target, prop) {\n        if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return false.\n        if (typeof original === 'undefined') return false\n\n        // If the original casing exists, return true.\n        return ReflectAdapter.has(target, original)\n      },\n      deleteProperty(target, prop) {\n        if (typeof prop === 'symbol')\n          return ReflectAdapter.deleteProperty(target, prop)\n\n        const lowercased = prop.toLowerCase()\n\n        // Let's find the original casing of the key. This assumes that there is\n        // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n        // headers object.\n        const original = Object.keys(headers).find(\n          (o) => o.toLowerCase() === lowercased\n        )\n\n        // If the original casing doesn't exist, return true.\n        if (typeof original === 'undefined') return true\n\n        // If the original casing exists, delete the property.\n        return ReflectAdapter.deleteProperty(target, original)\n      },\n    })\n  }\n\n  /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */\n  public static seal(headers: Headers): ReadonlyHeaders {\n    return new Proxy<ReadonlyHeaders>(headers, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'append':\n          case 'delete':\n          case 'set':\n            return ReadonlyHeadersError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n\n  /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */\n  private merge(value: string | string[]): string {\n    if (Array.isArray(value)) return value.join(', ')\n\n    return value\n  }\n\n  /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */\n  public static from(headers: IncomingHttpHeaders | Headers): Headers {\n    if (headers instanceof Headers) return headers\n\n    return new HeadersAdapter(headers)\n  }\n\n  public append(name: string, value: string): void {\n    const existing = this.headers[name]\n    if (typeof existing === 'string') {\n      this.headers[name] = [existing, value]\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      this.headers[name] = value\n    }\n  }\n\n  public delete(name: string): void {\n    delete this.headers[name]\n  }\n\n  public get(name: string): string | null {\n    const value = this.headers[name]\n    if (typeof value !== 'undefined') return this.merge(value)\n\n    return null\n  }\n\n  public has(name: string): boolean {\n    return typeof this.headers[name] !== 'undefined'\n  }\n\n  public set(name: string, value: string): void {\n    this.headers[name] = value\n  }\n\n  public forEach(\n    callbackfn: (value: string, name: string, parent: Headers) => void,\n    thisArg?: any\n  ): void {\n    for (const [name, value] of this.entries()) {\n      callbackfn.call(thisArg, value, name, this)\n    }\n  }\n\n  public *entries(): HeadersIterator<[string, string]> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(name) as string\n\n      yield [name, value] as [string, string]\n    }\n  }\n\n  public *keys(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      const name = key.toLowerCase()\n      yield name\n    }\n  }\n\n  public *values(): HeadersIterator<string> {\n    for (const key of Object.keys(this.headers)) {\n      // We assert here that this is a string because we got it from the\n      // Object.keys() call above.\n      const value = this.get(key) as string\n\n      yield value\n    }\n  }\n\n  public [Symbol.iterator](): HeadersIterator<[string, string]> {\n    return this.entries()\n  }\n}\n","import type { ServerRuntime } from '../types'\n\nexport const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain'\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8'\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8'\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { CookieSerializeOptions } from 'next/dist/compiled/cookie'\nimport type { NextApiResponse } from '../../shared/lib/utils'\n\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers'\nimport {\n  PRERENDER_REVALIDATE_HEADER,\n  PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER,\n} from '../../lib/constants'\nimport { getTracer } from '../lib/trace/tracer'\nimport { NodeSpan } from '../lib/trace/constants'\n\nexport type NextApiRequestCookies = Partial<{ [key: string]: string }>\nexport type NextApiRequestQuery = Partial<{ [key: string]: string | string[] }>\n\nexport type __ApiPreviewProps = {\n  previewModeId: string\n  previewModeEncryptionKey: string\n  previewModeSigningKey: string\n}\n\nexport function wrapApiHandler<T extends (...args: any[]) => any>(\n  page: string,\n  handler: T\n): T {\n  return ((...args) => {\n    getTracer().setRootSpanAttribute('next.route', page)\n    // Call API route method\n    return getTracer().trace(\n      NodeSpan.runHandler,\n      {\n        spanName: `executing api route (pages) ${page}`,\n      },\n      () => handler(...args)\n    )\n  }) as T\n}\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */\nexport function sendStatusCode(\n  res: NextApiResponse,\n  statusCode: number\n): NextApiResponse<any> {\n  res.statusCode = statusCode\n  return res\n}\n\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */\nexport function redirect(\n  res: NextApiResponse,\n  statusOrUrl: string | number,\n  url?: string\n): NextApiResponse<any> {\n  if (typeof statusOrUrl === 'string') {\n    url = statusOrUrl\n    statusOrUrl = 307\n  }\n  if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n    throw new Error(\n      `Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`\n    )\n  }\n  res.writeHead(statusOrUrl, { Location: url })\n  res.write(url)\n  res.end()\n  return res\n}\n\nexport function checkIsOnDemandRevalidate(\n  req: Request | IncomingMessage | BaseNextRequest,\n  previewProps: __ApiPreviewProps\n): {\n  isOnDemandRevalidate: boolean\n  revalidateOnlyGenerated: boolean\n} {\n  const headers = HeadersAdapter.from(req.headers)\n\n  const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER)\n  const isOnDemandRevalidate = previewModeId === previewProps.previewModeId\n\n  const revalidateOnlyGenerated = headers.has(\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER\n  )\n\n  return { isOnDemandRevalidate, revalidateOnlyGenerated }\n}\n\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`\n\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024\n\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA)\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS)\n\nexport function clearPreviewData<T>(\n  res: NextApiResponse<T>,\n  options: {\n    path?: string\n  } = {}\n): NextApiResponse<T> {\n  if (SYMBOL_CLEARED_COOKIES in res) {\n    return res\n  }\n\n  const { serialize } =\n    require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n  const previous = res.getHeader('Set-Cookie')\n  res.setHeader(`Set-Cookie`, [\n    ...(typeof previous === 'string'\n      ? [previous]\n      : Array.isArray(previous)\n        ? previous\n        : []),\n    serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n    serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n      // To delete a cookie, set `expires` to a date in the past:\n      // https://tools.ietf.org/html/rfc6265#section-4.1.1\n      // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n      expires: new Date(0),\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n      secure: process.env.NODE_ENV !== 'development',\n      path: '/',\n      ...(options.path !== undefined\n        ? ({ path: options.path } as CookieSerializeOptions)\n        : undefined),\n    }),\n  ])\n\n  Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n    value: true,\n    enumerable: false,\n  })\n  return res\n}\n\n/**\n * Custom error class\n */\nexport class ApiError extends Error {\n  readonly statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n    this.statusCode = statusCode\n  }\n}\n\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */\nexport function sendError(\n  res: NextApiResponse,\n  statusCode: number,\n  message: string\n): void {\n  res.statusCode = statusCode\n  res.statusMessage = message\n  res.end(message)\n}\n\ninterface LazyProps {\n  req: IncomingMessage\n}\n\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */\nexport function setLazyProp<T>(\n  { req }: LazyProps,\n  prop: string,\n  getter: () => T\n): void {\n  const opts = { configurable: true, enumerable: true }\n  const optsReset = { ...opts, writable: true }\n\n  Object.defineProperty(req, prop, {\n    ...opts,\n    get: () => {\n      const value = getter()\n      // we set the property on the object to avoid recalculating it\n      Object.defineProperty(req, prop, { ...optsReset, value })\n      return value\n    },\n    set: (value) => {\n      Object.defineProperty(req, prop, { ...optsReset, value })\n    },\n  })\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } =\n      require('next/dist/compiled/cookie') as typeof import('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n","import type { IncomingHttpHeaders, OutgoingHttpHeaders } from 'http'\nimport type { I18NConfig } from '../config-shared'\n\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code'\nimport type { NextApiRequestCookies } from '../api-utils'\nimport { getCookieParser } from '../api-utils/get-cookie-parser'\n\nexport interface BaseNextRequestConfig {\n  basePath: string | undefined\n  i18n?: I18NConfig\n  trailingSlash?: boolean | undefined\n}\n\nexport type FetchMetric = {\n  url: string\n  idx: number\n  end: number\n  start: number\n  method: string\n  status: number\n  cacheReason: string\n  cacheStatus: 'hit' | 'miss' | 'skip' | 'hmr'\n  cacheWarning?: string\n}\n\nexport type FetchMetrics = Array<FetchMetric>\n\nexport abstract class BaseNextRequest<Body = any> {\n  protected _cookies: NextApiRequestCookies | undefined\n  public abstract headers: IncomingHttpHeaders\n  public abstract fetchMetrics: FetchMetric[] | undefined\n\n  constructor(\n    public method: string,\n    public url: string,\n    public body: Body\n  ) {}\n\n  // Utils implemented using the abstract methods above\n\n  public get cookies() {\n    if (this._cookies) return this._cookies\n    return (this._cookies = getCookieParser(this.headers)())\n  }\n}\n\nexport abstract class BaseNextResponse<Destination = any> {\n  abstract statusCode: number | undefined\n  abstract statusMessage: string | undefined\n  abstract get sent(): boolean\n\n  constructor(public destination: Destination) {}\n\n  /**\n   * Sets a value for the header overwriting existing values\n   */\n  abstract setHeader(name: string, value: string | string[]): this\n\n  /**\n   * Removes a header\n   */\n  abstract removeHeader(name: string): this\n\n  /**\n   * Appends value for the given header name\n   */\n  abstract appendHeader(name: string, value: string): this\n\n  /**\n   * Get all values for a header as an array or undefined if no value is present\n   */\n  abstract getHeaderValues(name: string): string[] | undefined\n\n  abstract hasHeader(name: string): boolean\n\n  /**\n   * Get values for a header concatenated using `,` or undefined if no value is present\n   */\n  abstract getHeader(name: string): string | undefined\n\n  abstract getHeaders(): OutgoingHttpHeaders\n\n  abstract body(value: string): this\n\n  abstract send(): void\n\n  abstract onClose(callback: () => void): void\n\n  // Utils implemented using the abstract methods above\n\n  public redirect(destination: string, statusCode: number) {\n    this.setHeader('Location', destination)\n    this.statusCode = statusCode\n\n    // Since IE11 doesn't support the 308 header add backwards\n    // compatibility using refresh header\n    if (statusCode === RedirectStatusCode.PermanentRedirect) {\n      this.setHeader('Refresh', `0;url=${destination}`)\n    }\n\n    return this\n  }\n}\n","import type { ServerResponse, IncomingMessage } from 'http'\nimport type { Writable, Readable } from 'stream'\n\nimport { SYMBOL_CLEARED_COOKIES } from '../api-utils'\nimport type { NextApiRequestCookies } from '../api-utils'\n\nimport { NEXT_REQUEST_META } from '../request-meta'\nimport type { RequestMeta } from '../request-meta'\n\nimport { BaseNextRequest, BaseNextResponse, type FetchMetric } from './index'\nimport type { OutgoingHttpHeaders } from 'node:http'\n\ntype Req = IncomingMessage & {\n  [NEXT_REQUEST_META]?: RequestMeta\n  cookies?: NextApiRequestCookies\n  fetchMetrics?: FetchMetric[]\n}\n\nexport class NodeNextRequest extends BaseNextRequest<Readable> {\n  public headers = this._req.headers\n  public fetchMetrics: FetchMetric[] | undefined = this._req?.fetchMetrics;\n\n  [NEXT_REQUEST_META]: RequestMeta = this._req[NEXT_REQUEST_META] || {}\n\n  constructor(private _req: Req) {\n    super(_req.method!.toUpperCase(), _req.url!, _req)\n  }\n\n  get originalRequest() {\n    // Need to mimic these changes to the original req object for places where we use it:\n    // render.tsx, api/ssg requests\n    this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META]\n    this._req.url = this.url\n    this._req.cookies = this.cookies\n    return this._req\n  }\n\n  set originalRequest(value: Req) {\n    this._req = value\n  }\n\n  private streaming = false\n\n  /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */\n  public stream() {\n    if (this.streaming) {\n      throw new Error(\n        'Invariant: NodeNextRequest.stream() can only be called once'\n      )\n    }\n    this.streaming = true\n\n    return new ReadableStream({\n      start: (controller) => {\n        this._req.on('data', (chunk) => {\n          controller.enqueue(new Uint8Array(chunk))\n        })\n        this._req.on('end', () => {\n          controller.close()\n        })\n        this._req.on('error', (err) => {\n          controller.error(err)\n        })\n      },\n    })\n  }\n}\n\nexport class NodeNextResponse extends BaseNextResponse<Writable> {\n  private textBody: string | undefined = undefined\n\n  public [SYMBOL_CLEARED_COOKIES]?: boolean\n\n  get originalResponse() {\n    if (SYMBOL_CLEARED_COOKIES in this) {\n      this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES]\n    }\n\n    return this._res\n  }\n\n  constructor(\n    private _res: ServerResponse & { [SYMBOL_CLEARED_COOKIES]?: boolean }\n  ) {\n    super(_res)\n  }\n\n  get sent() {\n    return this._res.finished || this._res.headersSent\n  }\n\n  get statusCode() {\n    return this._res.statusCode\n  }\n\n  set statusCode(value: number) {\n    this._res.statusCode = value\n  }\n\n  get statusMessage() {\n    return this._res.statusMessage\n  }\n\n  set statusMessage(value: string) {\n    this._res.statusMessage = value\n  }\n\n  setHeader(name: string, value: string | string[]): this {\n    this._res.setHeader(name, value)\n    return this\n  }\n\n  removeHeader(name: string): this {\n    this._res.removeHeader(name)\n    return this\n  }\n\n  getHeaderValues(name: string): string[] | undefined {\n    const values = this._res.getHeader(name)\n\n    if (values === undefined) return undefined\n\n    return (Array.isArray(values) ? values : [values]).map((value) =>\n      value.toString()\n    )\n  }\n\n  hasHeader(name: string): boolean {\n    return this._res.hasHeader(name)\n  }\n\n  getHeader(name: string): string | undefined {\n    const values = this.getHeaderValues(name)\n    return Array.isArray(values) ? values.join(',') : undefined\n  }\n\n  getHeaders(): OutgoingHttpHeaders {\n    return this._res.getHeaders()\n  }\n\n  appendHeader(name: string, value: string): this {\n    const currentValues = this.getHeaderValues(name) ?? []\n\n    if (!currentValues.includes(value)) {\n      this._res.setHeader(name, [...currentValues, value])\n    }\n\n    return this\n  }\n\n  body(value: string) {\n    this.textBody = value\n    return this\n  }\n\n  send() {\n    this._res.end(this.textBody)\n  }\n\n  public onClose(callback: () => void) {\n    this.originalResponse.on('close', callback)\n  }\n}\n","import type { IncomingMessage, ServerResponse } from 'http'\nimport type RenderResult from './render-result'\nimport type { CacheControl } from './lib/cache-control'\n\nimport { isResSent } from '../shared/lib/utils'\nimport { generateETag } from './lib/etag'\nimport fresh from 'next/dist/compiled/fresh'\nimport { getCacheControlHeader } from './lib/cache-control'\nimport { HTML_CONTENT_TYPE_HEADER } from '../lib/constants'\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n\nexport async function sendRenderResult({\n  req,\n  res,\n  result,\n  generateEtags,\n  poweredByHeader,\n  cacheControl,\n}: {\n  req: IncomingMessage\n  res: ServerResponse\n  result: RenderResult\n  generateEtags: boolean\n  poweredByHeader: boolean\n  cacheControl: CacheControl | undefined\n}): Promise<void> {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && result.contentType === HTML_CONTENT_TYPE_HEADER) {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  // If cache control is already set on the response we don't\n  // override it to allow users to customize it via next.config\n  if (cacheControl && !res.getHeader('Cache-Control')) {\n    res.setHeader('Cache-Control', getCacheControlHeader(cacheControl))\n  }\n\n  const payload = result.isDynamic ? null : result.toUnchunkedString()\n\n  if (generateEtags && payload !== null) {\n    const etag = generateETag(payload)\n    if (sendEtagResponse(req, res, etag)) {\n      return\n    }\n  }\n\n  if (!res.getHeader('Content-Type') && result.contentType) {\n    res.setHeader('Content-Type', result.contentType)\n  }\n\n  if (payload) {\n    res.setHeader('Content-Length', Buffer.byteLength(payload))\n  }\n\n  if (req.method === 'HEAD') {\n    res.end(null)\n    return\n  }\n\n  if (payload !== null) {\n    res.end(payload)\n    return\n  }\n\n  // Pipe the render result to the response after we get a writer for it.\n  await result.pipeToNodeResponse(res)\n}\n","import { CACHE_ONE_YEAR } from '../../lib/constants'\n\n/**\n * The revalidate option used internally for pages. A value of `false` means\n * that the page should not be revalidated. A number means that the page\n * should be revalidated after the given number of seconds (this also includes\n * `1` which means to revalidate after 1 second). A value of `0` is not a valid\n * value for this option.\n */\nexport type Revalidate = number | false\n\nexport interface CacheControl {\n  revalidate: Revalidate\n  expire: number | undefined\n}\n\nexport function getCacheControlHeader({\n  revalidate,\n  expire,\n}: CacheControl): string {\n  const swrHeader =\n    typeof revalidate === 'number' &&\n    expire !== undefined &&\n    revalidate < expire\n      ? `, stale-while-revalidate=${expire - revalidate}`\n      : ''\n\n  if (revalidate === 0) {\n    return 'private, no-cache, no-store, max-age=0, must-revalidate'\n  } else if (typeof revalidate === 'number') {\n    return `s-maxage=${revalidate}${swrHeader}`\n  }\n\n  return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`\n}\n","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */\nexport const fnv1a52 = (str: string) => {\n  const len = str.length\n  let i = 0,\n    t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2\n\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++)\n    t0 = v0 * 435\n    t1 = v1 * 435\n    t2 = v2 * 435\n    t3 = v3 * 435\n    t2 += v0 << 8\n    t3 += v1 << 8\n    t1 += t0 >>> 16\n    v0 = t0 & 65535\n    t2 += t1 >>> 16\n    v1 = t1 & 65535\n    v3 = (t3 + (t2 >>> 16)) & 65535\n    v2 = t2 & 65535\n  }\n\n  return (\n    (v3 & 15) * 281474976710656 +\n    v2 * 4294967296 +\n    v1 * 65536 +\n    (v0 ^ (v3 >> 4))\n  )\n}\n\nexport const generateETag = (payload: string, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"'\n  return (\n    prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"'\n  )\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n  slashes: boolean | undefined\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n    slashes:\n      parsedURL.href.slice(\n        parsedURL.protocol.length,\n        parsedURL.protocol.length + 2\n      ) === '//',\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n  slashes: undefined\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n    // We don't know for relative URLs at this point since we set a custom, internal\n    // base that isn't surfaced to users.\n    slashes: undefined,\n  }\n}\n","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors'\nimport { LRUCache } from '../../server/lib/lru-cache'\n\nexport const prefixes = {\n  wait: white(bold('○')),\n  error: red(bold('⨯')),\n  warn: yellow(bold('⚠')),\n  ready: '▲', // no color\n  info: white(bold(' ')),\n  event: green(bold('✓')),\n  trace: magenta(bold('»')),\n} as const\n\nconst LOGGING_METHOD = {\n  log: 'log',\n  warn: 'warn',\n  error: 'error',\n} as const\n\nfunction prefixedLog(prefixType: keyof typeof prefixes, ...message: any[]) {\n  if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n    message.shift()\n  }\n\n  const consoleMethod: keyof typeof LOGGING_METHOD =\n    prefixType in LOGGING_METHOD\n      ? LOGGING_METHOD[prefixType as keyof typeof LOGGING_METHOD]\n      : 'log'\n\n  const prefix = prefixes[prefixType]\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod]('')\n  } else {\n    // Ensure if there's ANSI escape codes it's concatenated into one string.\n    // Chrome DevTool can only handle color if it's in one string.\n    if (message.length === 1 && typeof message[0] === 'string') {\n      console[consoleMethod](' ' + prefix + ' ' + message[0])\n    } else {\n      console[consoleMethod](' ' + prefix, ...message)\n    }\n  }\n}\n\nexport function bootstrap(...message: string[]) {\n  // logging format: ' <prefix> <message>'\n  // e.g. ' ✓ Compiled successfully'\n  // Add spaces to align with the indent of other logs\n  console.log('   ' + message.join(' '))\n}\n\nexport function wait(...message: any[]) {\n  prefixedLog('wait', ...message)\n}\n\nexport function error(...message: any[]) {\n  prefixedLog('error', ...message)\n}\n\nexport function warn(...message: any[]) {\n  prefixedLog('warn', ...message)\n}\n\nexport function ready(...message: any[]) {\n  prefixedLog('ready', ...message)\n}\n\nexport function info(...message: any[]) {\n  prefixedLog('info', ...message)\n}\n\nexport function event(...message: any[]) {\n  prefixedLog('event', ...message)\n}\n\nexport function trace(...message: any[]) {\n  prefixedLog('trace', ...message)\n}\n\nconst warnOnceCache = new LRUCache<string>(10_000, (value) => value.length)\nexport function warnOnce(...message: any[]) {\n  const key = message.join(' ')\n  if (!warnOnceCache.has(key)) {\n    warnOnceCache.set(key, key)\n    warn(...message)\n  }\n}\n","// Regex from `node/lib/internal/net.js`: https://github.com/nodejs/node/blob/9fc57006c27564ed7f75eee090eca86786508f51/lib/internal/net.js#L19-L29\n// License included below:\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])'\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})'\nconst IPv6Reg = new RegExp(\n  '^(' +\n    `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n    `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n    `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n    `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n    `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n    `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n    `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n    ')(%[0-9a-zA-Z-.:]{1,})?$'\n)\n\nexport function isIPv6(s: string) {\n  return IPv6Reg.test(s)\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\n// Note: The pattern [\\w-]+-Google captures all Google crawlers with \"-Google\" suffix (e.g., Mediapartners-Google, AdsBot-Google, Storebot-Google)\n// as well as crawlers starting with \"Google-\" (e.g., Google-PageRenderer, Google-InspectionTool)\nexport const HTML_LIMITED_BOT_UA_RE =\n  /[\\w-]+-Google|Google-[\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight/i\n","import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS.\n// Only the main Googlebot search crawler executes JavaScript, not other Google crawlers.\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\n// This regex specifically matches \"Googlebot\" but NOT \"Mediapartners-Google\", \"AdsBot-Google\", etc.\nconst HEADLESS_BROWSER_BOT_UA_RE = /Googlebot(?!-)|Googlebot$/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n","import type { ReactDOMServerReadableStream } from 'react-dom/server'\nimport { getTracer } from '../lib/trace/tracer'\nimport { AppRenderSpan } from '../lib/trace/constants'\nimport { DetachedPromise } from '../../lib/detached-promise'\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler'\nimport { ENCODED_TAGS } from './encoded-tags'\nimport {\n  indexOfUint8Array,\n  isEquivalentUint8Arrays,\n  removeFromUint8Array,\n} from './uint8array-helpers'\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants'\nimport { insertBuildIdComment } from '../../shared/lib/segment-cache/output-export-prefetch-encoding'\n\nfunction voidCatch() {\n  // this catcher is designed to be used with pipeTo where we expect the underlying\n  // pipe implementation to forward errors but we don't want the pipeTo promise to reject\n  // and be unhandled\n}\n\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder()\n\nexport function chainStreams<T>(\n  ...streams: ReadableStream<T>[]\n): ReadableStream<T> {\n  // If we have no streams, return an empty stream. This behavior is\n  // intentional as we're now providing the `RenderResult.EMPTY` value.\n  if (streams.length === 0) {\n    return new ReadableStream<T>({\n      start(controller) {\n        controller.close()\n      },\n    })\n  }\n\n  // If we only have 1 stream we fast path it by returning just this stream\n  if (streams.length === 1) {\n    return streams[0]\n  }\n\n  const { readable, writable } = new TransformStream()\n\n  // We always initiate pipeTo immediately. We know we have at least 2 streams\n  // so we need to avoid closing the writable when this one finishes.\n  let promise = streams[0].pipeTo(writable, { preventClose: true })\n\n  let i = 1\n  for (; i < streams.length - 1; i++) {\n    const nextStream = streams[i]\n    promise = promise.then(() =>\n      nextStream.pipeTo(writable, { preventClose: true })\n    )\n  }\n\n  // We can omit the length check because we halted before the last stream and there\n  // is at least two streams so the lastStream here will always be defined\n  const lastStream = streams[i]\n  promise = promise.then(() => lastStream.pipeTo(writable))\n\n  // Catch any errors from the streams and ignore them, they will be handled\n  // by whatever is consuming the readable stream.\n  promise.catch(voidCatch)\n\n  return readable\n}\n\nexport function streamFromString(str: string): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(encoder.encode(str))\n      controller.close()\n    },\n  })\n}\n\nexport function streamFromBuffer(chunk: Buffer): ReadableStream<Uint8Array> {\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(chunk)\n      controller.close()\n    },\n  })\n}\n\nexport async function streamToBuffer(\n  stream: ReadableStream<Uint8Array>\n): Promise<Buffer> {\n  const reader = stream.getReader()\n  const chunks: Uint8Array[] = []\n\n  while (true) {\n    const { done, value } = await reader.read()\n    if (done) {\n      break\n    }\n\n    chunks.push(value)\n  }\n\n  return Buffer.concat(chunks)\n}\n\nexport async function streamToString(\n  stream: ReadableStream<Uint8Array>,\n  signal?: AbortSignal\n): Promise<string> {\n  const decoder = new TextDecoder('utf-8', { fatal: true })\n  let string = ''\n\n  for await (const chunk of stream) {\n    if (signal?.aborted) {\n      return string\n    }\n\n    string += decoder.decode(chunk, { stream: true })\n  }\n\n  string += decoder.decode()\n\n  return string\n}\n\nexport function createBufferedTransformStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let bufferedChunks: Array<Uint8Array> = []\n  let bufferByteLength: number = 0\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    // If we already have a pending flush, then return early.\n    if (pending) return\n\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        const chunk = new Uint8Array(bufferByteLength)\n        let copiedBytes = 0\n\n        for (let i = 0; i < bufferedChunks.length; i++) {\n          const bufferedChunk = bufferedChunks[i]\n          chunk.set(bufferedChunk, copiedBytes)\n          copiedBytes += bufferedChunk.byteLength\n        }\n        // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n        // and our bufferByteLength to prepare for the next round of buffered chunks\n        bufferedChunks.length = 0\n        bufferByteLength = 0\n        controller.enqueue(chunk)\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      // Combine the previous buffer with the new chunk.\n      bufferedChunks.push(chunk)\n      bufferByteLength += chunk.byteLength\n\n      // Flush the buffer to the controller.\n      flush(controller)\n    },\n    flush() {\n      if (!pending) return\n\n      return pending.promise\n    },\n  })\n}\n\nfunction createPrefetchCommentStream(\n  isBuildTimePrerendering: boolean,\n  buildId: string\n): TransformStream<Uint8Array, Uint8Array> {\n  // Insert an extra comment at the beginning of the HTML document. This must\n  // come after the DOCTYPE, which is inserted by React.\n  //\n  // The first chunk sent by React will contain the doctype. After that, we can\n  // pass through the rest of the chunks as-is.\n  let didTransformFirstChunk = false\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (isBuildTimePrerendering && !didTransformFirstChunk) {\n        didTransformFirstChunk = true\n        const decoder = new TextDecoder('utf-8', { fatal: true })\n        const chunkStr = decoder.decode(chunk, {\n          stream: true,\n        })\n        const updatedChunkStr = insertBuildIdComment(chunkStr, buildId)\n        controller.enqueue(encoder.encode(updatedChunkStr))\n        return\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nexport function renderToInitialFizzStream({\n  ReactDOMServer,\n  element,\n  streamOptions,\n}: {\n  ReactDOMServer: {\n    renderToReadableStream: typeof import('react-dom/server').renderToReadableStream\n  }\n  element: React.ReactElement\n  streamOptions?: Parameters<typeof ReactDOMServer.renderToReadableStream>[1]\n}): Promise<ReactDOMServerReadableStream> {\n  return getTracer().trace(AppRenderSpan.renderToReadableStream, async () =>\n    ReactDOMServer.renderToReadableStream(element, streamOptions)\n  )\n}\n\nfunction createMetadataTransformStream(\n  insert: () => Promise<string> | string\n): TransformStream<Uint8Array, Uint8Array> {\n  let chunkIndex = -1\n  let isMarkRemoved = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      let iconMarkIndex = -1\n      let closedHeadIndex = -1\n      chunkIndex++\n\n      if (isMarkRemoved) {\n        controller.enqueue(chunk)\n        return\n      }\n      let iconMarkLength = 0\n      // Only search for the closed head tag once\n      if (iconMarkIndex === -1) {\n        iconMarkIndex = indexOfUint8Array(chunk, ENCODED_TAGS.META.ICON_MARK)\n        if (iconMarkIndex === -1) {\n          controller.enqueue(chunk)\n          return\n        } else {\n          // When we found the `<meta name=\"«nxt-icon»\"` tag prefix, we will remove it from the chunk.\n          // Its close tag could either be `/>` or `>`, checking the next char to ensure we cover both cases.\n          iconMarkLength = ENCODED_TAGS.META.ICON_MARK.length\n          // Check if next char is /, this is for xml mode.\n          if (chunk[iconMarkIndex + iconMarkLength] === 47) {\n            iconMarkLength += 2\n          } else {\n            // The last char is `>`\n            iconMarkLength++\n          }\n        }\n      }\n\n      // Check if icon mark is inside <head> tag in the first chunk.\n      if (chunkIndex === 0) {\n        closedHeadIndex = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        if (iconMarkIndex !== -1) {\n          // The mark icon is located in the 1st chunk before the head tag.\n          // We do not need to insert the script tag in this case because it's in the head.\n          // Just remove the icon mark from the chunk.\n          if (iconMarkIndex < closedHeadIndex) {\n            const replaced = new Uint8Array(chunk.length - iconMarkLength)\n\n            // Remove the icon mark from the chunk.\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex\n            )\n            chunk = replaced\n          } else {\n            // The icon mark is after the head tag, replace and insert the script tag at that position.\n            const insertion = await insert()\n            const encodedInsertion = encoder.encode(insertion)\n            const insertionLength = encodedInsertion.length\n            const replaced = new Uint8Array(\n              chunk.length - iconMarkLength + insertionLength\n            )\n            replaced.set(chunk.subarray(0, iconMarkIndex))\n            replaced.set(encodedInsertion, iconMarkIndex)\n            replaced.set(\n              chunk.subarray(iconMarkIndex + iconMarkLength),\n              iconMarkIndex + insertionLength\n            )\n            chunk = replaced\n          }\n          isMarkRemoved = true\n        }\n        // If there's no icon mark located, it will be handled later when if present in the following chunks.\n      } else {\n        // When it's appeared in the following chunks, we'll need to\n        // remove the mark and then insert the script tag at that position.\n        const insertion = await insert()\n        const encodedInsertion = encoder.encode(insertion)\n        const insertionLength = encodedInsertion.length\n        // Replace the icon mark with the hoist script or empty string.\n        const replaced = new Uint8Array(\n          chunk.length - iconMarkLength + insertionLength\n        )\n        // Set the first part of the chunk, before the icon mark.\n        replaced.set(chunk.subarray(0, iconMarkIndex))\n        // Set the insertion after the icon mark.\n        replaced.set(encodedInsertion, iconMarkIndex)\n\n        // Set the rest of the chunk after the icon mark.\n        replaced.set(\n          chunk.subarray(iconMarkIndex + iconMarkLength),\n          iconMarkIndex + insertionLength\n        )\n        chunk = replaced\n        isMarkRemoved = true\n      }\n      controller.enqueue(chunk)\n    },\n  })\n}\n\nfunction createHeadInsertionTransformStream(\n  insert: () => Promise<string>\n): TransformStream<Uint8Array, Uint8Array> {\n  let inserted = false\n\n  // We need to track if this transform saw any bytes because if it didn't\n  // we won't want to insert any server HTML at all\n  let hasBytes = false\n\n  return new TransformStream({\n    async transform(chunk, controller) {\n      hasBytes = true\n\n      const insertion = await insert()\n      if (inserted) {\n        if (insertion) {\n          const encodedInsertion = encoder.encode(insertion)\n          controller.enqueue(encodedInsertion)\n        }\n        controller.enqueue(chunk)\n      } else {\n        // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n        const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD)\n        // In fully static rendering or non PPR rendering cases:\n        // `/head>` will always be found in the chunk in first chunk rendering.\n        if (index !== -1) {\n          if (insertion) {\n            const encodedInsertion = encoder.encode(insertion)\n            // Get the total count of the bytes in the chunk and the insertion\n            // e.g.\n            // chunk = <head><meta charset=\"utf-8\"></head>\n            // insertion = <script>...</script>\n            // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n            const insertedHeadContent = new Uint8Array(\n              chunk.length + encodedInsertion.length\n            )\n            // Append the first part of the chunk, before the head tag\n            insertedHeadContent.set(chunk.slice(0, index))\n            // Append the server inserted content\n            insertedHeadContent.set(encodedInsertion, index)\n            // Append the rest of the chunk\n            insertedHeadContent.set(\n              chunk.slice(index),\n              index + encodedInsertion.length\n            )\n            controller.enqueue(insertedHeadContent)\n          } else {\n            controller.enqueue(chunk)\n          }\n          inserted = true\n        } else {\n          // This will happens in PPR rendering during next start, when the page is partially rendered.\n          // When the page resumes, the head tag will be found in the middle of the chunk.\n          // Where we just need to append the insertion and chunk to the current stream.\n          // e.g.\n          // PPR-static: <head>...</head><body> [ resume content ] </body>\n          // PPR-resume: [ insertion ] [ rest content ]\n          if (insertion) {\n            controller.enqueue(encoder.encode(insertion))\n          }\n          controller.enqueue(chunk)\n          inserted = true\n        }\n      }\n    },\n    async flush(controller) {\n      // Check before closing if there's anything remaining to insert.\n      if (hasBytes) {\n        const insertion = await insert()\n        if (insertion) {\n          controller.enqueue(encoder.encode(insertion))\n        }\n      }\n    },\n  })\n}\n\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(\n  suffix: string\n): TransformStream<Uint8Array, Uint8Array> {\n  let flushed = false\n  let pending: DetachedPromise<void> | undefined\n\n  const flush = (controller: TransformStreamDefaultController) => {\n    const detached = new DetachedPromise<void>()\n    pending = detached\n\n    scheduleImmediate(() => {\n      try {\n        controller.enqueue(encoder.encode(suffix))\n      } catch {\n        // If an error occurs while enqueuing it can't be due to this\n        // transformers fault. It's likely due to the controller being\n        // errored due to the stream being cancelled.\n      } finally {\n        pending = undefined\n        detached.resolve()\n      }\n    })\n  }\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // If we've already flushed, we're done.\n      if (flushed) return\n\n      // Schedule the flush to happen.\n      flushed = true\n      flush(controller)\n    },\n    flush(controller) {\n      if (pending) return pending.promise\n      if (flushed) return\n\n      // Flush now.\n      controller.enqueue(encoder.encode(suffix))\n    },\n  })\n}\n\nfunction createFlightDataInjectionTransformStream(\n  stream: ReadableStream<Uint8Array>,\n  delayDataUntilFirstHtmlChunk: boolean\n): TransformStream<Uint8Array, Uint8Array> {\n  let htmlStreamFinished = false\n\n  let pull: Promise<void> | null = null\n  let donePulling = false\n\n  function startOrContinuePulling(\n    controller: TransformStreamDefaultController\n  ) {\n    if (!pull) {\n      pull = startPulling(controller)\n    }\n    return pull\n  }\n\n  async function startPulling(controller: TransformStreamDefaultController) {\n    const reader = stream.getReader()\n\n    if (delayDataUntilFirstHtmlChunk) {\n      // NOTE: streaming flush\n      // We are buffering here for the inlined data stream because the\n      // \"shell\" stream might be chunkenized again by the underlying stream\n      // implementation, e.g. with a specific high-water mark. To ensure it's\n      // the safe timing to pipe the data stream, this extra tick is\n      // necessary.\n\n      // We don't start reading until we've left the current Task to ensure\n      // that it's inserted after flushing the shell. Note that this implementation\n      // might get stale if impl details of Fizz change in the future.\n      await atLeastOneTask()\n    }\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (done) {\n          donePulling = true\n          return\n        }\n\n        // We want to prioritize HTML over RSC data.\n        // The SSR render is based on the same RSC stream, so when we get a new RSC chunk,\n        // we're likely to produce an HTML chunk as well, so give it a chance to flush first.\n        if (!delayDataUntilFirstHtmlChunk && !htmlStreamFinished) {\n          await atLeastOneTask()\n        }\n        controller.enqueue(value)\n      }\n    } catch (err) {\n      controller.error(err)\n    }\n  }\n\n  return new TransformStream({\n    start(controller) {\n      if (!delayDataUntilFirstHtmlChunk) {\n        startOrContinuePulling(controller)\n      }\n    },\n    transform(chunk, controller) {\n      controller.enqueue(chunk)\n\n      // Start the streaming if it hasn't already been started yet.\n      if (delayDataUntilFirstHtmlChunk) {\n        startOrContinuePulling(controller)\n      }\n    },\n    flush(controller) {\n      htmlStreamFinished = true\n      if (donePulling) {\n        return\n      }\n      return startOrContinuePulling(controller)\n    },\n  })\n}\n\nconst CLOSE_TAG = '</body></html>'\n\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */\nfunction createMoveSuffixStream(): TransformStream<Uint8Array, Uint8Array> {\n  let foundSuffix = false\n\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (foundSuffix) {\n        return controller.enqueue(chunk)\n      }\n\n      const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n      if (index > -1) {\n        foundSuffix = true\n\n        // If the whole chunk is the suffix, then don't write anything, it will\n        // be written in the flush.\n        if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n          return\n        }\n\n        // Write out the part before the suffix.\n        const before = chunk.slice(0, index)\n        controller.enqueue(before)\n\n        // In the case where the suffix is in the middle of the chunk, we need\n        // to split the chunk into two parts.\n        if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n          // Write out the part after the suffix.\n          const after = chunk.slice(\n            index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length\n          )\n          controller.enqueue(after)\n        }\n      } else {\n        controller.enqueue(chunk)\n      }\n    },\n    flush(controller) {\n      // Even if we didn't find the suffix, the HTML is not valid if we don't\n      // add it, so insert it at the end.\n      controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML)\n    },\n  })\n}\n\nfunction createStripDocumentClosingTagsTransform(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  return new TransformStream({\n    transform(chunk, controller) {\n      // We rely on the assumption that chunks will never break across a code unit.\n      // This is reasonable because we currently concat all of React's output from a single\n      // flush into one chunk before streaming it forward which means the chunk will represent\n      // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n      // longer do this large buffered chunk\n      if (\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) ||\n        isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)\n      ) {\n        // the entire chunk is the closing tags; return without enqueueing anything.\n        return\n      }\n\n      // We assume these tags will go at together at the end of the document and that\n      // they won't appear anywhere else in the document. This is not really a safe assumption\n      // but until we revamp our streaming infra this is a performant way to string the tags\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY)\n      chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML)\n\n      controller.enqueue(chunk)\n    },\n  })\n}\n\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */\nexport function createRootLayoutValidatorStream(): TransformStream<\n  Uint8Array,\n  Uint8Array\n> {\n  let foundHtml = false\n  let foundBody = false\n  return new TransformStream({\n    async transform(chunk, controller) {\n      // Peek into the streamed chunk to see if the tags are present.\n      if (\n        !foundHtml &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1\n      ) {\n        foundHtml = true\n      }\n\n      if (\n        !foundBody &&\n        indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1\n      ) {\n        foundBody = true\n      }\n\n      controller.enqueue(chunk)\n    },\n    flush(controller) {\n      const missingTags: ('html' | 'body')[] = []\n      if (!foundHtml) missingTags.push('html')\n      if (!foundBody) missingTags.push('body')\n\n      if (!missingTags.length) return\n\n      controller.enqueue(\n        encoder.encode(\n          `<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags\n                .map((c) => `<${c}>`)\n                .join(\n                  missingTags.length > 1 ? ' and ' : ''\n                )} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `\n        )\n      )\n    },\n  })\n}\n\nfunction chainTransformers<T>(\n  readable: ReadableStream<T>,\n  transformers: ReadonlyArray<TransformStream<T, T> | null>\n): ReadableStream<T> {\n  let stream = readable\n  for (const transformer of transformers) {\n    if (!transformer) continue\n\n    stream = stream.pipeThrough(transformer)\n  }\n  return stream\n}\n\nexport type ContinueStreamOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array> | undefined\n  isStaticGeneration: boolean\n  isBuildTimePrerendering: boolean\n  buildId: string\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  validateRootLayout?: boolean\n  /**\n   * Suffix to inject after the buffered data, but before the close tags.\n   */\n  suffix?: string | undefined\n}\n\nexport async function continueFizzStream(\n  renderStream: ReactDOMServerReadableStream,\n  {\n    suffix,\n    inlinedDataStream,\n    isStaticGeneration,\n    isBuildTimePrerendering,\n    buildId,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    validateRootLayout,\n  }: ContinueStreamOptions\n): Promise<ReadableStream<Uint8Array>> {\n  // Suffix itself might contain close tags at the end, so we need to split it.\n  const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null\n\n  // If we're generating static HTML we need to wait for it to resolve before continuing.\n  if (isStaticGeneration) {\n    await renderStream.allReady\n  }\n\n  return chainTransformers(renderStream, [\n    // Buffer everything to avoid flushing too frequently\n    createBufferedTransformStream(),\n\n    // Add build id comment to start of the HTML document (in export mode)\n    createPrefetchCommentStream(isBuildTimePrerendering, buildId),\n\n    // Transform metadata\n    createMetadataTransformStream(getServerInsertedMetadata),\n\n    // Insert suffix content\n    suffixUnclosed != null && suffixUnclosed.length > 0\n      ? createDeferredSuffixStream(suffixUnclosed)\n      : null,\n\n    // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    inlinedDataStream\n      ? createFlightDataInjectionTransformStream(inlinedDataStream, true)\n      : null,\n\n    // Validate the root layout for missing html or body tags\n    validateRootLayout ? createRootLayoutValidatorStream() : null,\n\n    // Close tags should always be deferred to the end\n    createMoveSuffixStream(),\n\n    // Special head insertions\n    // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n    // hydration errors. Remove this once it's ready to be handled by react itself.\n    createHeadInsertionTransformStream(getServerInsertedHTML),\n  ])\n}\n\ntype ContinueDynamicPrerenderOptions = {\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n}\n\nexport async function continueDynamicPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueDynamicPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      .pipeThrough(createStripDocumentClosingTagsTransform())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n  )\n}\n\ntype ContinueStaticPrerenderOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  isBuildTimePrerendering: boolean\n  buildId: string\n}\n\nexport async function continueStaticPrerender(\n  prerenderStream: ReadableStream<Uint8Array>,\n  {\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n    isBuildTimePrerendering,\n    buildId,\n  }: ContinueStaticPrerenderOptions\n) {\n  return (\n    prerenderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Add build id comment to start of the HTML document (in export mode)\n      .pipeThrough(\n        createPrefetchCommentStream(isBuildTimePrerendering, buildId)\n      )\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(\n        createFlightDataInjectionTransformStream(inlinedDataStream, true)\n      )\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\ntype ContinueResumeOptions = {\n  inlinedDataStream: ReadableStream<Uint8Array>\n  getServerInsertedHTML: () => Promise<string>\n  getServerInsertedMetadata: () => Promise<string>\n  delayDataUntilFirstHtmlChunk: boolean\n}\n\nexport async function continueDynamicHTMLResume(\n  renderStream: ReadableStream<Uint8Array>,\n  {\n    delayDataUntilFirstHtmlChunk,\n    inlinedDataStream,\n    getServerInsertedHTML,\n    getServerInsertedMetadata,\n  }: ContinueResumeOptions\n) {\n  return (\n    renderStream\n      // Buffer everything to avoid flushing too frequently\n      .pipeThrough(createBufferedTransformStream())\n      // Insert generated tags to head\n      .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))\n      // Transform metadata\n      .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))\n      // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n      .pipeThrough(\n        createFlightDataInjectionTransformStream(\n          inlinedDataStream,\n          delayDataUntilFirstHtmlChunk\n        )\n      )\n      // Close tags should always be deferred to the end\n      .pipeThrough(createMoveSuffixStream())\n  )\n}\n\nexport function createDocumentClosingStream(): ReadableStream<Uint8Array> {\n  return streamFromString(CLOSE_TAG)\n}\n","export const ENCODED_TAGS = {\n  // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n  OPENING: {\n    // <html\n    HTML: new Uint8Array([60, 104, 116, 109, 108]),\n    // <body\n    BODY: new Uint8Array([60, 98, 111, 100, 121]),\n  },\n  CLOSED: {\n    // </head>\n    HEAD: new Uint8Array([60, 47, 104, 101, 97, 100, 62]),\n    // </body>\n    BODY: new Uint8Array([60, 47, 98, 111, 100, 121, 62]),\n    // </html>\n    HTML: new Uint8Array([60, 47, 104, 116, 109, 108, 62]),\n    // </body></html>\n    BODY_AND_HTML: new Uint8Array([\n      60, 47, 98, 111, 100, 121, 62, 60, 47, 104, 116, 109, 108, 62,\n    ]),\n  },\n  META: {\n    // Only the match the prefix cause the suffix can be different wether it's xml compatible or not \">\" or \"/>\"\n    // <meta name=\"«nxt-icon»\"\n    // This is a special mark that will be replaced by the icon insertion script tag.\n    ICON_MARK: new Uint8Array([\n      60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 194, 171, 110, 120,\n      116, 45, 105, 99, 111, 110, 194, 187, 34,\n    ]),\n  },\n} as const\n","import type { OutgoingHttpHeaders } from 'http'\nimport {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../lib/constants'\n\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */\nexport function fromNodeOutgoingHttpHeaders(\n  nodeHeaders: OutgoingHttpHeaders\n): Headers {\n  const headers = new Headers()\n  for (let [key, value] of Object.entries(nodeHeaders)) {\n    const values = Array.isArray(value) ? value : [value]\n    for (let v of values) {\n      if (typeof v === 'undefined') continue\n      if (typeof v === 'number') {\n        v = v.toString()\n      }\n\n      headers.append(key, v)\n    }\n  }\n  return headers\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nexport function splitCookiesString(cookiesString: string) {\n  var cookiesStrings = []\n  var pos = 0\n  var start\n  var ch\n  var lastComma\n  var nextStart\n  var cookiesSeparatorFound\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1\n    }\n    return pos < cookiesString.length\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos)\n\n    return ch !== '=' && ch !== ';' && ch !== ','\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos\n    cookiesSeparatorFound = false\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos)\n      if (ch === ',') {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos\n        pos += 1\n\n        skipWhitespace()\n        nextStart = pos\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n          // we found cookies separator\n          cookiesSeparatorFound = true\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart\n          cookiesStrings.push(cookiesString.substring(start, lastComma))\n          start = pos\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1\n        }\n      } else {\n        pos += 1\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length))\n    }\n  }\n\n  return cookiesStrings\n}\n\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */\nexport function toNodeOutgoingHttpHeaders(\n  headers: Headers\n): OutgoingHttpHeaders {\n  const nodeHeaders: OutgoingHttpHeaders = {}\n  const cookies: string[] = []\n  if (headers) {\n    for (const [key, value] of headers.entries()) {\n      if (key.toLowerCase() === 'set-cookie') {\n        // We may have gotten a comma joined string of cookies, or multiple\n        // set-cookie headers. We need to merge them into one header array\n        // to represent all the cookies.\n        cookies.push(...splitCookiesString(value))\n        nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies\n      } else {\n        nodeHeaders[key] = value\n      }\n    }\n  }\n  return nodeHeaders\n}\n\n/**\n * Validate the correctness of a user-provided URL.\n */\nexport function validateURL(url: string | URL): string {\n  try {\n    return String(new URL(String(url)))\n  } catch (error: any) {\n    throw new Error(\n      `URL is malformed \"${String(\n        url\n      )}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`,\n      { cause: error }\n    )\n  }\n}\n\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */\nexport function normalizeNextQueryParam(key: string): null | string {\n  const prefixes = [NEXT_QUERY_PARAM_PREFIX, NEXT_INTERCEPTION_MARKER_PREFIX]\n  for (const prefix of prefixes) {\n    if (key !== prefix && key.startsWith(prefix)) {\n      return key.substring(prefix.length)\n    }\n  }\n  return null\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type { DomainLocale, I18NConfig } from '../config-shared'\nimport type { I18NProvider } from '../lib/i18n-provider'\n\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info'\n\ninterface Options {\n  base?: string | URL\n  headers?: OutgoingHttpHeaders\n  forceLocale?: boolean\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  i18nProvider?: I18NProvider\n}\n\nconst REGEX_LOCALHOST_HOSTNAME =\n  /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/\n\nfunction parseURL(url: string | URL, base?: string | URL) {\n  return new URL(\n    String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'),\n    base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost')\n  )\n}\n\nconst Internal = Symbol('NextURLInternal')\n\nexport class NextURL {\n  private [Internal]: {\n    basePath: string\n    buildId?: string\n    flightSearchParameters?: Record<string, string>\n    defaultLocale?: string\n    domainLocale?: DomainLocale\n    locale?: string\n    options: Options\n    trailingSlash?: boolean\n    url: URL\n  }\n\n  constructor(input: string | URL, base?: string | URL, opts?: Options)\n  constructor(input: string | URL, opts?: Options)\n  constructor(\n    input: string | URL,\n    baseOrOpts?: string | URL | Options,\n    opts?: Options\n  ) {\n    let base: undefined | string | URL\n    let options: Options\n\n    if (\n      (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts) ||\n      typeof baseOrOpts === 'string'\n    ) {\n      base = baseOrOpts\n      options = opts || {}\n    } else {\n      options = opts || baseOrOpts || {}\n    }\n\n    this[Internal] = {\n      url: parseURL(input, base ?? options.base),\n      options: options,\n      basePath: '',\n    }\n\n    this.analyze()\n  }\n\n  private analyze() {\n    const info = getNextPathnameInfo(this[Internal].url.pathname, {\n      nextConfig: this[Internal].options.nextConfig,\n      parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n      i18nProvider: this[Internal].options.i18nProvider,\n    })\n\n    const hostname = getHostname(\n      this[Internal].url,\n      this[Internal].options.headers\n    )\n    this[Internal].domainLocale = this[Internal].options.i18nProvider\n      ? this[Internal].options.i18nProvider.detectDomainLocale(hostname)\n      : detectDomainLocale(\n          this[Internal].options.nextConfig?.i18n?.domains,\n          hostname\n        )\n\n    const defaultLocale =\n      this[Internal].domainLocale?.defaultLocale ||\n      this[Internal].options.nextConfig?.i18n?.defaultLocale\n\n    this[Internal].url.pathname = info.pathname\n    this[Internal].defaultLocale = defaultLocale\n    this[Internal].basePath = info.basePath ?? ''\n    this[Internal].buildId = info.buildId\n    this[Internal].locale = info.locale ?? defaultLocale\n    this[Internal].trailingSlash = info.trailingSlash\n  }\n\n  private formatPathname() {\n    return formatNextPathnameInfo({\n      basePath: this[Internal].basePath,\n      buildId: this[Internal].buildId,\n      defaultLocale: !this[Internal].options.forceLocale\n        ? this[Internal].defaultLocale\n        : undefined,\n      locale: this[Internal].locale,\n      pathname: this[Internal].url.pathname,\n      trailingSlash: this[Internal].trailingSlash,\n    })\n  }\n\n  private formatSearch() {\n    return this[Internal].url.search\n  }\n\n  public get buildId() {\n    return this[Internal].buildId\n  }\n\n  public set buildId(buildId: string | undefined) {\n    this[Internal].buildId = buildId\n  }\n\n  public get locale() {\n    return this[Internal].locale ?? ''\n  }\n\n  public set locale(locale: string) {\n    if (\n      !this[Internal].locale ||\n      !this[Internal].options.nextConfig?.i18n?.locales.includes(locale)\n    ) {\n      throw new TypeError(\n        `The NextURL configuration includes no locale \"${locale}\"`\n      )\n    }\n\n    this[Internal].locale = locale\n  }\n\n  get defaultLocale() {\n    return this[Internal].defaultLocale\n  }\n\n  get domainLocale() {\n    return this[Internal].domainLocale\n  }\n\n  get searchParams() {\n    return this[Internal].url.searchParams\n  }\n\n  get host() {\n    return this[Internal].url.host\n  }\n\n  set host(value: string) {\n    this[Internal].url.host = value\n  }\n\n  get hostname() {\n    return this[Internal].url.hostname\n  }\n\n  set hostname(value: string) {\n    this[Internal].url.hostname = value\n  }\n\n  get port() {\n    return this[Internal].url.port\n  }\n\n  set port(value: string) {\n    this[Internal].url.port = value\n  }\n\n  get protocol() {\n    return this[Internal].url.protocol\n  }\n\n  set protocol(value: string) {\n    this[Internal].url.protocol = value\n  }\n\n  get href() {\n    const pathname = this.formatPathname()\n    const search = this.formatSearch()\n    return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`\n  }\n\n  set href(url: string) {\n    this[Internal].url = parseURL(url)\n    this.analyze()\n  }\n\n  get origin() {\n    return this[Internal].url.origin\n  }\n\n  get pathname() {\n    return this[Internal].url.pathname\n  }\n\n  set pathname(value: string) {\n    this[Internal].url.pathname = value\n  }\n\n  get hash() {\n    return this[Internal].url.hash\n  }\n\n  set hash(value: string) {\n    this[Internal].url.hash = value\n  }\n\n  get search() {\n    return this[Internal].url.search\n  }\n\n  set search(value: string) {\n    this[Internal].url.search = value\n  }\n\n  get password() {\n    return this[Internal].url.password\n  }\n\n  set password(value: string) {\n    this[Internal].url.password = value\n  }\n\n  get username() {\n    return this[Internal].url.username\n  }\n\n  set username(value: string) {\n    this[Internal].url.username = value\n  }\n\n  get basePath() {\n    return this[Internal].basePath\n  }\n\n  set basePath(value: string) {\n    this[Internal].basePath = value.startsWith('/') ? value : `/${value}`\n  }\n\n  toString() {\n    return this.href\n  }\n\n  toJSON() {\n    return this.href\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      href: this.href,\n      origin: this.origin,\n      protocol: this.protocol,\n      username: this.username,\n      password: this.password,\n      host: this.host,\n      hostname: this.hostname,\n      port: this.port,\n      pathname: this.pathname,\n      search: this.search,\n      searchParams: this.searchParams,\n      hash: this.hash,\n    }\n  }\n\n  clone() {\n    return new NextURL(String(this), this[Internal].options)\n  }\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","export class PageSignatureError extends Error {\n  constructor({ page }: { page: string }) {\n    super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `)\n  }\n}\n\nexport class RemovedPageError extends Error {\n  constructor() {\n    super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `)\n  }\n}\n\nexport class RemovedUAError extends Error {\n  constructor() {\n    super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `)\n  }\n}\n","import type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { RemovedUAError, RemovedPageError } from '../error'\nimport { RequestCookies } from './cookies'\n\nexport const INTERNALS = Symbol('internal request')\n\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */\nexport class NextRequest extends Request {\n  /** @internal */\n  [INTERNALS]: {\n    cookies: RequestCookies\n    url: string\n    nextUrl: NextURL\n  }\n\n  constructor(input: URL | RequestInfo, init: RequestInit = {}) {\n    const url =\n      typeof input !== 'string' && 'url' in input ? input.url : String(input)\n\n    validateURL(url)\n\n    // node Request instance requires duplex option when a body\n    // is present or it errors, we don't handle this for\n    // Request being passed in since it would have already\n    // errored if this wasn't configured\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      if (init.body && init.duplex !== 'half') {\n        init.duplex = 'half'\n      }\n    }\n\n    if (input instanceof Request) super(input, init)\n    else super(url, init)\n\n    const nextUrl = new NextURL(url, {\n      headers: toNodeOutgoingHttpHeaders(this.headers),\n      nextConfig: init.nextConfig,\n    })\n    this[INTERNALS] = {\n      cookies: new RequestCookies(this.headers),\n      nextUrl,\n      url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        ? url\n        : nextUrl.toString(),\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      nextUrl: this.nextUrl,\n      url: this.url,\n      // rest of props come from Request\n      bodyUsed: this.bodyUsed,\n      cache: this.cache,\n      credentials: this.credentials,\n      destination: this.destination,\n      headers: Object.fromEntries(this.headers),\n      integrity: this.integrity,\n      keepalive: this.keepalive,\n      method: this.method,\n      mode: this.mode,\n      redirect: this.redirect,\n      referrer: this.referrer,\n      referrerPolicy: this.referrerPolicy,\n      signal: this.signal,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  public get nextUrl() {\n    return this[INTERNALS].nextUrl\n  }\n\n  /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */\n  public get page() {\n    throw new RemovedPageError()\n  }\n\n  /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */\n  public get ua() {\n    throw new RemovedUAError()\n  }\n\n  public get url() {\n    return this[INTERNALS].url\n  }\n}\n\nexport interface RequestInit extends globalThis.RequestInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig | null\n    trailingSlash?: boolean\n  }\n  signal?: AbortSignal\n  // see https://github.com/whatwg/fetch/pull/1457\n  duplex?: 'half'\n}\n","import type { BaseNextRequest } from '../../../base-http'\nimport type { NodeNextRequest } from '../../../base-http/node'\nimport type { WebNextRequest } from '../../../base-http/web'\nimport type { Writable } from 'node:stream'\n\nimport { getRequestMeta } from '../../../request-meta'\nimport { fromNodeOutgoingHttpHeaders } from '../../utils'\nimport { NextRequest } from '../request'\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers'\n\nexport const ResponseAbortedName = 'ResponseAborted'\nexport class ResponseAborted extends Error {\n  public readonly name = ResponseAbortedName\n}\n\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */\nexport function createAbortController(response: Writable): AbortController {\n  const controller = new AbortController()\n\n  // If `finish` fires first, then `res.end()` has been called and the close is\n  // just us finishing the stream on our side. If `close` fires first, then we\n  // know the client disconnected before we finished.\n  response.once('close', () => {\n    if (response.writableFinished) return\n\n    controller.abort(new ResponseAborted())\n  })\n\n  return controller\n}\n\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */\nexport function signalFromNodeResponse(response: Writable): AbortSignal {\n  const { errored, destroyed } = response\n  if (errored || destroyed) {\n    return AbortSignal.abort(errored ?? new ResponseAborted())\n  }\n\n  const { signal } = createAbortController(response)\n  return signal\n}\n\nexport class NextRequestAdapter {\n  public static fromBaseNextRequest(\n    request: BaseNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME === 'edge' &&\n      isWebNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromWebNextRequest(request)\n    } else if (\n      // The type check here ensures that `req` is correctly typed, and the\n      // environment variable check provides dead code elimination.\n      process.env.NEXT_RUNTIME !== 'edge' &&\n      isNodeNextRequest(request)\n    ) {\n      return NextRequestAdapter.fromNodeNextRequest(request, signal)\n    } else {\n      throw new Error('Invariant: Unsupported NextRequest type')\n    }\n  }\n\n  public static fromNodeNextRequest(\n    request: NodeNextRequest,\n    signal: AbortSignal\n  ): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: BodyInit | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n      // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n      body = request.body\n    }\n\n    let url: URL\n    if (request.url.startsWith('http')) {\n      url = new URL(request.url)\n    } else {\n      // Grab the full URL from the request metadata.\n      const base = getRequestMeta(request, 'initURL')\n      if (!base || !base.startsWith('http')) {\n        // Because the URL construction relies on the fact that the URL provided\n        // is absolute, we need to provide a base URL. We can't use the request\n        // URL because it's relative, so we use a dummy URL instead.\n        url = new URL(request.url, 'http://n')\n      } else {\n        url = new URL(request.url, base)\n      }\n    }\n\n    return new NextRequest(url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n\n  public static fromWebNextRequest(request: WebNextRequest): NextRequest {\n    // HEAD and GET requests can not have a body.\n    let body: ReadableStream | null = null\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n      body = request.body\n    }\n\n    return new NextRequest(request.url, {\n      method: request.method,\n      headers: fromNodeOutgoingHttpHeaders(request.headers),\n      duplex: 'half',\n      signal: request.request.signal,\n      // geo\n      // ip\n      // nextConfig\n\n      // body can not be passed if request was aborted\n      // or we get a Request body was disturbed error\n      ...(request.request.signal.aborted\n        ? {}\n        : {\n            body,\n          }),\n    })\n  }\n}\n","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/\n\n// eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */\n\nenum BaseServerSpan {\n  handleRequest = 'BaseServer.handleRequest',\n  run = 'BaseServer.run',\n  pipe = 'BaseServer.pipe',\n  getStaticHTML = 'BaseServer.getStaticHTML',\n  render = 'BaseServer.render',\n  renderToResponseWithComponents = 'BaseServer.renderToResponseWithComponents',\n  renderToResponse = 'BaseServer.renderToResponse',\n  renderToHTML = 'BaseServer.renderToHTML',\n  renderError = 'BaseServer.renderError',\n  renderErrorToResponse = 'BaseServer.renderErrorToResponse',\n  renderErrorToHTML = 'BaseServer.renderErrorToHTML',\n  render404 = 'BaseServer.render404',\n}\n\nenum LoadComponentsSpan {\n  loadDefaultErrorComponents = 'LoadComponents.loadDefaultErrorComponents',\n  loadComponents = 'LoadComponents.loadComponents',\n}\n\nenum NextServerSpan {\n  getRequestHandler = 'NextServer.getRequestHandler',\n  getServer = 'NextServer.getServer',\n  getServerRequestHandler = 'NextServer.getServerRequestHandler',\n  createServer = 'createServer.createServer',\n}\n\nenum NextNodeServerSpan {\n  compression = 'NextNodeServer.compression',\n  getBuildId = 'NextNodeServer.getBuildId',\n  createComponentTree = 'NextNodeServer.createComponentTree',\n  clientComponentLoading = 'NextNodeServer.clientComponentLoading',\n  getLayoutOrPageModule = 'NextNodeServer.getLayoutOrPageModule',\n  generateStaticRoutes = 'NextNodeServer.generateStaticRoutes',\n  generateFsStaticRoutes = 'NextNodeServer.generateFsStaticRoutes',\n  generatePublicRoutes = 'NextNodeServer.generatePublicRoutes',\n  generateImageRoutes = 'NextNodeServer.generateImageRoutes.route',\n  sendRenderResult = 'NextNodeServer.sendRenderResult',\n  proxyRequest = 'NextNodeServer.proxyRequest',\n  runApi = 'NextNodeServer.runApi',\n  render = 'NextNodeServer.render',\n  renderHTML = 'NextNodeServer.renderHTML',\n  imageOptimizer = 'NextNodeServer.imageOptimizer',\n  getPagePath = 'NextNodeServer.getPagePath',\n  getRoutesManifest = 'NextNodeServer.getRoutesManifest',\n  findPageComponents = 'NextNodeServer.findPageComponents',\n  getFontManifest = 'NextNodeServer.getFontManifest',\n  getServerComponentManifest = 'NextNodeServer.getServerComponentManifest',\n  getRequestHandler = 'NextNodeServer.getRequestHandler',\n  renderToHTML = 'NextNodeServer.renderToHTML',\n  renderError = 'NextNodeServer.renderError',\n  renderErrorToHTML = 'NextNodeServer.renderErrorToHTML',\n  render404 = 'NextNodeServer.render404',\n  startResponse = 'NextNodeServer.startResponse',\n\n  // nested inner span, does not require parent scope name\n  route = 'route',\n  onProxyReq = 'onProxyReq',\n  apiResolver = 'apiResolver',\n  internalFetch = 'internalFetch',\n}\n\nenum StartServerSpan {\n  startServer = 'startServer.startServer',\n}\n\nenum RenderSpan {\n  getServerSideProps = 'Render.getServerSideProps',\n  getStaticProps = 'Render.getStaticProps',\n  renderToString = 'Render.renderToString',\n  renderDocument = 'Render.renderDocument',\n  createBodyResult = 'Render.createBodyResult',\n}\n\nenum AppRenderSpan {\n  renderToString = 'AppRender.renderToString',\n  renderToReadableStream = 'AppRender.renderToReadableStream',\n  getBodyResult = 'AppRender.getBodyResult',\n  fetch = 'AppRender.fetch',\n}\n\nenum RouterSpan {\n  executeRoute = 'Router.executeRoute',\n}\n\nenum NodeSpan {\n  runHandler = 'Node.runHandler',\n}\n\nenum AppRouteRouteHandlersSpan {\n  runHandler = 'AppRouteRouteHandlers.runHandler',\n}\n\nenum ResolveMetadataSpan {\n  generateMetadata = 'ResolveMetadata.generateMetadata',\n  generateViewport = 'ResolveMetadata.generateViewport',\n}\n\nenum MiddlewareSpan {\n  execute = 'Middleware.execute',\n}\n\ntype SpanTypes =\n  | `${BaseServerSpan}`\n  | `${LoadComponentsSpan}`\n  | `${NextServerSpan}`\n  | `${StartServerSpan}`\n  | `${NextNodeServerSpan}`\n  | `${RenderSpan}`\n  | `${RouterSpan}`\n  | `${AppRenderSpan}`\n  | `${NodeSpan}`\n  | `${AppRouteRouteHandlersSpan}`\n  | `${ResolveMetadataSpan}`\n  | `${MiddlewareSpan}`\n\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n  MiddlewareSpan.execute,\n  BaseServerSpan.handleRequest,\n  RenderSpan.getServerSideProps,\n  RenderSpan.getStaticProps,\n  AppRenderSpan.fetch,\n  AppRenderSpan.getBodyResult,\n  RenderSpan.renderDocument,\n  NodeSpan.runHandler,\n  AppRouteRouteHandlersSpan.runHandler,\n  ResolveMetadataSpan.generateMetadata,\n  ResolveMetadataSpan.generateViewport,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.getLayoutOrPageModule,\n  NextNodeServerSpan.startResponse,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n  NextNodeServerSpan.findPageComponents,\n  NextNodeServerSpan.createComponentTree,\n  NextNodeServerSpan.clientComponentLoading,\n]\n\nexport {\n  BaseServerSpan,\n  LoadComponentsSpan,\n  NextServerSpan,\n  NextNodeServerSpan,\n  StartServerSpan,\n  RenderSpan,\n  RouterSpan,\n  AppRenderSpan,\n  NodeSpan,\n  AppRouteRouteHandlersSpan,\n  ResolveMetadataSpan,\n  MiddlewareSpan,\n}\n\nexport type { SpanTypes }\n","import type { AppPageModule } from './route-modules/app-page/module'\n\n// Combined load times for loading client components\nlet clientComponentLoadStart = 0\nlet clientComponentLoadTimes = 0\nlet clientComponentLoadCount = 0\n\nexport function wrapClientComponentLoader(\n  ComponentMod: AppPageModule\n): AppPageModule['__next_app__'] {\n  if (!('performance' in globalThis)) {\n    return ComponentMod.__next_app__\n  }\n\n  return {\n    require: (...args) => {\n      const startTime = performance.now()\n\n      if (clientComponentLoadStart === 0) {\n        clientComponentLoadStart = startTime\n      }\n\n      try {\n        clientComponentLoadCount += 1\n        return ComponentMod.__next_app__.require(...args)\n      } finally {\n        clientComponentLoadTimes += performance.now() - startTime\n      }\n    },\n    loadChunk: (...args) => {\n      const startTime = performance.now()\n      const result = ComponentMod.__next_app__.loadChunk(...args)\n      // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n      // We only need to know when it's settled.\n      result.finally(() => {\n        clientComponentLoadTimes += performance.now() - startTime\n      })\n      return result\n    },\n  }\n}\n\nexport function getClientComponentLoaderMetrics(\n  options: { reset?: boolean } = {}\n) {\n  const metrics =\n    clientComponentLoadStart === 0\n      ? undefined\n      : {\n          clientComponentLoadStart,\n          clientComponentLoadTimes,\n          clientComponentLoadCount,\n        }\n\n  if (options.reset) {\n    clientComponentLoadStart = 0\n    clientComponentLoadTimes = 0\n    clientComponentLoadCount = 0\n  }\n\n  return metrics\n}\n","import type { ServerResponse } from 'node:http'\n\nimport {\n  ResponseAbortedName,\n  createAbortController,\n} from './web/spec-extension/adapters/next-request'\nimport { DetachedPromise } from '../lib/detached-promise'\nimport { getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger'\n\nexport function isAbortError(e: any): e is Error & { name: 'AbortError' } {\n  return e?.name === 'AbortError' || e?.name === ResponseAbortedName\n}\n\nfunction createWriterFromResponse(\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n): WritableStream<Uint8Array> {\n  let started = false\n\n  // Create a promise that will resolve once the response has drained. See\n  // https://nodejs.org/api/stream.html#stream_event_drain\n  let drained = new DetachedPromise<void>()\n  function onDrain() {\n    drained.resolve()\n  }\n  res.on('drain', onDrain)\n\n  // If the finish event fires, it means we shouldn't block and wait for the\n  // drain event.\n  res.once('close', () => {\n    res.off('drain', onDrain)\n    drained.resolve()\n  })\n\n  // Create a promise that will resolve once the response has finished. See\n  // https://nodejs.org/api/http.html#event-finish_1\n  const finished = new DetachedPromise<void>()\n  res.once('finish', () => {\n    finished.resolve()\n  })\n\n  // Create a writable stream that will write to the response.\n  return new WritableStream<Uint8Array>({\n    write: async (chunk) => {\n      // You'd think we'd want to use `start` instead of placing this in `write`\n      // but this ensures that we don't actually flush the headers until we've\n      // started writing chunks.\n      if (!started) {\n        started = true\n\n        if (\n          'performance' in globalThis &&\n          process.env.NEXT_OTEL_PERFORMANCE_PREFIX\n        ) {\n          const metrics = getClientComponentLoaderMetrics()\n          if (metrics) {\n            performance.measure(\n              `${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`,\n              {\n                start: metrics.clientComponentLoadStart,\n                end:\n                  metrics.clientComponentLoadStart +\n                  metrics.clientComponentLoadTimes,\n              }\n            )\n          }\n        }\n\n        res.flushHeaders()\n        getTracer().trace(\n          NextNodeServerSpan.startResponse,\n          {\n            spanName: 'start response',\n          },\n          () => undefined\n        )\n      }\n\n      try {\n        const ok = res.write(chunk)\n\n        // Added by the `compression` middleware, this is a function that will\n        // flush the partially-compressed response to the client.\n        if ('flush' in res && typeof res.flush === 'function') {\n          res.flush()\n        }\n\n        // If the write returns false, it means there's some backpressure, so\n        // wait until it's streamed before continuing.\n        if (!ok) {\n          await drained.promise\n\n          // Reset the drained promise so that we can wait for the next drain event.\n          drained = new DetachedPromise<void>()\n        }\n      } catch (err) {\n        res.end()\n        throw new Error('failed to write chunk to response', { cause: err })\n      }\n    },\n    abort: (err) => {\n      if (res.writableFinished) return\n\n      res.destroy(err)\n    },\n    close: async () => {\n      // if a waitUntil promise was passed, wait for it to resolve before\n      // ending the response.\n      if (waitUntilForEnd) {\n        await waitUntilForEnd\n      }\n\n      if (res.writableFinished) return\n\n      res.end()\n      return finished.promise\n    },\n  })\n}\n\nexport async function pipeToNodeResponse(\n  readable: ReadableStream<Uint8Array>,\n  res: ServerResponse,\n  waitUntilForEnd?: Promise<unknown>\n) {\n  try {\n    // If the response has already errored, then just return now.\n    const { errored, destroyed } = res\n    if (errored || destroyed) return\n\n    // Create a new AbortController so that we can abort the readable if the\n    // client disconnects.\n    const controller = createAbortController(res)\n\n    const writer = createWriterFromResponse(res, waitUntilForEnd)\n\n    await readable.pipeTo(writer, { signal: controller.signal })\n  } catch (err: any) {\n    // If this isn't related to an abort error, re-throw it.\n    if (isAbortError(err)) return\n\n    throw new Error('failed to pipe response', { cause: err })\n  }\n}\n","import type { OutgoingHttpHeaders, ServerResponse } from 'http'\nimport type { CacheControl } from './lib/cache-control'\nimport type { FetchMetrics } from './base-http'\n\nimport {\n  chainStreams,\n  streamFromBuffer,\n  streamFromString,\n  streamToString,\n} from './stream-utils/node-web-streams-helper'\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable'\nimport type { RenderResumeDataCache } from './resume-data-cache/resume-data-cache'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport type {\n  HTML_CONTENT_TYPE_HEADER,\n  JSON_CONTENT_TYPE_HEADER,\n  TEXT_PLAIN_CONTENT_TYPE_HEADER,\n} from '../lib/constants'\nimport type { RSC_CONTENT_TYPE_HEADER } from '../client/components/app-router-headers'\n\ntype ContentTypeOption =\n  | typeof RSC_CONTENT_TYPE_HEADER // For App Page RSC responses\n  | typeof HTML_CONTENT_TYPE_HEADER // For App Page, Pages HTML responses\n  | typeof JSON_CONTENT_TYPE_HEADER // For API routes, Next.js data requests\n  | typeof TEXT_PLAIN_CONTENT_TYPE_HEADER // For simplified errors\n\nexport type AppPageRenderResultMetadata = {\n  flightData?: Buffer\n  cacheControl?: CacheControl\n  staticBailoutInfo?: {\n    stack?: string\n    description?: string\n  }\n\n  /**\n   * The postponed state if the render had postponed and needs to be resumed.\n   */\n  postponed?: string\n\n  /**\n   * The headers to set on the response that were added by the render.\n   */\n  headers?: OutgoingHttpHeaders\n  statusCode?: number\n  fetchTags?: string\n  fetchMetrics?: FetchMetrics\n\n  segmentData?: Map<string, Buffer>\n\n  /**\n   * In development, the resume data cache is warmed up before the render. This\n   * is attached to the metadata so that it can be used during the render. When\n   * prerendering, the filled resume data cache is also attached to the metadata\n   * so that it can be used when prerendering matching fallback shells.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n}\n\nexport type PagesRenderResultMetadata = {\n  pageData?: any\n  cacheControl?: CacheControl\n  assetQueryString?: string\n  isNotFound?: boolean\n  isRedirect?: boolean\n}\n\nexport type StaticRenderResultMetadata = {}\n\nexport type RenderResultMetadata = AppPageRenderResultMetadata &\n  PagesRenderResultMetadata &\n  StaticRenderResultMetadata\n\nexport type RenderResultResponse =\n  | ReadableStream<Uint8Array>[]\n  | ReadableStream<Uint8Array>\n  | string\n  | Buffer\n  | null\n\nexport type RenderResultOptions<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> = {\n  contentType: ContentTypeOption | null\n  waitUntil?: Promise<unknown>\n  metadata: Metadata\n}\n\nexport default class RenderResult<\n  Metadata extends RenderResultMetadata = RenderResultMetadata,\n> {\n  /**\n   * The detected content type for the response. This is used to set the\n   * `Content-Type` header.\n   */\n  public readonly contentType: ContentTypeOption | null\n\n  /**\n   * The metadata for the response. This is used to set the revalidation times\n   * and other metadata.\n   */\n  public readonly metadata: Readonly<Metadata>\n\n  /**\n   * The response itself. This can be a string, a stream, or null. If it's a\n   * string, then it's a static response. If it's a stream, then it's a\n   * dynamic response. If it's null, then the response was not found or was\n   * already sent.\n   */\n  private response: RenderResultResponse\n\n  /**\n   * A render result that represents an empty response. This is used to\n   * represent a response that was not found or was already sent.\n   */\n  public static readonly EMPTY = new RenderResult<StaticRenderResultMetadata>(\n    null,\n    { metadata: {}, contentType: null }\n  )\n\n  /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @param contentType the content type of the response\n   * @returns a new RenderResult instance\n   */\n  public static fromStatic(\n    value: string | Buffer,\n    contentType: ContentTypeOption\n  ) {\n    return new RenderResult<StaticRenderResultMetadata>(value, {\n      metadata: {},\n      contentType,\n    })\n  }\n\n  private readonly waitUntil?: Promise<unknown>\n\n  constructor(\n    response: RenderResultResponse,\n    { contentType, waitUntil, metadata }: RenderResultOptions<Metadata>\n  ) {\n    this.response = response\n    this.contentType = contentType\n    this.metadata = metadata\n    this.waitUntil = waitUntil\n  }\n\n  public assignMetadata(metadata: Metadata) {\n    Object.assign(this.metadata, metadata)\n  }\n\n  /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */\n  public get isNull(): boolean {\n    return this.response === null\n  }\n\n  /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */\n  public get isDynamic(): boolean {\n    return typeof this.response !== 'string'\n  }\n\n  /**\n   * Returns the response if it is a string. If the page was dynamic, this will\n   * return a promise if the `stream` option is true, or it will throw an error.\n   *\n   * @param stream Whether or not to return a promise if the response is dynamic\n   * @returns The response as a string\n   */\n  public toUnchunkedString(stream?: false): string\n  public toUnchunkedString(stream: true): Promise<string>\n  public toUnchunkedString(stream = false): Promise<string> | string {\n    if (this.response === null) {\n      // If the response is null, return an empty string. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return ''\n    }\n\n    if (typeof this.response !== 'string') {\n      if (!stream) {\n        throw new InvariantError(\n          'dynamic responses cannot be unchunked. This is a bug in Next.js'\n        )\n      }\n\n      return streamToString(this.readable)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Returns a readable stream of the response.\n   */\n  private get readable(): ReadableStream<Uint8Array> {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return new ReadableStream<Uint8Array>({\n        start(controller) {\n          controller.close()\n        },\n      })\n    }\n\n    if (typeof this.response === 'string') {\n      return streamFromString(this.response)\n    }\n\n    if (Buffer.isBuffer(this.response)) {\n      return streamFromBuffer(this.response)\n    }\n\n    // If the response is an array of streams, then chain them together.\n    if (Array.isArray(this.response)) {\n      return chainStreams(...this.response)\n    }\n\n    return this.response\n  }\n\n  /**\n   * Coerces the response to an array of streams. This will convert the response\n   * to an array of streams if it is not already one.\n   *\n   * @returns An array of streams\n   */\n  private coerce(): ReadableStream<Uint8Array>[] {\n    if (this.response === null) {\n      // If the response is null, return an empty stream. This behavior is\n      // intentional as we're now providing the `RenderResult.EMPTY` value.\n      return []\n    }\n\n    if (typeof this.response === 'string') {\n      return [streamFromString(this.response)]\n    } else if (Array.isArray(this.response)) {\n      return this.response\n    } else if (Buffer.isBuffer(this.response)) {\n      return [streamFromBuffer(this.response)]\n    } else {\n      return [this.response]\n    }\n  }\n\n  /**\n   * Unshifts a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the start of the array. When this response is piped, all of the streams\n   * will be piped one after the other.\n   *\n   * @param readable The new stream to unshift\n   */\n  public unshift(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the start of the array.\n    this.response.unshift(readable)\n  }\n\n  /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */\n  public push(readable: ReadableStream<Uint8Array>): void {\n    // Coerce the response to an array of streams.\n    this.response = this.coerce()\n\n    // Add the new stream to the end of the array.\n    this.response.push(readable)\n  }\n\n  /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */\n  public async pipeTo(writable: WritableStream<Uint8Array>): Promise<void> {\n    try {\n      await this.readable.pipeTo(writable, {\n        // We want to close the writable stream ourselves so that we can wait\n        // for the waitUntil promise to resolve before closing it. If an error\n        // is encountered, we'll abort the writable stream if we swallowed the\n        // error.\n        preventClose: true,\n      })\n\n      // If there is a waitUntil promise, wait for it to resolve before\n      // closing the writable stream.\n      if (this.waitUntil) await this.waitUntil\n\n      // Close the writable stream.\n      await writable.close()\n    } catch (err) {\n      // If this is an abort error, we should abort the writable stream (as we\n      // took ownership of it when we started piping). We don't need to re-throw\n      // because we handled the error.\n      if (isAbortError(err)) {\n        // Abort the writable stream if an error is encountered.\n        await writable.abort(err)\n\n        return\n      }\n\n      // We're not aborting the writer here as when this method throws it's not\n      // clear as to how so the caller should assume it's their responsibility\n      // to clean up the writer.\n      throw err\n    }\n  }\n\n  /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */\n  public async pipeToNodeResponse(res: ServerResponse) {\n    await pipeToNodeResponse(this.readable, res, this.waitUntil)\n  }\n}\n","/**\n * For a given page path, this function ensures that there is no backslash\n * escaping slashes in the path. Example:\n *  - `foo\\/bar\\/baz` -> `foo/bar/baz`\n */\nexport function normalizePathSep(path: string): string {\n  return path.replace(/\\\\/g, '/')\n}\n","import { isDynamicRoute } from '../router/utils'\nimport { normalizePathSep } from './normalize-path-sep'\n\n/**\n * Performs the opposite transformation of `normalizePagePath`. Note that\n * this function is not idempotent either in cases where there are multiple\n * leading `/index` for the page. Examples:\n *  - `/index` -> `/`\n *  - `/index/foo` -> `/foo`\n *  - `/index/index` -> `/index`\n */\nexport function denormalizePagePath(page: string) {\n  let _page = normalizePathSep(page)\n  return _page.startsWith('/index/') && !isDynamicRoute(_page)\n    ? _page.slice(6)\n    : _page !== '/index'\n      ? _page\n      : '/'\n}\n","import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import type { DynamicParam } from '../../../../server/app-render/app-render'\nimport type { DynamicParamTypesShort } from '../../../../server/app-render/types'\nimport type { FallbackRouteParams } from '../../../../server/request/fallback-params'\n\n/**\n *\n * Shared logic on client and server for creating a dynamic param value.\n *\n * This code needs to be shared with the client so it can extract dynamic route\n * params from the URL without a server request.\n *\n * Because everything in this module is sent to the client, we should aim to\n * keep this code as simple as possible. The special case handling for catchall\n * and optional is, alas, unfortunate.\n */\nexport function getDynamicParam(\n  params: { [key: string]: any },\n  segmentKey: string,\n  dynamicParamType: DynamicParamTypesShort,\n  pagePath: string,\n  fallbackRouteParams: FallbackRouteParams | null\n): DynamicParam {\n  let value = params[segmentKey]\n\n  if (fallbackRouteParams && fallbackRouteParams.has(segmentKey)) {\n    value = fallbackRouteParams.get(segmentKey)\n  } else if (Array.isArray(value)) {\n    value = value.map((i) => encodeURIComponent(i))\n  } else if (typeof value === 'string') {\n    value = encodeURIComponent(value)\n  }\n\n  if (!value) {\n    const isCatchall = dynamicParamType === 'c'\n    const isOptionalCatchall = dynamicParamType === 'oc'\n\n    if (isCatchall || isOptionalCatchall) {\n      // handle the case where an optional catchall does not have a value,\n      // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n      if (isOptionalCatchall) {\n        return {\n          param: segmentKey,\n          value: null,\n          type: dynamicParamType,\n          treeSegment: [segmentKey, '', dynamicParamType],\n        }\n      }\n\n      // handle the case where a catchall or optional catchall does not have a value,\n      // e.g. `/foo/bar/hello` and `@slot/[...catchall]` or `@slot/[[...catchall]]` is matched\n      value = pagePath\n        .split('/')\n        // remove the first empty string\n        .slice(1)\n        // replace any dynamic params with the actual values\n        .flatMap((pathSegment) => {\n          const param = parseParameter(pathSegment)\n          // if the segment matches a param, return the param value\n          // otherwise, it's a static segment, so just return that\n          return params[param.key] ?? param.key\n        })\n\n      return {\n        param: segmentKey,\n        value,\n        type: dynamicParamType,\n        // This value always has to be a string.\n        treeSegment: [segmentKey, value.join('/'), dynamicParamType],\n      }\n    }\n  }\n\n  return {\n    param: segmentKey,\n    // The value that is passed to user code.\n    value: value,\n    // The value that is rendered in the router tree.\n    treeSegment: [\n      segmentKey,\n      Array.isArray(value) ? value.join('/') : value,\n      dynamicParamType,\n    ],\n    type: dynamicParamType,\n  }\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nexport const PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { PARAMETER_PATTERN, parseMatchedParameter } from './get-dynamic-param'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\nimport { safePathToRegexp, safeCompile } from './route-match-utils'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return safeCompile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  let search = parsed.search\n  if (search) {\n    search = unescapeSegments(search)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n    search,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const parsedDestination = parseDestination(args)\n\n  const {\n    hostname: destHostname,\n    query: destQuery,\n    search: destSearch,\n  } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  safePathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    safePathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = safeCompile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = safeCompile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    parsedDestination.search = destSearch\n      ? compileNonPath(destSearch, args.params)\n      : ''\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...args.query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","/**\n * Decodes a query path parameter.\n *\n * @param value - The value to decode.\n * @returns The decoded value.\n */\nexport function decodeQueryPathParameter(value: string) {\n  // When deployed to Vercel, the value may be encoded, so this attempts to\n  // decode it and returns the original value if it fails.\n  try {\n    return decodeURIComponent(value)\n  } catch {\n    return value\n  }\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import type { LoadComponentsReturnType } from '../load-components'\nimport type { ServerRuntime, SizeLimit } from '../../types'\nimport type {\n  ExperimentalConfig,\n  NextConfigComplete,\n} from '../../server/config-shared'\nimport type { ClientReferenceManifest } from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../../build/webpack/plugins/next-font-manifest-plugin'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { AppPageModule } from '../route-modules/app-page/module'\nimport type {\n  HeadData,\n  LoadingModuleData,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport type { __ApiPreviewProps } from '../api-utils'\n\nimport s from 'next/dist/compiled/superstruct'\nimport type { RequestLifecycleOpts } from '../base-server'\nimport type { InstrumentationOnRequestError } from '../instrumentation/types'\nimport type { NextRequestHint } from '../web/adapter'\nimport type { BaseNextRequest } from '../base-http'\nimport type { IncomingMessage } from 'http'\nimport type { RenderResumeDataCache } from '../resume-data-cache/resume-data-cache'\n\nexport type DynamicParamTypes =\n  | 'catchall'\n  | 'catchall-intercepted'\n  | 'optional-catchall'\n  | 'dynamic'\n  | 'dynamic-intercepted'\n\nconst dynamicParamTypesSchema = s.enums(['c', 'ci', 'oc', 'd', 'di'])\n\nexport type DynamicParamTypesShort = s.Infer<typeof dynamicParamTypesSchema>\n\nconst segmentSchema = s.union([\n  s.string(),\n\n  s.tuple([\n    // Param name\n    s.string(),\n    // Param cache key (almost the same as the value, but arrays are\n    // concatenated into strings)\n    // TODO: We should change this to just be the value. Currently we convert\n    // it back to a value when passing to useParams. It only needs to be\n    // a string when converted to a a cache key, but that doesn't mean we\n    // need to store it as that representation.\n    s.string(),\n    // Dynamic param type\n    dynamicParamTypesSchema,\n  ]),\n])\n\nexport type Segment = s.Infer<typeof segmentSchema>\n\n// unfortunately the tuple is not understood well by Describe so we have to\n// use any here. This does not have any impact on the runtime type since the validation\n// does work correctly.\nexport const flightRouterStateSchema: s.Describe<any> = s.tuple([\n  segmentSchema,\n  s.record(\n    s.string(),\n    s.lazy(() => flightRouterStateSchema)\n  ),\n  s.optional(s.nullable(s.string())),\n  s.optional(\n    s.nullable(\n      s.union([\n        s.literal('refetch'),\n        s.literal('refresh'),\n        s.literal('inside-shared-layout'),\n        s.literal('metadata-only'),\n      ])\n    )\n  ),\n  s.optional(s.boolean()),\n])\n\n/**\n * Router state\n */\nexport type FlightRouterState = [\n  segment: Segment,\n  parallelRoutes: { [parallelRouterKey: string]: FlightRouterState },\n  url?: string | null,\n  /**\n   * \"refresh\" and \"refetch\", despite being similarly named, have different\n   * semantics:\n   * - \"refetch\" is used during a request to inform the server where rendering\n   *   should start from.\n   *\n   * - \"refresh\" is used by the client to mark that a segment should re-fetch the\n   *   data from the server for the current segment. It uses the \"url\" property\n   *   above to determine where to fetch from.\n   *\n   * - \"inside-shared-layout\" is used during a prefetch request to inform the\n   *   server that even if the segment matches, it should be treated as if it's\n   *   within the \"new\" part of a navigation — inside the shared layout. If\n   *   the segment doesn't match, then it has no effect, since it would be\n   *   treated as new regardless. If it does match, though, the server does not\n   *   need to render it, because the client already has it.\n   *\n   * - \"metadata-only\" instructs the server to skip rendering the segments and\n   *   only send the head data.\n   *\n   *   A bit confusing, but that's because it has only one extremely narrow use\n   *   case — during a non-PPR prefetch, the server uses it to find the first\n   *   loading boundary beneath a shared layout.\n   *\n   *   TODO: We should rethink the protocol for dynamic requests. It might not\n   *   make sense for the client to send a FlightRouterState, since this type is\n   *   overloaded with concerns.\n   */\n  refresh?:\n    | 'refetch'\n    | 'refresh'\n    | 'inside-shared-layout'\n    | 'metadata-only'\n    | null,\n  isRootLayout?: boolean,\n  /**\n   * Only present when responding to a tree prefetch request. Indicates whether\n   * there is a loading boundary somewhere in the tree. The client cache uses\n   * this to determine if it can skip the data prefetch request.\n   */\n  hasLoadingBoundary?: HasLoadingBoundary,\n]\n\nexport const enum HasLoadingBoundary {\n  // There is a loading boundary in this particular segment\n  SegmentHasLoadingBoundary = 1,\n  // There is a loading boundary somewhere in the subtree (but not in\n  // this segment)\n  SubtreeHasLoadingBoundary = 2,\n  // There is no loading boundary in this segment or any of its descendants\n  SubtreeHasNoLoadingBoundary = 3,\n}\n\n/**\n * Individual Flight response path\n */\nexport type FlightSegmentPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n      segment: Segment,\n      parallelRouterKey: string,\n    ]\n\n/**\n * Represents a tree of segments and the Flight data (i.e. React nodes) that\n * correspond to each one. The tree is isomorphic to the FlightRouterState;\n * however in the future we want to be able to fetch arbitrary partial segments\n * without having to fetch all its children. So this response format will\n * likely change.\n */\nexport type CacheNodeSeedData = [\n  segment: Segment,\n  node: React.ReactNode | null,\n  parallelRoutes: {\n    [parallelRouterKey: string]: CacheNodeSeedData | null\n  },\n  loading: LoadingModuleData | Promise<LoadingModuleData>,\n  isPartial: boolean,\n]\n\nexport type FlightDataSegment = [\n  /* segment of the rendered slice: */ Segment,\n  /* treePatch */ FlightRouterState,\n  /* cacheNodeSeedData */ CacheNodeSeedData | null, // Can be null during prefetch if there's no loading component\n  /* head: viewport */ HeadData,\n  /* isHeadPartial */ boolean,\n]\n\nexport type FlightDataPath =\n  // Uses `any` as repeating pattern can't be typed.\n  | any[]\n  // Looks somewhat like this\n  | [\n      // Holds full path to the segment.\n      ...FlightSegmentPath[],\n      ...FlightDataSegment,\n    ]\n\n/**\n * The Flight response data\n */\nexport type FlightData = Array<FlightDataPath> | string\n\nexport type ActionResult = Promise<any>\n\nexport type ServerOnInstrumentationRequestError = (\n  error: unknown,\n  // The request could be middleware, node server or web server request,\n  // we normalized them into an aligned format to `onRequestError` API later.\n  request: NextRequestHint | BaseNextRequest | IncomingMessage,\n  errorContext: Parameters<InstrumentationOnRequestError>[2]\n) => void | Promise<void>\n\nexport interface RenderOptsPartial {\n  dir?: string\n  previewProps: __ApiPreviewProps | undefined\n  err?: Error | null\n  dev?: boolean\n  basePath: string\n  trailingSlash: boolean\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  supportsDynamicResponse: boolean\n  runtime?: ServerRuntime\n  serverComponents?: boolean\n  enableTainting?: boolean\n  assetPrefix?: string\n  crossOrigin?: '' | 'anonymous' | 'use-credentials' | undefined\n  nextFontManifest?: DeepReadonly<NextFontManifest>\n  botType?: 'dom' | 'html' | undefined\n  serveStreamingMetadata?: boolean\n  incrementalCache?: import('../lib/incremental-cache').IncrementalCache\n  cacheLifeProfiles?: {\n    [profile: string]: import('../use-cache/cache-life').CacheLife\n  }\n  isOnDemandRevalidate?: boolean\n  isPossibleServerAction?: boolean\n  setIsrStatus?: (key: string, value: boolean | null) => void\n  isRevalidate?: boolean\n  nextExport?: boolean\n  nextConfigOutput?: 'standalone' | 'export'\n  onInstrumentationRequestError?: ServerOnInstrumentationRequestError\n  isDraftMode?: boolean\n  deploymentId?: string\n  onUpdateCookies?: (cookies: string[]) => void\n  loadConfig?: (\n    phase: string,\n    dir: string,\n    customConfig?: object | null,\n    rawConfig?: boolean,\n    silent?: boolean\n  ) => Promise<NextConfigComplete>\n  serverActions?: {\n    bodySizeLimit?: SizeLimit\n    allowedOrigins?: string[]\n  }\n  params?: ParsedUrlQuery\n  isPrefetch?: boolean\n  htmlLimitedBots: string | undefined\n  experimental: {\n    /**\n     * When true, it indicates that the current page supports partial\n     * prerendering.\n     */\n    isRoutePPREnabled?: boolean\n    expireTime: number | undefined\n    staleTimes: ExperimentalConfig['staleTimes'] | undefined\n    clientTraceMetadata: string[] | undefined\n    cacheComponents: boolean\n    clientSegmentCache: boolean | 'client-only'\n    clientParamParsing: boolean\n    dynamicOnHover: boolean\n    inlineCss: boolean\n    authInterrupts: boolean\n  }\n  postponed?: string\n\n  /**\n   * Should wait for react stream allReady to resolve all suspense boundaries,\n   * in order to perform a full page render.\n   */\n  shouldWaitOnAllReady?: boolean\n\n  /**\n   * A prefilled resume data cache. This was either generated for this page\n   * during dev warmup, or when a page with defined params was previously\n   * prerendered, and now its matching optional fallback shell is prerendered.\n   */\n  renderResumeDataCache?: RenderResumeDataCache\n\n  /**\n   * When true, the page will be rendered using the static rendering to detect\n   * any dynamic API's that would have stopped the page from being fully\n   * statically generated.\n   */\n  isDebugDynamicAccesses?: boolean\n\n  /**\n   * This is true when:\n   * - source maps are generated\n   * - source maps are applied\n   * - minification is disabled\n   */\n  hasReadableErrorStacks?: boolean\n\n  /**\n   * The maximum length of the headers that are emitted by React and added to\n   * the response.\n   */\n  reactMaxHeadersLength: number | undefined\n\n  isStaticGeneration?: boolean\n\n  /**\n   * When true, the page is prerendered as a fallback shell, while allowing any\n   * dynamic accesses to result in an empty shell. This is the case when there\n   * are also routes prerendered with a more complete set of params.\n   * Prerendering those routes would catch any invalid dynamic accesses.\n   */\n  allowEmptyStaticShell?: boolean\n\n  /**\n   * next config experimental.devtoolSegmentExplorer\n   */\n  devtoolSegmentExplorer?: boolean\n}\n\nexport type RenderOpts = LoadComponentsReturnType<AppPageModule> &\n  RenderOptsPartial &\n  RequestLifecycleOpts\n\nexport type PreloadCallbacks = (() => void)[]\n\nexport type InitialRSCPayload = {\n  /** buildId */\n  b: string\n  /** assetPrefix */\n  p: string\n  /** initialCanonicalUrlParts */\n  c: string[]\n  /** couldBeIntercepted */\n  i: boolean\n  /** initialFlightData */\n  f: FlightDataPath[]\n  /** missingSlots */\n  m: Set<string> | undefined\n  /** GlobalError */\n  G: [React.ComponentType<any>, React.ReactNode | undefined]\n  /** postponed */\n  s: boolean\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for normal rendering\nexport type NavigationFlightResponse = {\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n  /** prerendered */\n  S: boolean\n}\n\n// Response from `createFromFetch` for server actions. Action's flight data can be null\nexport type ActionFlightResponse = {\n  /** actionResult */\n  a: ActionResult\n  /** buildId */\n  b: string\n  /** flightData */\n  f: FlightData\n}\n\nexport type RSCPayload =\n  | InitialRSCPayload\n  | NavigationFlightResponse\n  | ActionFlightResponse\n","export const RSC_HEADER = 'rsc' as const\nexport const ACTION_HEADER = 'next-action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'next-router-state-tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'next-router-prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change next-router-state-tree to be a segment path, we can use\n// that instead. Then next-router-prefetch and next-router-segment-prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'next-router-segment-prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'next-hmr-refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'next-url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\nexport const NEXT_ACTION_NOT_FOUND_HEADER = 'x-nextjs-action-not-found' as const\n","import { NEXT_URL } from '../client/components/app-router-headers'\nimport {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from '../shared/lib/router/utils/interception-routes'\nimport type { Rewrite } from './load-custom-routes'\nimport { safePathToRegexp } from '../shared/lib/router/utils/route-match-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\n\n// a function that converts normalised paths (e.g. /foo/[bar]/[baz]) to the format expected by pathToRegexp (e.g. /foo/:bar/:baz)\nfunction toPathToRegexpPath(path: string): string {\n  return path.replace(/\\[\\[?([^\\]]+)\\]\\]?/g, (_, capture) => {\n    // path-to-regexp only supports word characters, so we replace any non-word characters with underscores\n    const paramName = capture.replace(/\\W+/g, '_')\n\n    // handle catch-all segments (e.g. /foo/bar/[...baz] or /foo/bar/[[...baz]])\n    if (capture.startsWith('...')) {\n      return `:${capture.slice(3)}*`\n    }\n    return ':' + paramName\n  })\n}\n\nexport function generateInterceptionRoutesRewrites(\n  appPaths: string[],\n  basePath = ''\n): Rewrite[] {\n  const rewrites: Rewrite[] = []\n\n  for (const appPath of appPaths) {\n    if (isInterceptionRouteAppPath(appPath)) {\n      const { interceptingRoute, interceptedRoute } =\n        extractInterceptionRouteInformation(appPath)\n\n      const normalizedInterceptingRoute = `${\n        interceptingRoute !== '/' ? toPathToRegexpPath(interceptingRoute) : ''\n      }/(.*)?`\n\n      const normalizedInterceptedRoute = toPathToRegexpPath(interceptedRoute)\n      const normalizedAppPath = toPathToRegexpPath(appPath)\n\n      // pathToRegexp returns a regex that matches the path, but we need to\n      // convert it to a string that can be used in a header value\n      // to the format that Next/the proxy expects\n      let interceptingRouteRegex = safePathToRegexp(normalizedInterceptingRoute)\n        .toString()\n        .slice(2, -3)\n\n      rewrites.push({\n        source: `${basePath}${normalizedInterceptedRoute}`,\n        destination: `${basePath}${normalizedAppPath}`,\n        has: [\n          {\n            type: 'header',\n            key: NEXT_URL,\n            value: interceptingRouteRegex,\n          },\n        ],\n      })\n    }\n  }\n\n  return rewrites\n}\n\nexport function isInterceptionRouteRewrite(route: DeepReadonly<Rewrite>) {\n  // When we generate interception rewrites in the above implementation, we always do so with only a single `has` condition.\n  return route.has?.[0]?.key === NEXT_URL\n}\n","import type { Rewrite } from '../lib/load-custom-routes'\nimport type { RouteMatchFn } from '../shared/lib/router/utils/route-matcher'\nimport type { NextConfig } from './config'\nimport type { BaseNextRequest } from './base-http'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { UrlWithParsedQuery } from 'url'\n\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { getPathMatch } from '../shared/lib/router/utils/path-match'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport {\n  matchHas,\n  prepareDestination,\n} from '../shared/lib/router/utils/prepare-destination'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths'\nimport {\n  NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER,\n  NEXT_CACHE_REVALIDATED_TAGS_HEADER,\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../lib/constants'\nimport { normalizeNextQueryParam } from './web/utils'\nimport type { IncomingHttpHeaders, IncomingMessage } from 'http'\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { parseReqUrl } from '../lib/url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { parseAndValidateFlightRouterState } from './app-render/parse-and-validate-flight-router-state'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport { NEXT_ROUTER_STATE_TREE_HEADER } from '../client/components/app-router-headers'\nimport { getSelectedParams } from '../client/components/router-reducer/compute-changed-path'\n\nfunction filterInternalQuery(\n  query: Record<string, undefined | string | string[]>,\n  paramKeys: string[]\n) {\n  // this is used to pass query information in rewrites\n  // but should not be exposed in final query\n  delete query['nextInternalLocale']\n\n  for (const key in query) {\n    const isNextQueryPrefix =\n      key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX)\n\n    const isNextInterceptionMarkerPrefix =\n      key !== NEXT_INTERCEPTION_MARKER_PREFIX &&\n      key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX)\n\n    if (\n      isNextQueryPrefix ||\n      isNextInterceptionMarkerPrefix ||\n      paramKeys.includes(key)\n    ) {\n      delete query[key]\n    }\n  }\n}\n\nexport function normalizeCdnUrl(\n  req: BaseNextRequest | IncomingMessage,\n  paramKeys: string[]\n) {\n  // make sure to normalize req.url from CDNs to strip dynamic and rewrite\n  // params from the query which are added during routing\n  const _parsedUrl = parseReqUrl(req.url!)\n\n  // we can't normalize if we can't parse\n  if (!_parsedUrl) {\n    return req.url\n  }\n  delete (_parsedUrl as any).search\n  filterInternalQuery(_parsedUrl.query, paramKeys)\n\n  req.url = formatUrl(_parsedUrl)\n}\n\nexport function interpolateDynamicPath(\n  pathname: string,\n  params: ParsedUrlQuery,\n  defaultRouteRegex?: ReturnType<typeof getNamedRouteRegex> | undefined\n) {\n  if (!defaultRouteRegex) return pathname\n\n  for (const param of Object.keys(defaultRouteRegex.groups)) {\n    const { optional, repeat } = defaultRouteRegex.groups[param]\n    let builtParam = `[${repeat ? '...' : ''}${param}]`\n\n    if (optional) {\n      builtParam = `[${builtParam}]`\n    }\n\n    let paramValue: string\n    const value = params[param]\n\n    if (Array.isArray(value)) {\n      paramValue = value.map((v) => v && encodeURIComponent(v)).join('/')\n    } else if (value) {\n      paramValue = encodeURIComponent(value)\n    } else {\n      paramValue = ''\n    }\n\n    if (paramValue || optional) {\n      pathname = pathname.replaceAll(builtParam, paramValue)\n    }\n  }\n\n  return pathname\n}\n\nexport function normalizeDynamicRouteParams(\n  query: ParsedUrlQuery,\n  defaultRouteRegex: ReturnType<typeof getNamedRouteRegex>,\n  defaultRouteMatches: ParsedUrlQuery,\n  ignoreMissingOptional: boolean\n) {\n  let hasValidParams = true\n  let params: ParsedUrlQuery = {}\n\n  for (const key of Object.keys(defaultRouteRegex.groups)) {\n    let value: string | string[] | undefined = query[key]\n\n    if (typeof value === 'string') {\n      value = normalizeRscURL(value)\n    } else if (Array.isArray(value)) {\n      value = value.map(normalizeRscURL)\n    }\n\n    // if the value matches the default value we can't rely\n    // on the parsed params, this is used to signal if we need\n    // to parse x-now-route-matches or not\n    const defaultValue = defaultRouteMatches![key]\n    const isOptional = defaultRouteRegex!.groups[key].optional\n\n    const isDefaultValue = Array.isArray(defaultValue)\n      ? defaultValue.some((defaultVal) => {\n          return Array.isArray(value)\n            ? value.some((val) => val.includes(defaultVal))\n            : value?.includes(defaultVal)\n        })\n      : value?.includes(defaultValue as string)\n\n    if (\n      isDefaultValue ||\n      (typeof value === 'undefined' && !(isOptional && ignoreMissingOptional))\n    ) {\n      return { params: {}, hasValidParams: false }\n    }\n\n    // non-provided optional values should be undefined so normalize\n    // them to undefined\n    if (\n      isOptional &&\n      (!value ||\n        (Array.isArray(value) &&\n          value.length === 1 &&\n          // fallback optional catch-all SSG pages have\n          // [[...paramName]] for the root path on Vercel\n          (value[0] === 'index' || value[0] === `[[...${key}]]`)))\n    ) {\n      value = undefined\n      delete query[key]\n    }\n\n    // query values from the proxy aren't already split into arrays\n    // so make sure to normalize catch-all values\n    if (\n      value &&\n      typeof value === 'string' &&\n      defaultRouteRegex!.groups[key].repeat\n    ) {\n      value = value.split('/')\n    }\n\n    if (value) {\n      params[key] = value\n    }\n  }\n\n  return {\n    params,\n    hasValidParams,\n  }\n}\n\nexport function getServerUtils({\n  page,\n  i18n,\n  basePath,\n  rewrites,\n  pageIsDynamic,\n  trailingSlash,\n  caseSensitive,\n}: {\n  page: string\n  i18n?: NextConfig['i18n']\n  basePath: string\n  rewrites: DeepReadonly<{\n    fallback?: ReadonlyArray<Rewrite>\n    afterFiles?: ReadonlyArray<Rewrite>\n    beforeFiles?: ReadonlyArray<Rewrite>\n  }>\n  pageIsDynamic: boolean\n  trailingSlash?: boolean\n  caseSensitive: boolean\n}) {\n  let defaultRouteRegex: ReturnType<typeof getNamedRouteRegex> | undefined\n  let dynamicRouteMatcher: RouteMatchFn | undefined\n  let defaultRouteMatches: ParsedUrlQuery | undefined\n\n  if (pageIsDynamic) {\n    defaultRouteRegex = getNamedRouteRegex(page, {\n      prefixRouteKeys: false,\n    })\n    dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex)\n    defaultRouteMatches = dynamicRouteMatcher(page) as ParsedUrlQuery\n  }\n\n  function handleRewrites(\n    req: BaseNextRequest | IncomingMessage,\n    parsedUrl: UrlWithParsedQuery\n  ) {\n    const rewriteParams: Record<string, string> = {}\n    let fsPathname = parsedUrl.pathname\n\n    const matchesPage = () => {\n      const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '')\n      return (\n        fsPathnameNoSlash === removeTrailingSlash(page) ||\n        dynamicRouteMatcher?.(fsPathnameNoSlash)\n      )\n    }\n\n    const checkRewrite = (rewrite: DeepReadonly<Rewrite>): boolean => {\n      const matcher = getPathMatch(\n        rewrite.source + (trailingSlash ? '(/)?' : ''),\n        {\n          removeUnnamedParams: true,\n          strict: true,\n          sensitive: !!caseSensitive,\n        }\n      )\n\n      if (!parsedUrl.pathname) return false\n\n      let params = matcher(parsedUrl.pathname)\n\n      if ((rewrite.has || rewrite.missing) && params) {\n        const hasParams = matchHas(\n          req,\n          parsedUrl.query,\n          rewrite.has as Rewrite['has'],\n          rewrite.missing as Rewrite['missing']\n        )\n\n        if (hasParams) {\n          Object.assign(params, hasParams)\n        } else {\n          params = false\n        }\n      }\n\n      if (params) {\n        try {\n          // An interception rewrite might reference a dynamic param for a route the user\n          // is currently on, which wouldn't be extractable from the matched route params.\n          // This attempts to extract the dynamic params from the provided router state.\n          if (isInterceptionRouteRewrite(rewrite as Rewrite)) {\n            const stateHeader = req.headers[NEXT_ROUTER_STATE_TREE_HEADER]\n\n            if (stateHeader) {\n              params = {\n                ...getSelectedParams(\n                  parseAndValidateFlightRouterState(stateHeader)\n                ),\n                ...params,\n              }\n            }\n          }\n        } catch (err) {\n          // this is a no-op -- we couldn't extract dynamic params from the provided router state,\n          // so we'll just use the params from the route matcher\n        }\n\n        const { parsedDestination, destQuery } = prepareDestination({\n          appendParamsToQuery: true,\n          destination: rewrite.destination,\n          params: params,\n          query: parsedUrl.query,\n        })\n\n        // if the rewrite destination is external break rewrite chain\n        if (parsedDestination.protocol) {\n          return true\n        }\n\n        Object.assign(rewriteParams, destQuery, params)\n        Object.assign(parsedUrl.query, parsedDestination.query)\n        delete (parsedDestination as any).query\n\n        // for each property in parsedUrl.query, if the value is parametrized (eg :foo), look up the value\n        // in rewriteParams and replace the parametrized value with the actual value\n        // this is used when the rewrite destination does not contain the original source param\n        // and so the value is still parametrized and needs to be replaced with the actual rewrite param\n        Object.entries(parsedUrl.query).forEach(([key, value]) => {\n          if (value && typeof value === 'string' && value.startsWith(':')) {\n            const paramName = value.slice(1)\n            const actualValue = rewriteParams[paramName]\n            if (actualValue) {\n              parsedUrl.query[key] = actualValue\n            }\n          }\n        })\n\n        Object.assign(parsedUrl, parsedDestination)\n\n        fsPathname = parsedUrl.pathname\n        if (!fsPathname) return false\n\n        if (basePath) {\n          fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/'\n        }\n\n        if (i18n) {\n          const result = normalizeLocalePath(fsPathname, i18n.locales)\n          fsPathname = result.pathname\n          parsedUrl.query.nextInternalLocale =\n            result.detectedLocale || params.nextInternalLocale\n        }\n\n        if (fsPathname === page) {\n          return true\n        }\n\n        if (pageIsDynamic && dynamicRouteMatcher) {\n          const dynamicParams = dynamicRouteMatcher(fsPathname)\n          if (dynamicParams) {\n            parsedUrl.query = {\n              ...parsedUrl.query,\n              ...dynamicParams,\n            }\n            return true\n          }\n        }\n      }\n      return false\n    }\n\n    for (const rewrite of rewrites.beforeFiles || []) {\n      checkRewrite(rewrite)\n    }\n\n    if (fsPathname !== page) {\n      let finished = false\n\n      for (const rewrite of rewrites.afterFiles || []) {\n        finished = checkRewrite(rewrite)\n        if (finished) break\n      }\n\n      if (!finished && !matchesPage()) {\n        for (const rewrite of rewrites.fallback || []) {\n          finished = checkRewrite(rewrite)\n          if (finished) break\n        }\n      }\n    }\n    return rewriteParams\n  }\n\n  function getParamsFromRouteMatches(routeMatchesHeader: string) {\n    // If we don't have a default route regex, we can't get params from route\n    // matches\n    if (!defaultRouteRegex) return null\n\n    const { groups, routeKeys } = defaultRouteRegex\n\n    const matcher = getRouteMatcher({\n      re: {\n        // Simulate a RegExp match from the \\`req.url\\` input\n        exec: (str: string) => {\n          // Normalize all the prefixed query params.\n          const obj: Record<string, string> = Object.fromEntries(\n            new URLSearchParams(str)\n          )\n          for (const [key, value] of Object.entries(obj)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            obj[normalizedKey] = value\n            delete obj[key]\n          }\n\n          // Use all the named route keys.\n          const result = {} as RegExpExecArray\n          for (const keyName of Object.keys(routeKeys)) {\n            const paramName = routeKeys[keyName]\n\n            // If this param name is not a valid parameter name, then skip it.\n            if (!paramName) continue\n\n            const group = groups[paramName]\n            const value = obj[keyName]\n\n            // When we're missing a required param, we can't match the route.\n            if (!group.optional && !value) return null\n\n            result[group.pos] = value\n          }\n\n          return result\n        },\n      },\n      groups,\n    })\n\n    const routeMatches = matcher(routeMatchesHeader)\n    if (!routeMatches) return null\n\n    return routeMatches\n  }\n\n  function normalizeQueryParams(\n    query: Record<string, string | string[] | undefined>,\n    routeParamKeys: Set<string>\n  ) {\n    // this is used to pass query information in rewrites\n    // but should not be exposed in final query\n    delete query['nextInternalLocale']\n\n    for (const [key, value] of Object.entries(query)) {\n      const normalizedKey = normalizeNextQueryParam(key)\n      if (!normalizedKey) continue\n\n      // Remove the prefixed key from the query params because we want\n      // to consume it for the dynamic route matcher.\n      delete query[key]\n      routeParamKeys.add(normalizedKey)\n\n      if (typeof value === 'undefined') continue\n\n      query[normalizedKey] = Array.isArray(value)\n        ? value.map((v) => decodeQueryPathParameter(v))\n        : decodeQueryPathParameter(value)\n    }\n  }\n\n  return {\n    handleRewrites,\n    defaultRouteRegex,\n    dynamicRouteMatcher,\n    defaultRouteMatches,\n    normalizeQueryParams,\n    getParamsFromRouteMatches,\n    /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */\n    normalizeDynamicRouteParams: (\n      query: ParsedUrlQuery,\n      ignoreMissingOptional: boolean\n    ) => {\n      if (!defaultRouteRegex || !defaultRouteMatches) {\n        return { params: {}, hasValidParams: false }\n      }\n\n      return normalizeDynamicRouteParams(\n        query,\n        defaultRouteRegex,\n        defaultRouteMatches,\n        ignoreMissingOptional\n      )\n    },\n\n    normalizeCdnUrl: (\n      req: BaseNextRequest | IncomingMessage,\n      paramKeys: string[]\n    ) => normalizeCdnUrl(req, paramKeys),\n\n    interpolateDynamicPath: (\n      pathname: string,\n      params: Record<string, undefined | string | string[]>\n    ) => interpolateDynamicPath(pathname, params, defaultRouteRegex),\n\n    filterInternalQuery: (query: ParsedUrlQuery, paramKeys: string[]) =>\n      filterInternalQuery(query, paramKeys),\n  }\n}\n\nexport function getPreviouslyRevalidatedTags(\n  headers: IncomingHttpHeaders,\n  previewModeId: string | undefined\n): string[] {\n  return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' &&\n    headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId\n    ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',')\n    : []\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Next.js errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nfunction safeStringify(obj: any) {\n  const seen = new WeakSet()\n\n  return JSON.stringify(obj, (_key, value) => {\n    // If value is an object and already seen, replace with \"[Circular]\"\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]'\n      }\n      seen.add(value)\n    }\n    return value\n  })\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? safeStringify(err) : err + '')\n}\n","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import type { I18NProvider } from '../lib/i18n-provider'\nimport type { Normalizer } from './normalizer'\n\n/**\n * Normalizes the pathname by removing the locale prefix if any.\n */\nexport class LocaleRouteNormalizer implements Normalizer {\n  constructor(private readonly provider: I18NProvider) {}\n\n  /**\n   * Normalizes the pathname by removing the locale prefix if any.\n   *\n   * @param pathname The pathname to normalize.\n   * @returns The pathname without the locale prefix (if any).\n   */\n  public normalize(pathname: string): string {\n    const match = this.provider.analyze(pathname)\n    return match.pathname\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\n/**\n * @deprecated Use `sortSortableRoutes` or `sortPages` instead.\n */\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\n/**\n * @deprecated Use `sortSortableRouteObjects` or `sortPageObjects` instead.\n */\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","import type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { Params } from '../request/params'\n\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport {\n  getRouteMatcher,\n  type RouteMatchFn,\n} from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\ntype RouteMatchResult = {\n  params?: Params\n}\n\nexport class RouteMatcher<D extends RouteDefinition = RouteDefinition> {\n  private readonly dynamic?: RouteMatchFn\n\n  /**\n   * When set, this is an array of all the other matchers that are duplicates of\n   * this one. This is used by the managers to warn the users about possible\n   * duplicate matches on routes.\n   */\n  public duplicated?: Array<RouteMatcher>\n\n  constructor(public readonly definition: D) {\n    if (isDynamicRoute(definition.pathname)) {\n      this.dynamic = getRouteMatcher(getRouteRegex(definition.pathname))\n    }\n  }\n\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part.\n   */\n  public get identity(): string {\n    return this.definition.pathname\n  }\n\n  public get isDynamic() {\n    return this.dynamic !== undefined\n  }\n\n  public match(pathname: string): RouteMatch<D> | null {\n    const result = this.test(pathname)\n    if (!result) return null\n\n    return { definition: this.definition, params: result.params }\n  }\n\n  public test(pathname: string): RouteMatchResult | null {\n    if (this.dynamic) {\n      const params = this.dynamic(pathname)\n      if (!params) return null\n\n      return { params }\n    }\n\n    if (pathname === this.definition.pathname) {\n      return {}\n    }\n\n    return null\n  }\n}\n","import type { LocaleAnalysisResult } from '../lib/i18n-provider'\nimport type { LocaleRouteDefinition } from '../route-definitions/locale-route-definition'\nimport type { LocaleRouteMatch } from '../route-matches/locale-route-match'\nimport { RouteMatcher } from './route-matcher'\n\nexport type LocaleMatcherMatchOptions = {\n  /**\n   * If defined, this indicates to the matcher that the request should be\n   * treated as locale-aware. If this is undefined, it means that this\n   * application was not configured for additional locales.\n   */\n  i18n?: LocaleAnalysisResult\n}\n\nexport class LocaleRouteMatcher<\n  D extends LocaleRouteDefinition = LocaleRouteDefinition,\n> extends RouteMatcher<D> {\n  /**\n   * Identity returns the identity part of the matcher. This is used to compare\n   * a unique matcher to another. This is also used when sorting dynamic routes,\n   * so it must contain the pathname part as well.\n   */\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextLocale=${this.definition.i18n?.locale}`\n  }\n\n  /**\n   * Match will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public match(\n    pathname: string,\n    options?: LocaleMatcherMatchOptions\n  ): LocaleRouteMatch<D> | null {\n    // This is like the parent `match` method but instead this injects the\n    // additional `options` into the\n    const result = this.test(pathname, options)\n    if (!result) return null\n\n    return {\n      definition: this.definition,\n      params: result.params,\n      detectedLocale:\n        // If the options have a detected locale, then use that, otherwise use\n        // the route's locale.\n        options?.i18n?.detectedLocale ?? this.definition.i18n?.locale,\n    }\n  }\n\n  /**\n   * Test will attempt to match the given pathname against this route while\n   * also taking into account the locale information.\n   *\n   * @param pathname The pathname to match against.\n   * @param options The options to use when matching.\n   * @returns The match result, or `null` if there was no match.\n   */\n  public test(pathname: string, options?: LocaleMatcherMatchOptions) {\n    // If this route has locale information and we have detected a locale, then\n    // we need to compare the detected locale to the route's locale.\n    if (this.definition.i18n && options?.i18n) {\n      // If we have detected a locale and it does not match this route's locale,\n      // then this isn't a match!\n      if (\n        this.definition.i18n.locale &&\n        options.i18n.detectedLocale &&\n        this.definition.i18n.locale !== options.i18n.detectedLocale\n      ) {\n        return null\n      }\n\n      // Perform regular matching against the locale stripped pathname now, the\n      // locale information matches!\n      return super.test(options.i18n.pathname)\n    }\n\n    // If we don't have locale information, then we can just perform regular\n    // matching.\n    return super.test(pathname)\n  }\n}\n","import { isDynamicRoute } from '../../shared/lib/router/utils'\nimport type { RouteKind } from '../route-kind'\nimport type { RouteMatch } from '../route-matches/route-match'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\nimport type { RouteMatcherProvider } from '../route-matcher-providers/route-matcher-provider'\nimport type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type { MatchOptions, RouteMatcherManager } from './route-matcher-manager'\nimport { getSortedRoutes } from '../../shared/lib/router/utils'\nimport { LocaleRouteMatcher } from '../route-matchers/locale-route-matcher'\nimport { ensureLeadingSlash } from '../../shared/lib/page-path/ensure-leading-slash'\nimport { DetachedPromise } from '../../lib/detached-promise'\n\ninterface RouteMatchers {\n  static: ReadonlyArray<RouteMatcher>\n  dynamic: ReadonlyArray<RouteMatcher>\n  duplicates: Record<string, ReadonlyArray<RouteMatcher>>\n}\n\nexport class DefaultRouteMatcherManager implements RouteMatcherManager {\n  private readonly providers: Array<RouteMatcherProvider> = []\n  protected readonly matchers: RouteMatchers = {\n    static: [],\n    dynamic: [],\n    duplicates: {},\n  }\n  private lastCompilationID = this.compilationID\n\n  /**\n   * When this value changes, it indicates that a change has been introduced\n   * that requires recompilation.\n   */\n  private get compilationID() {\n    return this.providers.length\n  }\n\n  private waitTillReadyPromise?: Promise<void>\n  public async waitTillReady(): Promise<void> {\n    if (this.waitTillReadyPromise) {\n      await this.waitTillReadyPromise\n      delete this.waitTillReadyPromise\n    }\n  }\n\n  private previousMatchers: ReadonlyArray<RouteMatcher> = []\n  public async reload() {\n    const { promise, resolve, reject } = new DetachedPromise<void>()\n    this.waitTillReadyPromise = promise\n\n    // Grab the compilation ID for this run, we'll verify it at the end to\n    // ensure that if any routes were added before reloading is finished that\n    // we error out.\n    const compilationID = this.compilationID\n\n    try {\n      // Collect all the matchers from each provider.\n      const matchers: Array<RouteMatcher> = []\n\n      // Get all the providers matchers.\n      const providersMatchers: ReadonlyArray<ReadonlyArray<RouteMatcher>> =\n        await Promise.all(this.providers.map((provider) => provider.matchers()))\n\n      // Use this to detect duplicate pathnames.\n      const all = new Map<string, RouteMatcher>()\n      const duplicates: Record<string, RouteMatcher[]> = {}\n      for (const providerMatchers of providersMatchers) {\n        for (const matcher of providerMatchers) {\n          // Reset duplicated matches when reloading from pages conflicting state.\n          if (matcher.duplicated) delete matcher.duplicated\n          // Test to see if the matcher being added is a duplicate.\n          const duplicate = all.get(matcher.definition.pathname)\n          if (duplicate) {\n            // This looks a little weird, but essentially if the pathname\n            // already exists in the duplicates map, then we got that array\n            // reference. Otherwise, we create a new array with the original\n            // duplicate first. Then we push the new matcher into the duplicate\n            // array, and reset it to the duplicates object (which may be a\n            // no-op if the pathname already existed in the duplicates object).\n            // Then we set the array of duplicates on both the original\n            // duplicate object and the new one, so we can keep them in sync.\n            // If a new duplicate is found, and it matches an existing pathname,\n            // the retrieval of the `other` will actually return the array\n            // reference used by all other duplicates. This is why ReadonlyArray\n            // is so important! Array's are always references!\n            const others = duplicates[matcher.definition.pathname] ?? [\n              duplicate,\n            ]\n            others.push(matcher)\n            duplicates[matcher.definition.pathname] = others\n\n            // Add duplicated details to each route.\n            duplicate.duplicated = others\n            matcher.duplicated = others\n\n            // TODO: see if we should error for duplicates in production?\n          }\n\n          matchers.push(matcher)\n\n          // Add the matcher's pathname to the set.\n          all.set(matcher.definition.pathname, matcher)\n        }\n      }\n\n      // Update the duplicate matchers. This is used in the development manager\n      // to warn about duplicates.\n      this.matchers.duplicates = duplicates\n\n      // If the cache is the same as what we just parsed, we can exit now. We\n      // can tell by using the `===` which compares object identity, which for\n      // the manifest matchers, will return the same matcher each time.\n      if (\n        this.previousMatchers.length === matchers.length &&\n        this.previousMatchers.every(\n          (cachedMatcher, index) => cachedMatcher === matchers[index]\n        )\n      ) {\n        return\n      }\n      this.previousMatchers = matchers\n\n      // For matchers that are for static routes, filter them now.\n      this.matchers.static = matchers.filter((matcher) => !matcher.isDynamic)\n\n      // For matchers that are for dynamic routes, filter them and sort them now.\n      const dynamic = matchers.filter((matcher) => matcher.isDynamic)\n\n      // As `getSortedRoutes` only takes an array of strings, we need to create\n      // a map of the pathnames (used for sorting) and the matchers. When we\n      // have locales, there may be multiple matches for the same pathname. To\n      // handle this, we keep a map of all the indexes (in `reference`) and\n      // merge them in later.\n\n      const reference = new Map<string, number[]>()\n      const pathnames = new Array<string>()\n      for (let index = 0; index < dynamic.length; index++) {\n        // Grab the pathname from the definition.\n        const pathname = dynamic[index].definition.pathname\n\n        // Grab the index in the dynamic array, push it into the reference.\n        const indexes = reference.get(pathname) ?? []\n        indexes.push(index)\n\n        // If this is the first one set it. If it isn't, we don't need to\n        // because pushing above on the array will mutate the array already\n        // stored there because array's are always a reference!\n        if (indexes.length === 1) reference.set(pathname, indexes)\n        // Otherwise, continue, we've already added this pathname before.\n        else continue\n\n        pathnames.push(pathname)\n      }\n\n      // Sort the array of pathnames.\n      const sorted = getSortedRoutes(pathnames)\n\n      // For each of the sorted pathnames, iterate over them, grabbing the list\n      // of indexes and merging them back into the new `sortedDynamicMatchers`\n      // array. The order of the same matching pathname doesn't matter because\n      // they will have other matching characteristics (like the locale) that\n      // is considered.\n      const sortedDynamicMatchers: Array<RouteMatcher> = []\n      for (const pathname of sorted) {\n        const indexes = reference.get(pathname)\n        if (!Array.isArray(indexes)) {\n          throw new Error('Invariant: expected to find identity in indexes map')\n        }\n\n        const dynamicMatches = indexes.map((index) => dynamic[index])\n\n        sortedDynamicMatchers.push(...dynamicMatches)\n      }\n\n      this.matchers.dynamic = sortedDynamicMatchers\n\n      // This means that there was a new matcher pushed while we were waiting\n      if (this.compilationID !== compilationID) {\n        throw new Error(\n          'Invariant: expected compilation to finish before new matchers were added, possible missing await'\n        )\n      }\n    } catch (err) {\n      reject(err)\n    } finally {\n      // The compilation ID matched, so mark the complication as finished.\n      this.lastCompilationID = compilationID\n      resolve()\n    }\n  }\n\n  public push(provider: RouteMatcherProvider): void {\n    this.providers.push(provider)\n  }\n\n  public async test(pathname: string, options: MatchOptions): Promise<boolean> {\n    // See if there's a match for the pathname...\n    const match = await this.match(pathname, options)\n\n    // This default implementation only needs to check to see if there _was_ a\n    // match. The development matcher actually changes it's behavior by not\n    // recompiling the routes.\n    return match !== null\n  }\n\n  public async match(\n    pathname: string,\n    options: MatchOptions\n  ): Promise<RouteMatch<RouteDefinition<RouteKind>> | null> {\n    // \"Iterate\" over the match options. Once we found a single match, exit with\n    // it, otherwise return null below. If no match is found, the inner block\n    // won't be called.\n    for await (const match of this.matchAll(pathname, options)) {\n      return match\n    }\n\n    return null\n  }\n\n  /**\n   * This is a point for other managers to override to inject other checking\n   * behavior like duplicate route checking on a per-request basis.\n   *\n   * @param pathname the pathname to validate against\n   * @param matcher the matcher to validate/test with\n   * @returns the match if found\n   */\n  protected validate(\n    pathname: string,\n    matcher: RouteMatcher,\n    options: MatchOptions\n  ): RouteMatch | null {\n    if (matcher instanceof LocaleRouteMatcher) {\n      return matcher.match(pathname, options)\n    }\n\n    // If the locale was inferred from the default locale, then it will have\n    // already added a locale to the pathname. We need to remove it before\n    // matching because this matcher is not locale aware.\n    if (options.i18n?.inferredFromDefault) {\n      return matcher.match(options.i18n.pathname)\n    }\n\n    return matcher.match(pathname)\n  }\n\n  public async *matchAll(\n    pathname: string,\n    options: MatchOptions\n  ): AsyncGenerator<RouteMatch<RouteDefinition<RouteKind>>, null, undefined> {\n    // Guard against the matcher manager from being run before it needs to be\n    // recompiled. This was preferred to re-running the compilation here because\n    // it should be re-ran only when it changes. If a match is attempted before\n    // this is done, it indicates that there is a case where a provider is added\n    // before it was recompiled (an error). We also don't want to affect request\n    // times.\n    if (this.lastCompilationID !== this.compilationID) {\n      throw new Error(\n        'Invariant: expected routes to have been loaded before match'\n      )\n    }\n\n    // Ensure that path matching is done with a leading slash.\n    pathname = ensureLeadingSlash(pathname)\n\n    // If this pathname doesn't look like a dynamic route, and this pathname is\n    // listed in the normalized list of routes, then return it. This ensures\n    // that when a route like `/user/[id]` is encountered, it doesn't just match\n    // with the list of normalized routes.\n    if (!isDynamicRoute(pathname)) {\n      for (const matcher of this.matchers.static) {\n        const match = this.validate(pathname, matcher, options)\n        if (!match) continue\n\n        yield match\n      }\n    }\n\n    // If we should skip handling dynamic routes, exit now.\n    if (options?.skipDynamic) return null\n\n    // Loop over the dynamic matchers, yielding each match.\n    for (const matcher of this.matchers.dynamic) {\n      const match = this.validate(pathname, matcher, options)\n      if (!match) continue\n\n      yield match\n    }\n\n    // We tried direct matching against the pathname and against all the dynamic\n    // paths, so there was no match.\n    return null\n  }\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * Normalizers combines many normalizers into a single normalizer interface that\n * will normalize the inputted pathname with each normalizer in order.\n */\nexport class Normalizers implements Normalizer {\n  constructor(private readonly normalizers: Array<Normalizer> = []) {}\n\n  public push(normalizer: Normalizer) {\n    this.normalizers.push(normalizer)\n  }\n\n  public normalize(pathname: string): string {\n    return this.normalizers.reduce<string>(\n      (normalized, normalizer) => normalizer.normalize(normalized),\n      pathname\n    )\n  }\n}\n","import path from '../../shared/lib/isomorphic/path'\nimport type { Normalizer } from './normalizer'\n\nexport class PrefixingNormalizer implements Normalizer {\n  private readonly prefix: string\n\n  constructor(...prefixes: ReadonlyArray<string>) {\n    this.prefix = path.posix.join(...prefixes)\n  }\n\n  public normalize(pathname: string): string {\n    return path.posix.join(this.prefix, pathname)\n  }\n}\n","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path') as typeof import('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import type { Normalizer } from './normalizer'\n\n/**\n * UnderscoreNormalizer replaces all instances of %5F with _.\n */\nexport class UnderscoreNormalizer implements Normalizer {\n  public normalize(pathname: string): string {\n    return pathname.replace(/%5F/g, '_')\n  }\n}\n","import { Normalizers } from '../../normalizers'\nimport type { Normalizer } from '../../normalizer'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\nimport { UnderscoreNormalizer } from '../../underscore-normalizer'\n\nexport class AppBundlePathNormalizer extends PrefixingNormalizer {\n  constructor() {\n    super('app')\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(normalizePagePath(page))\n  }\n}\n\nexport class DevAppBundlePathNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer, isTurbopack: boolean) {\n    const normalizers = [\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppBundlePathNormalizer(),\n    ]\n\n    // %5F to _ replacement should only happen with Turbopack.\n    if (isTurbopack) {\n      normalizers.unshift(new UnderscoreNormalizer())\n    }\n    super(normalizers)\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class AppFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n","import type { PageExtensions } from '../../build/page-extensions-type'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { isAppRouteRoute } from '../is-app-route-route'\n\nexport const STATIC_METADATA_IMAGES = {\n  icon: {\n    filename: 'icon',\n    extensions: ['ico', 'jpg', 'jpeg', 'png', 'svg'],\n  },\n  apple: {\n    filename: 'apple-icon',\n    extensions: ['jpg', 'jpeg', 'png'],\n  },\n  favicon: {\n    filename: 'favicon',\n    extensions: ['ico'],\n  },\n  openGraph: {\n    filename: 'opengraph-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n  twitter: {\n    filename: 'twitter-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n} as const\n\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = ['js', 'jsx', 'ts', 'tsx']\n\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (\n  staticExtensions: readonly string[],\n  dynamicExtensions: readonly string[] | null\n) => {\n  // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n  if (!dynamicExtensions || dynamicExtensions.length === 0) {\n    return `(\\\\.(?:${staticExtensions.join('|')}))`\n  }\n  return `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`\n}\n\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns if the file is a metadata route file\n */\nexport function isMetadataRouteFile(\n  appDirRelativePath: string,\n  pageExtensions: PageExtensions,\n  strictlyMatchExtensions: boolean\n) {\n  // End with the extension or optional to have the extension\n  // When strictlyMatchExtensions is true, it's used for match file path;\n  // When strictlyMatchExtensions, the dynamic extension is skipped but\n  // static extension is kept, which is usually used for matching route path.\n  const trailingMatcher = (strictlyMatchExtensions ? '' : '?') + '$'\n  // Match the optional variants like /opengraph-image2, /icon-a102f4.png, etc.\n  const variantsMatcher = '\\\\d?'\n  // The -\\w{6} is the suffix that normalized from group routes;\n  const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?'\n\n  const suffixMatcher = `${variantsMatcher}${groupSuffix}`\n\n  const metadataRouteFilesRegex = [\n    new RegExp(\n      `^[\\\\\\\\/]robots${getExtensionRegexString(\n        pageExtensions.concat('txt'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `^[\\\\\\\\/]manifest${getExtensionRegexString(\n        pageExtensions.concat('webmanifest', 'json'),\n        null\n      )}${trailingMatcher}`\n    ),\n    new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n    new RegExp(\n      `[\\\\\\\\/]sitemap${getExtensionRegexString(['xml'], pageExtensions)}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.icon.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.apple.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.openGraph.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}${suffixMatcher}${getExtensionRegexString(\n        STATIC_METADATA_IMAGES.twitter.extensions,\n        pageExtensions\n      )}${trailingMatcher}`\n    ),\n  ]\n\n  const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath)\n  const matched = metadataRouteFilesRegex.some((r) =>\n    r.test(normalizedAppDirRelativePath)\n  )\n\n  return matched\n}\n\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route: string) {\n  // extract ext with regex\n  const pathname = route.replace(/\\/route$/, '')\n\n  const matched =\n    isAppRouteRoute(route) &&\n    isMetadataRouteFile(pathname, [], true) &&\n    // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' &&\n    pathname !== '/manifest.webmanifest' &&\n    !pathname.endsWith('/sitemap.xml')\n\n  return matched\n}\n\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */\nexport function isMetadataPage(page: string) {\n  const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */\nexport function isMetadataRoute(route: string): boolean {\n  let page = normalizeAppPath(route)\n    .replace(/^\\/?app\\//, '')\n    // Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')\n    // Remove the /route suffix\n    .replace(/\\/route$/, '')\n\n  if (page[0] !== '/') page = '/' + page\n\n  const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false)\n\n  return matched\n}\n","import type { Normalizer } from './normalizer'\n\nexport function wrapNormalizerFn(fn: (pathname: string) => string): Normalizer {\n  return { normalize: fn }\n}\n","import { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths'\nimport { Normalizers } from '../../normalizers'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\nimport { UnderscoreNormalizer } from '../../underscore-normalizer'\nimport type { Normalizer } from '../../normalizer'\n\nexport class AppPathnameNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The pathname to match should have the trailing `/page` and other route\n      // group information stripped from it.\n      wrapNormalizerFn(normalizeAppPath),\n      // The page should have the `%5F` characters replaced with `_` characters.\n      new UnderscoreNormalizer(),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevAppPathnameNormalizer extends Normalizers {\n  constructor(pageNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pageNormalizer,\n      // Normalize the app page to a pathname.\n      new AppPathnameNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import {\n  AppBundlePathNormalizer,\n  DevAppBundlePathNormalizer,\n} from './app-bundle-path-normalizer'\nimport { AppFilenameNormalizer } from './app-filename-normalizer'\nimport { DevAppPageNormalizer } from './app-page-normalizer'\nimport {\n  AppPathnameNormalizer,\n  DevAppPathnameNormalizer,\n} from './app-pathname-normalizer'\n\nexport class AppNormalizers {\n  public readonly filename: AppFilenameNormalizer\n  public readonly pathname: AppPathnameNormalizer\n  public readonly bundlePath: AppBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new AppFilenameNormalizer(distDir)\n    this.pathname = new AppPathnameNormalizer()\n    this.bundlePath = new AppBundlePathNormalizer()\n  }\n}\n\nexport class DevAppNormalizers {\n  public readonly page: DevAppPageNormalizer\n  public readonly pathname: DevAppPathnameNormalizer\n  public readonly bundlePath: DevAppBundlePathNormalizer\n\n  constructor(\n    appDir: string,\n    extensions: ReadonlyArray<string>,\n    isTurbopack: boolean\n  ) {\n    this.page = new DevAppPageNormalizer(appDir, extensions, isTurbopack)\n    this.pathname = new DevAppPathnameNormalizer(this.page)\n    this.bundlePath = new DevAppBundlePathNormalizer(this.page, isTurbopack)\n  }\n}\n","export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppPageRouteDefinition } from '../route-definitions/app-page-route-definition'\n\nexport class AppPageRouteMatcher extends RouteMatcher<AppPageRouteDefinition> {\n  public get identity(): string {\n    return `${this.definition.pathname}?__nextPage=${this.definition.page}`\n  }\n}\n","import type { RouteMatcherProvider } from '../route-matcher-provider'\nimport type { RouteMatcher } from '../../route-matchers/route-matcher'\n\ninterface LoaderComparable<D> {\n  load(): Promise<D>\n  compare(left: D, right: D): boolean\n}\n\n/**\n * This will memoize the matchers if the loaded data is comparable.\n */\nexport abstract class CachedRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n  D = any,\n> implements RouteMatcherProvider<M>\n{\n  private data?: D\n  private cached: ReadonlyArray<M> = []\n\n  constructor(private readonly loader: LoaderComparable<D>) {}\n\n  protected abstract transform(data: D): Promise<ReadonlyArray<M>>\n\n  public async matchers(): Promise<readonly M[]> {\n    const data = await this.loader.load()\n    if (!data) return []\n\n    // Return the cached matchers if the data has not changed.\n    if (this.data && this.loader.compare(this.data, data)) return this.cached\n    this.data = data\n\n    // Transform the manifest into matchers.\n    const matchers = await this.transform(data)\n\n    // Cache the matchers.\n    this.cached = matchers\n\n    return matchers\n  }\n}\n","import type { RouteMatcher } from '../route-matchers/route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { CachedRouteMatcherProvider } from './helpers/cached-route-matcher-provider'\n\nexport abstract class ManifestRouteMatcherProvider<\n  M extends RouteMatcher = RouteMatcher,\n> extends CachedRouteMatcherProvider<M, Manifest | null> {\n  constructor(manifestName: string, manifestLoader: ManifestLoader) {\n    super({\n      load: async () => manifestLoader.load(manifestName),\n      compare: (left, right) => left === right,\n    })\n  }\n}\n","import { isAppPageRoute } from '../../lib/is-app-page-route'\n\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { AppNormalizers } from '../normalizers/built/app'\nimport { RouteKind } from '../route-kind'\nimport { AppPageRouteMatcher } from '../route-matchers/app-page-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\n\nexport class AppPageRouteMatcherProvider extends ManifestRouteMatcherProvider<AppPageRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppPageRouteMatcher>> {\n    // This matcher only matches app pages.\n    const pages = Object.keys(manifest).filter((page) => isAppPageRoute(page))\n\n    // Collect all the app paths for each page. This could include any parallel\n    // routes.\n    const allAppPaths: Record<string, string[]> = {}\n    for (const page of pages) {\n      const pathname = this.normalizers.pathname.normalize(page)\n      if (pathname in allAppPaths) allAppPaths[pathname].push(page)\n      else allAppPaths[pathname] = [page]\n    }\n\n    // Format the routes.\n    const matchers: Array<AppPageRouteMatcher> = []\n    for (const [pathname, appPaths] of Object.entries(allAppPaths)) {\n      // TODO-APP: (wyattjoh) this is a hack right now, should be more deterministic\n      const page = appPaths[0]\n\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppPageRouteMatcher({\n          kind: RouteKind.APP_PAGE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n          appPaths,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAppPageRoute(route: string): boolean {\n  return route.endsWith('/page')\n}\n","import { RouteMatcher } from './route-matcher'\nimport type { AppRouteRouteDefinition } from '../route-definitions/app-route-route-definition'\n\nexport class AppRouteRouteMatcher extends RouteMatcher<AppRouteRouteDefinition> {}\n","import { isAppRouteRoute } from '../../lib/is-app-route-route'\nimport { APP_PATHS_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport { AppRouteRouteMatcher } from '../route-matchers/app-route-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport { AppNormalizers } from '../normalizers/built/app'\n\nexport class AppRouteRouteMatcherProvider extends ManifestRouteMatcherProvider<AppRouteRouteMatcher> {\n  private readonly normalizers: AppNormalizers\n\n  constructor(distDir: string, manifestLoader: ManifestLoader) {\n    super(APP_PATHS_MANIFEST, manifestLoader)\n\n    this.normalizers = new AppNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<AppRouteRouteMatcher>> {\n    // This matcher only matches app routes.\n    const pages = Object.keys(manifest).filter((page) => isAppRouteRoute(page))\n\n    // Format the routes.\n    const matchers: Array<AppRouteRouteMatcher> = []\n    for (const page of pages) {\n      const filename = this.normalizers.filename.normalize(manifest[page])\n      const pathname = this.normalizers.pathname.normalize(page)\n      const bundlePath = this.normalizers.bundlePath.normalize(page)\n\n      matchers.push(\n        new AppRouteRouteMatcher({\n          kind: RouteKind.APP_ROUTE,\n          pathname,\n          page,\n          bundlePath,\n          filename,\n        })\n      )\n    }\n\n    return matchers\n  }\n}\n","export function isAPIRoute(value?: string) {\n  return value === '/api' || Boolean(value?.startsWith('/api/'))\n}\n","import type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesAPIRouteMatcher extends RouteMatcher<PagesAPIRouteDefinition> {}\n\nexport class PagesAPILocaleRouteMatcher extends LocaleRouteMatcher<PagesAPIRouteDefinition> {}\n","import { normalizePagePath } from '../../../../shared/lib/page-path/normalize-page-path'\nimport type { Normalizer } from '../../normalizer'\nimport { Normalizers } from '../../normalizers'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\nimport { wrapNormalizerFn } from '../../wrap-normalizer-fn'\n\nexport class PagesBundlePathNormalizer extends Normalizers {\n  constructor() {\n    super([\n      // The bundle path should have the trailing `/index` stripped from\n      // it.\n      wrapNormalizerFn(normalizePagePath),\n      // The page should prefixed with `pages/`.\n      new PrefixingNormalizer('pages'),\n    ])\n  }\n\n  public normalize(page: string): string {\n    return super.normalize(page)\n  }\n}\n\nexport class DevPagesBundlePathNormalizer extends Normalizers {\n  constructor(pagesNormalizer: Normalizer) {\n    super([\n      // This should normalize the filename to a page.\n      pagesNormalizer,\n      // Normalize the app page to a pathname.\n      new PagesBundlePathNormalizer(),\n    ])\n  }\n\n  public normalize(filename: string): string {\n    return super.normalize(filename)\n  }\n}\n","import { SERVER_DIRECTORY } from '../../../../shared/lib/constants'\nimport { PrefixingNormalizer } from '../../prefixing-normalizer'\n\nexport class PagesFilenameNormalizer extends PrefixingNormalizer {\n  constructor(distDir: string) {\n    super(distDir, SERVER_DIRECTORY)\n  }\n\n  public normalize(manifestFilename: string): string {\n    return super.normalize(manifestFilename)\n  }\n}\n","import {\n  DevPagesBundlePathNormalizer,\n  PagesBundlePathNormalizer,\n} from './pages-bundle-path-normalizer'\nimport { PagesFilenameNormalizer } from './pages-filename-normalizer'\nimport { DevPagesPageNormalizer } from './pages-page-normalizer'\nimport { DevPagesPathnameNormalizer } from './pages-pathname-normalizer'\n\nexport class PagesNormalizers {\n  public readonly filename: PagesFilenameNormalizer\n  public readonly bundlePath: PagesBundlePathNormalizer\n\n  constructor(distDir: string) {\n    this.filename = new PagesFilenameNormalizer(distDir)\n    this.bundlePath = new PagesBundlePathNormalizer()\n\n    // You'd think that we'd require a `pathname` normalizer here, but for\n    // `/pages` we have to handle i18n routes, which means that we need to\n    // analyze the page path to determine the locale prefix and it's locale.\n  }\n}\n\nexport class DevPagesNormalizers {\n  public readonly page: DevPagesPageNormalizer\n  public readonly pathname: DevPagesPathnameNormalizer\n  public readonly bundlePath: DevPagesBundlePathNormalizer\n\n  constructor(pagesDir: string, extensions: ReadonlyArray<string>) {\n    this.page = new DevPagesPageNormalizer(pagesDir, extensions)\n    this.pathname = new DevPagesPathnameNormalizer(pagesDir, extensions)\n    this.bundlePath = new DevPagesBundlePathNormalizer(this.page)\n  }\n}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesAPILocaleRouteMatcher,\n  PagesAPIRouteMatcher,\n} from '../route-matchers/pages-api-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesAPIRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesAPIRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesAPIRouteMatcher>> {\n    // This matcher is only for Pages API routes.\n    const pathnames = Object.keys(manifest).filter((pathname) =>\n      isAPIRoute(pathname)\n    )\n\n    const matchers: Array<PagesAPIRouteMatcher> = []\n\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesAPILocaleRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesAPIRouteMatcher({\n            kind: RouteKind.PAGES_API,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { PagesRouteDefinition } from '../route-definitions/pages-route-definition'\nimport { LocaleRouteMatcher } from './locale-route-matcher'\nimport { RouteMatcher } from './route-matcher'\n\nexport class PagesRouteMatcher extends RouteMatcher<PagesRouteDefinition> {}\n\nexport class PagesLocaleRouteMatcher extends LocaleRouteMatcher<PagesRouteDefinition> {}\n","import { isAPIRoute } from '../../lib/is-api-route'\nimport { BLOCKED_PAGES, PAGES_MANIFEST } from '../../shared/lib/constants'\nimport { RouteKind } from '../route-kind'\nimport {\n  PagesLocaleRouteMatcher,\n  PagesRouteMatcher,\n} from '../route-matchers/pages-route-matcher'\nimport type {\n  Manifest,\n  ManifestLoader,\n} from './helpers/manifest-loaders/manifest-loader'\nimport { ManifestRouteMatcherProvider } from './manifest-route-matcher-provider'\nimport type { I18NProvider } from '../lib/i18n-provider'\nimport { PagesNormalizers } from '../normalizers/built/pages'\n\nexport class PagesRouteMatcherProvider extends ManifestRouteMatcherProvider<PagesRouteMatcher> {\n  private readonly normalizers: PagesNormalizers\n\n  constructor(\n    distDir: string,\n    manifestLoader: ManifestLoader,\n    private readonly i18nProvider?: I18NProvider\n  ) {\n    super(PAGES_MANIFEST, manifestLoader)\n\n    this.normalizers = new PagesNormalizers(distDir)\n  }\n\n  protected async transform(\n    manifest: Manifest\n  ): Promise<ReadonlyArray<PagesRouteMatcher>> {\n    // This matcher is only for Pages routes, not Pages API routes which are\n    // included in this manifest.\n    const pathnames = Object.keys(manifest)\n      .filter((pathname) => !isAPIRoute(pathname))\n      // Remove any blocked pages (page that can't be routed to, like error or\n      // internal pages).\n      .filter((pathname) => {\n        const normalized =\n          this.i18nProvider?.analyze(pathname).pathname ?? pathname\n\n        // Skip any blocked pages.\n        if (BLOCKED_PAGES.includes(normalized)) return false\n\n        return true\n      })\n\n    const matchers: Array<PagesRouteMatcher> = []\n    for (const page of pathnames) {\n      if (this.i18nProvider) {\n        // Match the locale on the page name, or default to the default locale.\n        const { detectedLocale, pathname } = this.i18nProvider.analyze(page)\n\n        matchers.push(\n          new PagesLocaleRouteMatcher({\n            kind: RouteKind.PAGES,\n            pathname,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n            i18n: {\n              locale: detectedLocale,\n            },\n          })\n        )\n      } else {\n        matchers.push(\n          new PagesRouteMatcher({\n            kind: RouteKind.PAGES,\n            // In `pages/`, the page is the same as the pathname.\n            pathname: page,\n            page,\n            bundlePath: this.normalizers.bundlePath.normalize(page),\n            filename: this.normalizers.filename.normalize(manifest[page]),\n          })\n        )\n      }\n    }\n\n    return matchers\n  }\n}\n","import type { Manifest, ManifestLoader } from './manifest-loader'\n\nexport class ServerManifestLoader implements ManifestLoader {\n  constructor(private readonly getter: (name: string) => Manifest | null) {}\n\n  public load(name: string): Manifest | null {\n    return this.getter(name)\n  }\n}\n","import type { DomainLocale, I18NConfig } from '../config-shared'\nimport { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\n/**\n * The result of matching a locale aware route.\n */\nexport interface LocaleAnalysisResult {\n  /**\n   * The pathname without the locale prefix (if any).\n   */\n  pathname: string\n\n  /**\n   * The detected locale. If no locale was detected, this will be `undefined`.\n   */\n  detectedLocale?: string\n\n  /**\n   * True if the locale was inferred from the default locale.\n   */\n  inferredFromDefault: boolean\n}\n\ntype LocaleAnalysisOptions = {\n  /**\n   * When provided, it will be used as the default locale if the locale\n   * cannot be inferred from the pathname.\n   */\n  defaultLocale?: string\n}\n\n/**\n * The I18NProvider is used to match locale aware routes, detect the locale from\n * the pathname and hostname and normalize the pathname by removing the locale\n * prefix.\n */\nexport class I18NProvider {\n  private readonly lowerCaseLocales: ReadonlyArray<string>\n  private readonly lowerCaseDomains?: ReadonlyArray<\n    DomainLocale & {\n      // The configuration references a domain with an optional port, but the\n      // hostname is always the domain without the port and is used for\n      // matching.\n      hostname: string\n    }\n  >\n\n  constructor(public readonly config: Readonly<I18NConfig>) {\n    if (!config.locales.length) {\n      throw new Error('Invariant: No locales provided')\n    }\n\n    this.lowerCaseLocales = config.locales.map((locale) => locale.toLowerCase())\n    this.lowerCaseDomains = config.domains?.map((domainLocale) => {\n      const domain = domainLocale.domain.toLowerCase()\n      return {\n        defaultLocale: domainLocale.defaultLocale.toLowerCase(),\n        hostname: domain.split(':', 1)[0],\n        domain,\n        locales: domainLocale.locales?.map((locale) => locale.toLowerCase()),\n        http: domainLocale.http,\n      }\n    })\n  }\n\n  /**\n   * Detects the domain locale from the hostname and the detected locale if\n   * provided.\n   *\n   * @param hostname The hostname to detect the domain locale from, this must be lowercased.\n   * @param detectedLocale The detected locale to use if the hostname does not match.\n   * @returns The domain locale if found, `undefined` otherwise.\n   */\n  public detectDomainLocale(\n    hostname?: string,\n    detectedLocale?: string\n  ): DomainLocale | undefined {\n    if (!hostname || !this.lowerCaseDomains || !this.config.domains) return\n\n    if (detectedLocale) detectedLocale = detectedLocale.toLowerCase()\n\n    for (let i = 0; i < this.lowerCaseDomains.length; i++) {\n      const domainLocale = this.lowerCaseDomains[i]\n      if (\n        // We assume that the hostname is already lowercased.\n        domainLocale.hostname === hostname ||\n        // Configuration validation ensures that the locale is not repeated in\n        // other domains locales.\n        domainLocale.locales?.some((locale) => locale === detectedLocale)\n      ) {\n        return this.config.domains[i]\n      }\n    }\n\n    return\n  }\n\n  /**\n   * Pulls the pre-computed locale and inference results from the query\n   * object.\n   *\n   * @param req the request object\n   * @param pathname the pathname that could contain a locale prefix\n   * @returns the locale analysis result\n   */\n  public fromRequest(\n    req: NextIncomingMessage,\n    pathname: string\n  ): LocaleAnalysisResult {\n    const detectedLocale = getRequestMeta(req, 'locale')\n\n    // If a locale was detected on the query, analyze the pathname to ensure\n    // that the locale matches.\n    if (detectedLocale) {\n      const analysis = this.analyze(pathname)\n\n      // If the analysis contained a locale we should validate it against the\n      // query and strip it from the pathname.\n      if (analysis.detectedLocale) {\n        if (analysis.detectedLocale !== detectedLocale) {\n          console.warn(\n            `The detected locale does not match the locale in the query. Expected to find '${detectedLocale}' in '${pathname}' but found '${analysis.detectedLocale}'}`\n          )\n        }\n\n        pathname = analysis.pathname\n      }\n    }\n\n    return {\n      pathname,\n      detectedLocale,\n      inferredFromDefault:\n        getRequestMeta(req, 'localeInferredFromDefault') ?? false,\n    }\n  }\n\n  /**\n   * Analyzes the pathname for a locale and returns the pathname without it.\n   *\n   * @param pathname The pathname that could contain a locale prefix.\n   * @param options The options to use when matching the locale.\n   * @returns The matched locale and the pathname without the locale prefix\n   *          (if any).\n   */\n  public analyze(\n    pathname: string,\n    options: LocaleAnalysisOptions = {}\n  ): LocaleAnalysisResult {\n    let detectedLocale: string | undefined = options.defaultLocale\n\n    // By default, we assume that the default locale was inferred if there was\n    // no detected locale.\n    let inferredFromDefault = typeof detectedLocale === 'string'\n\n    // The first segment will be empty, because it has a leading `/`. If\n    // there is no further segment, there is no locale (or it's the default).\n    const segments = pathname.split('/', 2)\n    if (!segments[1])\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // The second segment will contain the locale part if any.\n    const segment = segments[1].toLowerCase()\n\n    // See if the segment matches one of the locales. If it doesn't, there is\n    // no locale (or it's the default).\n    const index = this.lowerCaseLocales.indexOf(segment)\n    if (index < 0)\n      return {\n        detectedLocale,\n        pathname,\n        inferredFromDefault,\n      }\n\n    // Return the case-sensitive locale.\n    detectedLocale = this.config.locales[index]\n    inferredFromDefault = false\n\n    // Remove the `/${locale}` part of the pathname.\n    pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n    return {\n      detectedLocale,\n      pathname,\n      inferredFromDefault,\n    }\n  }\n}\n","import type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport { isNodeNextResponse } from './base-http/helpers'\n\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { splitCookiesString } from './web/utils'\n\n/**\n * Sends the response on the underlying next response object.\n *\n * @param req the underlying request object\n * @param res the underlying response object\n * @param response the response to send\n */\nexport async function sendResponse(\n  req: BaseNextRequest,\n  res: BaseNextResponse,\n  response: Response,\n  waitUntil?: Promise<unknown>\n): Promise<void> {\n  if (\n    // The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' &&\n    isNodeNextResponse(res)\n  ) {\n    // Copy over the response status.\n    res.statusCode = response.status\n    res.statusMessage = response.statusText\n\n    // TODO: this is not spec-compliant behavior and we should not restrict\n    // headers that are allowed to appear many times.\n    //\n    // See:\n    // https://github.com/vercel/next.js/pull/70127\n    const headersWithMultipleValuesAllowed = [\n      // can add more headers to this list if needed\n      'set-cookie',\n      'www-authenticate',\n      'proxy-authenticate',\n      'vary',\n    ]\n\n    // Copy over the response headers.\n    response.headers?.forEach((value, name) => {\n      // `x-middleware-set-cookie` is an internal header not needed for the response\n      if (name.toLowerCase() === 'x-middleware-set-cookie') {\n        return\n      }\n\n      // The append handling is special cased for `set-cookie`.\n      if (name.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          res.appendHeader(name, cookie)\n        }\n      } else {\n        // only append the header if it is either not present in the outbound response\n        // or if the header supports multiple values\n        const isHeaderPresent = typeof res.getHeader(name) !== 'undefined'\n        if (\n          headersWithMultipleValuesAllowed.includes(name.toLowerCase()) ||\n          !isHeaderPresent\n        ) {\n          res.appendHeader(name, value)\n        }\n      }\n    })\n\n    /**\n     * The response can't be directly piped to the underlying response. The\n     * following is duplicated from the edge runtime handler.\n     *\n     * See packages/next/server/next-server.ts\n     */\n\n    const { originalResponse } = res\n\n    // A response body must not be sent for HEAD requests. See https://httpwg.org/specs/rfc9110.html#HEAD\n    if (response.body && req.method !== 'HEAD') {\n      await pipeToNodeResponse(response.body, originalResponse, waitUntil)\n    } else {\n      originalResponse.end()\n    }\n  }\n}\n","import { getPathMatch } from '../../shared/lib/router/utils/path-match'\n\nconst matcher = getPathMatch('/_next/data/:path*')\n\nexport function matchNextDataPathname(pathname: string | null | undefined) {\n  if (typeof pathname !== 'string') return false\n\n  return matcher(pathname)\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class SuffixPathnameNormalizer implements Normalizer {\n  constructor(private readonly suffix: string) {}\n\n  public match(pathname: string) {\n    // If the pathname doesn't end in the suffix, we don't match.\n    if (!pathname.endsWith(this.suffix)) return false\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    return pathname.substring(0, pathname.length - this.suffix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class RSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_SUFFIX)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { RSC_PREFETCH_SUFFIX } from '../../../lib/constants'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class PrefetchRSCPathnameNormalizer\n  extends SuffixPathnameNormalizer\n  implements PathnameNormalizer\n{\n  constructor() {\n    super(RSC_PREFETCH_SUFFIX)\n  }\n\n  public match(pathname: string): boolean {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return true\n    }\n\n    return super.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    if (pathname === '/__index' + RSC_PREFETCH_SUFFIX) {\n      return '/'\n    }\n\n    return super.normalize(pathname, matched)\n  }\n}\n","import type { Normalizer } from '../normalizer'\n\nexport class PrefixPathnameNormalizer implements Normalizer {\n  constructor(private readonly prefix: string) {\n    if (prefix.endsWith('/')) {\n      throw new Error(\n        `PrefixPathnameNormalizer: prefix \"${prefix}\" should not end with a slash`\n      )\n    }\n  }\n\n  public match(pathname: string) {\n    // If the pathname doesn't start with the prefix, we don't match.\n    if (pathname !== this.prefix && !pathname.startsWith(this.prefix + '/')) {\n      return false\n    }\n\n    return true\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    if (pathname.length === this.prefix.length) {\n      return '/'\n    }\n\n    return pathname.substring(this.prefix.length)\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport { denormalizePagePath } from '../../../shared/lib/page-path/denormalize-page-path'\nimport { PrefixPathnameNormalizer } from './prefix'\nimport { SuffixPathnameNormalizer } from './suffix'\n\nexport class NextDataPathnameNormalizer implements PathnameNormalizer {\n  private readonly prefix: PrefixPathnameNormalizer\n  private readonly suffix = new SuffixPathnameNormalizer('.json')\n  constructor(buildID: string) {\n    if (!buildID) {\n      throw new Error('Invariant: buildID is required')\n    }\n\n    this.prefix = new PrefixPathnameNormalizer(`/_next/data/${buildID}`)\n  }\n\n  public match(pathname: string) {\n    return this.prefix.match(pathname) && this.suffix.match(pathname)\n  }\n\n  public normalize(pathname: string, matched?: boolean): string {\n    // If we're not matched and we don't match, we don't need to normalize.\n    if (!matched && !this.match(pathname)) return pathname\n\n    pathname = this.prefix.normalize(pathname, true)\n    pathname = this.suffix.normalize(pathname, true)\n\n    return denormalizePagePath(pathname)\n  }\n}\n","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param pathname - The URL path that needs to be optimized.\n * @returns - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */\nexport function toRoute(pathname: string): string {\n  return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/'\n}\n","import type { AsyncLocalStorage } from 'async_hooks'\n\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\n  'Invariant: AsyncLocalStorage accessed in runtime where it is not available'\n)\n\nclass FakeAsyncLocalStorage<Store extends {}>\n  implements AsyncLocalStorage<Store>\n{\n  disable(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  getStore(): Store | undefined {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined\n  }\n\n  run<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  exit<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  enterWith(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  static bind<T>(fn: T): T {\n    return fn\n  }\n}\n\nconst maybeGlobalAsyncLocalStorage =\n  typeof globalThis !== 'undefined' && (globalThis as any).AsyncLocalStorage\n\nexport function createAsyncLocalStorage<\n  Store extends {},\n>(): AsyncLocalStorage<Store> {\n  if (maybeGlobalAsyncLocalStorage) {\n    return new maybeGlobalAsyncLocalStorage()\n  }\n  return new FakeAsyncLocalStorage()\n}\n\nexport function bindSnapshot<T>(fn: T): T {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.bind(fn)\n  }\n  return FakeAsyncLocalStorage.bind(fn)\n}\n\nexport function createSnapshot(): <R, TArgs extends any[]>(\n  fn: (...args: TArgs) => R,\n  ...args: TArgs\n) => R {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.snapshot()\n  }\n  return function (fn: any, ...args: any[]) {\n    return fn(...args)\n  }\n}\n","import { createAsyncLocalStorage } from '../app-render/async-local-storage'\n\nexport function getBuiltinRequestContext():\n  | BuiltinRequestContextValue\n  | undefined {\n  const _globalThis = globalThis as GlobalThisWithRequestContext\n  const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL]\n  return ctx?.get()\n}\n\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context')\n\ntype GlobalThisWithRequestContext = typeof globalThis & {\n  [NEXT_REQUEST_CONTEXT_SYMBOL]?: BuiltinRequestContext\n}\n\n/** A request context provided by the platform. */\nexport type BuiltinRequestContext = {\n  get(): BuiltinRequestContextValue | undefined\n}\n\nexport type RunnableBuiltinRequestContext = BuiltinRequestContext & {\n  run<T>(value: BuiltinRequestContextValue, callback: () => T): T\n}\n\nexport type BuiltinRequestContextValue = {\n  waitUntil?: WaitUntil\n}\nexport type WaitUntil = (promise: Promise<any>) => void\n\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */\nexport function createLocalRequestContext(): RunnableBuiltinRequestContext {\n  const storage = createAsyncLocalStorage<BuiltinRequestContextValue>()\n  return {\n    get: () => storage.getStore(),\n    run: (value, callback) => storage.run(value, callback),\n  }\n}\n","import type { WaitUntil } from '../../after/builtin-request-context'\nimport { PageSignatureError } from '../error'\nimport type { NextRequest } from './request'\n\nconst responseSymbol = Symbol('response')\nconst passThroughSymbol = Symbol('passThrough')\nconst waitUntilSymbol = Symbol('waitUntil')\n\nclass FetchEvent {\n  // TODO(after): get rid of the 'internal' variant and always use an external waitUntil\n  // (this means removing `FetchEventResult.waitUntil` which also requires a builder change)\n  readonly [waitUntilSymbol]:\n    | { kind: 'internal'; promises: Promise<any>[] }\n    | { kind: 'external'; function: WaitUntil };\n\n  [responseSymbol]?: Promise<Response>;\n  [passThroughSymbol] = false\n\n  constructor(_request: Request, waitUntil?: WaitUntil) {\n    this[waitUntilSymbol] = waitUntil\n      ? { kind: 'external', function: waitUntil }\n      : { kind: 'internal', promises: [] }\n  }\n\n  // TODO: is this dead code? NextFetchEvent never lets this get called\n  respondWith(response: Response | Promise<Response>): void {\n    if (!this[responseSymbol]) {\n      this[responseSymbol] = Promise.resolve(response)\n    }\n  }\n\n  // TODO: is this dead code? passThroughSymbol is unused\n  passThroughOnException(): void {\n    this[passThroughSymbol] = true\n  }\n\n  waitUntil(promise: Promise<any>): void {\n    if (this[waitUntilSymbol].kind === 'external') {\n      // if we received an external waitUntil, we delegate to it\n      // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n      const waitUntil = this[waitUntilSymbol].function\n      return waitUntil(promise)\n    } else {\n      // if we didn't receive an external waitUntil, we make it work on our own\n      // (and expect the caller to do something with the promises)\n      this[waitUntilSymbol].promises.push(promise)\n    }\n  }\n}\n\nexport function getWaitUntilPromiseFromEvent(\n  event: FetchEvent\n): Promise<void> | undefined {\n  return event[waitUntilSymbol].kind === 'internal'\n    ? Promise.all(event[waitUntilSymbol].promises).then(() => {})\n    : undefined\n}\n\nexport class NextFetchEvent extends FetchEvent {\n  sourcePage: string\n\n  constructor(params: {\n    request: NextRequest\n    page: string\n    context: { waitUntil: WaitUntil } | undefined\n  }) {\n    super(params.request, params.context?.waitUntil)\n    this.sourcePage = params.page\n  }\n\n  /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  get request() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n\n  /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */\n  respondWith() {\n    throw new PageSignatureError({\n      page: this.sourcePage,\n    })\n  }\n}\n","import { stringifyCookie } from '../../web/spec-extension/cookies'\nimport type { I18NConfig } from '../../config-shared'\nimport { NextURL } from '../next-url'\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils'\nimport { ReflectAdapter } from './adapters/reflect'\n\nimport { ResponseCookies } from './cookies'\n\nconst INTERNALS = Symbol('internal response')\nconst REDIRECTS = new Set([301, 302, 303, 307, 308])\n\nfunction handleMiddlewareField(\n  init: MiddlewareResponseInit | undefined,\n  headers: Headers\n) {\n  if (init?.request?.headers) {\n    if (!(init.request.headers instanceof Headers)) {\n      throw new Error('request.headers must be an instance of Headers')\n    }\n\n    const keys = []\n    for (const [key, value] of init.request.headers) {\n      headers.set('x-middleware-request-' + key, value)\n      keys.push(key)\n    }\n\n    headers.set('x-middleware-override-headers', keys.join(','))\n  }\n}\n\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */\nexport class NextResponse<Body = unknown> extends Response {\n  [INTERNALS]: {\n    cookies: ResponseCookies\n    url?: NextURL\n    body?: Body\n  }\n\n  constructor(body?: BodyInit | null, init: ResponseInit = {}) {\n    super(body, init)\n\n    const headers = this.headers\n    const cookies = new ResponseCookies(headers)\n\n    const cookiesProxy = new Proxy(cookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'delete':\n          case 'set': {\n            return (...args: [string, string]) => {\n              const result = Reflect.apply(target[prop], target, args)\n              const newHeaders = new Headers(headers)\n\n              if (result instanceof ResponseCookies) {\n                headers.set(\n                  'x-middleware-set-cookie',\n                  result\n                    .getAll()\n                    .map((cookie) => stringifyCookie(cookie))\n                    .join(',')\n                )\n              }\n\n              handleMiddlewareField(init, newHeaders)\n              return result\n            }\n          }\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    this[INTERNALS] = {\n      cookies: cookiesProxy,\n      url: init.url\n        ? new NextURL(init.url, {\n            headers: toNodeOutgoingHttpHeaders(headers),\n            nextConfig: init.nextConfig,\n          })\n        : undefined,\n    }\n  }\n\n  [Symbol.for('edge-runtime.inspect.custom')]() {\n    return {\n      cookies: this.cookies,\n      url: this.url,\n      // rest of props come from Response\n      body: this.body,\n      bodyUsed: this.bodyUsed,\n      headers: Object.fromEntries(this.headers),\n      ok: this.ok,\n      redirected: this.redirected,\n      status: this.status,\n      statusText: this.statusText,\n      type: this.type,\n    }\n  }\n\n  public get cookies() {\n    return this[INTERNALS].cookies\n  }\n\n  static json<JsonBody>(\n    body: JsonBody,\n    init?: ResponseInit\n  ): NextResponse<JsonBody> {\n    const response: Response = Response.json(body, init)\n    return new NextResponse(response.body, response)\n  }\n\n  static redirect(url: string | NextURL | URL, init?: number | ResponseInit) {\n    const status = typeof init === 'number' ? init : init?.status ?? 307\n    if (!REDIRECTS.has(status)) {\n      throw new RangeError(\n        'Failed to execute \"redirect\" on \"response\": Invalid status code'\n      )\n    }\n    const initObj = typeof init === 'object' ? init : {}\n    const headers = new Headers(initObj?.headers)\n    headers.set('Location', validateURL(url))\n\n    return new NextResponse(null, {\n      ...initObj,\n      headers,\n      status,\n    })\n  }\n\n  static rewrite(\n    destination: string | NextURL | URL,\n    init?: MiddlewareResponseInit\n  ) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-rewrite', validateURL(destination))\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n\n  static next(init?: MiddlewareResponseInit) {\n    const headers = new Headers(init?.headers)\n    headers.set('x-middleware-next', '1')\n\n    handleMiddlewareField(init, headers)\n    return new NextResponse(null, { ...init, headers })\n  }\n}\n\ninterface ResponseInit extends globalThis.ResponseInit {\n  nextConfig?: {\n    basePath?: string\n    i18n?: I18NConfig\n    trailingSlash?: boolean\n  }\n  url?: string\n}\n\ninterface ModifiedRequest {\n  /**\n   * If this is set, the request headers will be overridden with this value.\n   */\n  headers?: Headers\n}\n\ninterface MiddlewareResponseInit extends globalThis.ResponseInit {\n  /**\n   * These fields will override the request from clients.\n   */\n  request?: ModifiedRequest\n}\n","import { RequestCookies } from '../cookies'\n\nimport { ResponseCookies } from '../cookies'\nimport { ReflectAdapter } from './reflect'\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external'\nimport type { RequestStore } from '../../../app-render/work-unit-async-storage.external'\n\n/**\n * @internal\n */\nexport class ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\n      'Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options'\n    )\n  }\n\n  public static callable() {\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\n// We use this to type some APIs but we don't construct instances directly\nexport type { ResponseCookies }\n\n// The `cookies()` API is a mix of request and response cookies. For `.get()` methods,\n// we want to return the request cookie if it exists. For mutative methods like `.set()`,\n// we want to return the response cookie.\nexport type ReadonlyRequestCookies = Omit<\n  RequestCookies,\n  'set' | 'clear' | 'delete'\n> &\n  Pick<ResponseCookies, 'set' | 'delete'>\n\nexport class RequestCookiesAdapter {\n  public static seal(cookies: RequestCookies): ReadonlyRequestCookies {\n    return new Proxy(cookies as any, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case 'clear':\n          case 'delete':\n          case 'set':\n            return ReadonlyRequestCookiesError.callable\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n  }\n}\n\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies')\n\nexport function getModifiedCookieValues(\n  cookies: ResponseCookies\n): ResponseCookie[] {\n  const modified: ResponseCookie[] | undefined = (cookies as unknown as any)[\n    SYMBOL_MODIFY_COOKIE_VALUES\n  ]\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return []\n  }\n\n  return modified\n}\n\ntype SetCookieArgs =\n  | [key: string, value: string, cookie?: Partial<ResponseCookie>]\n  | [options: ResponseCookie]\n\nexport function appendMutableCookies(\n  headers: Headers,\n  mutableCookies: ResponseCookies\n): boolean {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies)\n  if (modifiedCookieValues.length === 0) {\n    return false\n  }\n\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new ResponseCookies(headers)\n  const returnedCookies = resCookies.getAll()\n\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie)\n  }\n\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie)\n  }\n\n  return true\n}\n\ntype ResponseCookie = NonNullable<\n  ReturnType<InstanceType<typeof ResponseCookies>['get']>\n>\n\nexport class MutableRequestCookiesAdapter {\n  public static wrap(\n    cookies: RequestCookies,\n    onUpdateCookies?: (cookies: string[]) => void\n  ): ResponseCookies {\n    const responseCookies = new ResponseCookies(new Headers())\n    for (const cookie of cookies.getAll()) {\n      responseCookies.set(cookie)\n    }\n\n    let modifiedValues: ResponseCookie[] = []\n    const modifiedCookies = new Set<string>()\n    const updateResponseCookies = () => {\n      // TODO-APP: change method of getting workStore\n      const workStore = workAsyncStorage.getStore()\n      if (workStore) {\n        workStore.pathWasRevalidated = true\n      }\n\n      const allCookies = responseCookies.getAll()\n      modifiedValues = allCookies.filter((c) => modifiedCookies.has(c.name))\n      if (onUpdateCookies) {\n        const serializedCookies: string[] = []\n        for (const cookie of modifiedValues) {\n          const tempCookies = new ResponseCookies(new Headers())\n          tempCookies.set(cookie)\n          serializedCookies.push(tempCookies.toString())\n        }\n\n        onUpdateCookies(serializedCookies)\n      }\n    }\n\n    const wrappedCookies = new Proxy(responseCookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues\n\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case 'delete':\n            return function (...args: [string] | [ResponseCookie]) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.delete(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n          case 'set':\n            return function (...args: SetCookieArgs) {\n              modifiedCookies.add(\n                typeof args[0] === 'string' ? args[0] : args[0].name\n              )\n              try {\n                target.set(...args)\n                return wrappedCookies\n              } finally {\n                updateResponseCookies()\n              }\n            }\n\n          default:\n            return ReflectAdapter.get(target, prop, receiver)\n        }\n      },\n    })\n\n    return wrappedCookies\n  }\n}\n\nexport function createCookiesWithMutableAccessCheck(\n  requestStore: RequestStore\n): ResponseCookies {\n  const wrappedCookies = new Proxy(requestStore.mutableCookies, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'delete':\n          return function (...args: [string] | [ResponseCookie]) {\n            ensureCookiesAreStillMutable(requestStore, 'cookies().delete')\n            target.delete(...args)\n            return wrappedCookies\n          }\n        case 'set':\n          return function (...args: SetCookieArgs) {\n            ensureCookiesAreStillMutable(requestStore, 'cookies().set')\n            target.set(...args)\n            return wrappedCookies\n          }\n\n        default:\n          return ReflectAdapter.get(target, prop, receiver)\n      }\n    },\n  })\n  return wrappedCookies\n}\n\nexport function areCookiesMutableInCurrentPhase(requestStore: RequestStore) {\n  return requestStore.phase === 'action'\n}\n\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */\nfunction ensureCookiesAreStillMutable(\n  requestStore: RequestStore,\n  _callingExpression: string\n) {\n  if (!areCookiesMutableInCurrentPhase(requestStore)) {\n    // TODO: maybe we can give a more precise error message based on callingExpression?\n    throw new ReadonlyRequestCookiesError()\n  }\n}\n\nexport function responseCookiesToRequestCookies(\n  responseCookies: ResponseCookies\n): RequestCookies {\n  const requestCookies = new RequestCookies(new Headers())\n  for (const cookie of responseCookies.getAll()) {\n    requestCookies.set(cookie)\n  }\n  return requestCookies\n}\n","import DefaultCacheHandler from '../lib/cache-handlers/default.external'\nimport type { CacheHandlerCompat } from '../lib/cache-handlers/types'\n\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE\n  ? (message: string, ...args: any[]) => {\n      console.log(`use-cache: ${message}`, ...args)\n    }\n  : undefined\n\nconst handlersSymbol = Symbol.for('@next/cache-handlers')\nconst handlersMapSymbol = Symbol.for('@next/cache-handlers-map')\nconst handlersSetSymbol = Symbol.for('@next/cache-handlers-set')\n\n/**\n * The reference to the cache handlers. We store the cache handlers on the\n * global object so that we can access the same instance across different\n * boundaries (such as different copies of the same module).\n */\nconst reference: typeof globalThis & {\n  [handlersSymbol]?: {\n    RemoteCache?: CacheHandlerCompat\n    DefaultCache?: CacheHandlerCompat\n  }\n  [handlersMapSymbol]?: Map<string, CacheHandlerCompat>\n  [handlersSetSymbol]?: Set<CacheHandlerCompat>\n} = globalThis\n\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */\nexport function initializeCacheHandlers(): boolean {\n  // If the cache handlers have already been initialized, don't do it again.\n  if (reference[handlersMapSymbol]) {\n    debug?.('cache handlers already initialized')\n    return false\n  }\n\n  debug?.('initializing cache handlers')\n  reference[handlersMapSymbol] = new Map<string, CacheHandlerCompat>()\n\n  // Initialize the cache from the symbol contents first.\n  if (reference[handlersSymbol]) {\n    let fallback: CacheHandlerCompat\n    if (reference[handlersSymbol].DefaultCache) {\n      debug?.('setting \"default\" cache handler from symbol')\n      fallback = reference[handlersSymbol].DefaultCache\n    } else {\n      debug?.('setting \"default\" cache handler from default')\n      fallback = DefaultCacheHandler\n    }\n\n    reference[handlersMapSymbol].set('default', fallback)\n\n    if (reference[handlersSymbol].RemoteCache) {\n      debug?.('setting \"remote\" cache handler from symbol')\n      reference[handlersMapSymbol].set(\n        'remote',\n        reference[handlersSymbol].RemoteCache\n      )\n    } else {\n      debug?.('setting \"remote\" cache handler from default')\n      reference[handlersMapSymbol].set('remote', fallback)\n    }\n  } else {\n    debug?.('setting \"default\" cache handler from default')\n    reference[handlersMapSymbol].set('default', DefaultCacheHandler)\n    debug?.('setting \"remote\" cache handler from default')\n    reference[handlersMapSymbol].set('remote', DefaultCacheHandler)\n  }\n\n  // Create a set of the cache handlers.\n  reference[handlersSetSymbol] = new Set(reference[handlersMapSymbol].values())\n\n  return true\n}\n\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandler(kind: string): CacheHandlerCompat | undefined {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  return reference[handlersMapSymbol].get(kind)\n}\n\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */\nexport function getCacheHandlers():\n  | SetIterator<CacheHandlerCompat>\n  | undefined {\n  if (!reference[handlersSetSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersSetSymbol].values()\n}\n\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */\nexport function getCacheHandlerEntries():\n  | MapIterator<[string, CacheHandlerCompat]>\n  | undefined {\n  if (!reference[handlersMapSymbol]) {\n    return undefined\n  }\n\n  return reference[handlersMapSymbol].entries()\n}\n\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */\nexport function setCacheHandler(\n  kind: string,\n  cacheHandler: CacheHandlerCompat\n): void {\n  // This should never be called before initializeCacheHandlers.\n  if (!reference[handlersMapSymbol] || !reference[handlersSetSymbol]) {\n    throw new Error('Cache handlers not initialized')\n  }\n\n  debug?.('setting cache handler for \"%s\"', kind)\n  reference[handlersMapSymbol].set(kind, cacheHandler)\n  reference[handlersSetSymbol].add(cacheHandler)\n}\n","import type { RequestData, FetchEventResult } from './types'\nimport type { RequestInit } from './spec-extension/request'\nimport { PageSignatureError } from './error'\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils'\nimport {\n  NextFetchEvent,\n  getWaitUntilPromiseFromEvent,\n} from './spec-extension/fetch-event'\nimport { NextRequest } from './spec-extension/request'\nimport { NextResponse } from './spec-extension/response'\nimport {\n  parseRelativeURL,\n  getRelativeURL,\n} from '../../shared/lib/router/utils/relativize-url'\nimport { NextURL } from './next-url'\nimport { stripInternalSearchParams } from '../internal-utils'\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths'\nimport {\n  FLIGHT_HEADERS,\n  NEXT_REWRITTEN_PATH_HEADER,\n  NEXT_REWRITTEN_QUERY_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  RSC_HEADER,\n} from '../../client/components/app-router-headers'\nimport { ensureInstrumentationRegistered } from './globals'\nimport { createRequestStoreForAPI } from '../async-storage/request-store'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport { createWorkStore } from '../async-storage/work-store'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers'\nimport { getTracer } from '../lib/trace/tracer'\nimport type { TextMapGetter } from 'next/dist/compiled/@opentelemetry/api'\nimport { MiddlewareSpan } from '../lib/trace/constants'\nimport { CloseController } from './web-on-close'\nimport { getEdgePreviewProps } from './get-edge-preview-props'\nimport { getBuiltinRequestContext } from '../after/builtin-request-context'\nimport { getImplicitTags } from '../lib/implicit-tags'\n\nexport class NextRequestHint extends NextRequest {\n  sourcePage: string\n  fetchMetrics: FetchEventResult['fetchMetrics'] | undefined\n\n  constructor(params: {\n    init: RequestInit\n    input: Request | string\n    page: string\n  }) {\n    super(params.input, params.init)\n    this.sourcePage = params.page\n  }\n\n  get request() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  respondWith() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n\n  waitUntil() {\n    throw new PageSignatureError({ page: this.sourcePage })\n  }\n}\n\nconst headersGetter: TextMapGetter<Headers> = {\n  keys: (headers) => Array.from(headers.keys()),\n  get: (headers, key) => headers.get(key) ?? undefined,\n}\n\nexport type AdapterOptions = {\n  handler: (req: NextRequestHint, event: NextFetchEvent) => Promise<Response>\n  page: string\n  request: RequestData\n  IncrementalCache?: typeof import('../lib/incremental-cache').IncrementalCache\n  incrementalCacheHandler?: typeof import('../lib/incremental-cache').CacheHandler\n  bypassNextUrl?: boolean\n}\n\nlet propagator: <T>(request: NextRequestHint, fn: () => T) => T = (\n  request,\n  fn\n) => {\n  const tracer = getTracer()\n  return tracer.withPropagatedContext(request.headers, fn, headersGetter)\n}\n\nlet testApisIntercepted = false\n\nfunction ensureTestApisIntercepted() {\n  if (!testApisIntercepted) {\n    testApisIntercepted = true\n    if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n      const { interceptTestApis, wrapRequestHandler } =\n        // eslint-disable-next-line @next/internal/typechecked-require -- experimental/testmode is not built ins next/dist/esm\n        require('next/dist/experimental/testmode/server-edge') as typeof import('../../experimental/testmode/server-edge')\n      interceptTestApis()\n      propagator = wrapRequestHandler(propagator)\n    }\n  }\n}\n\nexport async function adapter(\n  params: AdapterOptions\n): Promise<FetchEventResult> {\n  ensureTestApisIntercepted()\n  await ensureInstrumentationRegistered()\n\n  // TODO-APP: use explicit marker for this\n  const isEdgeRendering =\n    typeof (globalThis as any).__BUILD_MANIFEST !== 'undefined'\n\n  params.request.url = normalizeRscURL(params.request.url)\n\n  const requestURL = params.bypassNextUrl\n    ? new URL(params.request.url)\n    : new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig,\n      })\n\n  // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n  // Instead we use the keys before iteration.\n  const keys = [...requestURL.searchParams.keys()]\n  for (const key of keys) {\n    const value = requestURL.searchParams.getAll(key)\n\n    const normalizedKey = normalizeNextQueryParam(key)\n    if (normalizedKey) {\n      requestURL.searchParams.delete(normalizedKey)\n      for (const val of value) {\n        requestURL.searchParams.append(normalizedKey, val)\n      }\n      requestURL.searchParams.delete(key)\n    }\n  }\n\n  // Ensure users only see page requests, never data requests.\n  let buildId = process.env.__NEXT_BUILD_ID || ''\n  if ('buildId' in requestURL) {\n    buildId = (requestURL as NextURL).buildId || ''\n    requestURL.buildId = ''\n  }\n\n  const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers)\n  const isNextDataRequest = requestHeaders.has('x-nextjs-data')\n  const isRSCRequest = requestHeaders.get(RSC_HEADER) === '1'\n\n  if (isNextDataRequest && requestURL.pathname === '/index') {\n    requestURL.pathname = '/'\n  }\n\n  const flightHeaders = new Map()\n\n  // Headers should only be stripped for middleware\n  if (!isEdgeRendering) {\n    for (const header of FLIGHT_HEADERS) {\n      const value = requestHeaders.get(header)\n      if (value !== null) {\n        flightHeaders.set(header, value)\n        requestHeaders.delete(header)\n      }\n    }\n  }\n\n  const normalizeURL = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n    ? new URL(params.request.url)\n    : requestURL\n\n  const rscHash = normalizeURL.searchParams.get(NEXT_RSC_UNION_QUERY)\n\n  const request = new NextRequestHint({\n    page: params.page,\n    // Strip internal query parameters off the request.\n    input: stripInternalSearchParams(normalizeURL).toString(),\n    init: {\n      body: params.request.body,\n      headers: requestHeaders,\n      method: params.request.method,\n      nextConfig: params.request.nextConfig,\n      signal: params.request.signal,\n    },\n  })\n\n  /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */\n  if (isNextDataRequest) {\n    Object.defineProperty(request, '__isData', {\n      enumerable: false,\n      value: true,\n    })\n  }\n\n  if (\n    // If we are inside of the next start sandbox\n    // leverage the shared instance if not we need\n    // to create a fresh cache instance each time\n    !(globalThis as any).__incrementalCacheShared &&\n    (params as any).IncrementalCache\n  ) {\n    ;(globalThis as any).__incrementalCache = new (\n      params as {\n        IncrementalCache: typeof import('../lib/incremental-cache').IncrementalCache\n      }\n    ).IncrementalCache({\n      CurCacheHandler: params.incrementalCacheHandler,\n      minimalMode: process.env.NODE_ENV !== 'development',\n      fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n      dev: process.env.NODE_ENV === 'development',\n      requestHeaders: params.request.headers as any,\n\n      getPrerenderManifest: () => {\n        return {\n          version: -1 as any, // letting us know this doesn't conform to spec\n          routes: {},\n          dynamicRoutes: {},\n          notFoundRoutes: [],\n          preview: getEdgePreviewProps(),\n        }\n      },\n    })\n  }\n\n  // if we're in an edge runtime sandbox, we should use the waitUntil\n  // that we receive from the enclosing NextServer\n  const outerWaitUntil =\n    params.request.waitUntil ?? getBuiltinRequestContext()?.waitUntil\n\n  const event = new NextFetchEvent({\n    request,\n    page: params.page,\n    context: outerWaitUntil ? { waitUntil: outerWaitUntil } : undefined,\n  })\n  let response\n  let cookiesFromResponse\n\n  response = await propagator(request, () => {\n    // we only care to make async storage available for middleware\n    const isMiddleware =\n      params.page === '/middleware' || params.page === '/src/middleware'\n\n    if (isMiddleware) {\n      // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n      // so we have to inject it via DefinePlugin.\n      // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n\n      const waitUntil = event.waitUntil.bind(event)\n      const closeController = new CloseController()\n\n      return getTracer().trace(\n        MiddlewareSpan.execute,\n        {\n          spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n          attributes: {\n            'http.target': request.nextUrl.pathname,\n            'http.method': request.method,\n          },\n        },\n        async () => {\n          try {\n            const onUpdateCookies = (cookies: Array<string>) => {\n              cookiesFromResponse = cookies\n            }\n            const previewProps = getEdgePreviewProps()\n            const page = '/' // Fake Work\n            const fallbackRouteParams = null\n\n            const implicitTags = await getImplicitTags(\n              page,\n              request.nextUrl,\n              fallbackRouteParams\n            )\n\n            const requestStore = createRequestStoreForAPI(\n              request,\n              request.nextUrl,\n              implicitTags,\n              onUpdateCookies,\n              previewProps\n            )\n\n            const workStore = createWorkStore({\n              page,\n              renderOpts: {\n                cacheLifeProfiles:\n                  params.request.nextConfig?.experimental?.cacheLife,\n                experimental: {\n                  isRoutePPREnabled: false,\n                  cacheComponents: false,\n                  authInterrupts:\n                    !!params.request.nextConfig?.experimental?.authInterrupts,\n                },\n                supportsDynamicResponse: true,\n                waitUntil,\n                onClose: closeController.onClose.bind(closeController),\n                onAfterTaskError: undefined,\n              },\n              isPrefetchRequest:\n                request.headers.get(NEXT_ROUTER_PREFETCH_HEADER) === '1',\n              buildId: buildId ?? '',\n              previouslyRevalidatedTags: [],\n            })\n\n            return await workAsyncStorage.run(workStore, () =>\n              workUnitAsyncStorage.run(\n                requestStore,\n                params.handler,\n                request,\n                event\n              )\n            )\n          } finally {\n            // middleware cannot stream, so we can consider the response closed\n            // as soon as the handler returns.\n            // we can delay running it until a bit later --\n            // if it's needed, we'll have a `waitUntil` lock anyway.\n            setTimeout(() => {\n              closeController.dispatchClose()\n            }, 0)\n          }\n        }\n      )\n    }\n    return params.handler(request, event)\n  })\n\n  // check if response is a Response object\n  if (response && !(response instanceof Response)) {\n    throw new TypeError('Expected an instance of Response to be returned')\n  }\n\n  if (response && cookiesFromResponse) {\n    response.headers.set('set-cookie', cookiesFromResponse)\n  }\n\n  /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */\n  const rewrite = response?.headers.get('x-middleware-rewrite')\n  if (response && rewrite && (isRSCRequest || !isEdgeRendering)) {\n    const destination = new NextURL(rewrite, {\n      forceLocale: true,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE && !isEdgeRendering) {\n      if (destination.host === request.nextUrl.host) {\n        destination.buildId = buildId || destination.buildId\n        response.headers.set('x-middleware-rewrite', String(destination))\n      }\n    }\n\n    /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */\n    const { url: relativeDestination, isRelative } = parseRelativeURL(\n      destination.toString(),\n      requestURL.toString()\n    )\n\n    if (\n      !isEdgeRendering &&\n      isNextDataRequest &&\n      // if the rewrite is external and external rewrite\n      // resolving config is enabled don't add this header\n      // so the upstream app can set it instead\n      !(\n        process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE &&\n        relativeDestination.match(/http(s)?:\\/\\//)\n      )\n    ) {\n      response.headers.set('x-nextjs-rewrite', relativeDestination)\n    }\n\n    // If this is an RSC request, and the pathname or search has changed, and\n    // this isn't an external rewrite, we need to set the rewritten pathname and\n    // query headers.\n    if (isRSCRequest && isRelative) {\n      if (requestURL.pathname !== destination.pathname) {\n        response.headers.set(NEXT_REWRITTEN_PATH_HEADER, destination.pathname)\n      }\n      if (requestURL.search !== destination.search) {\n        response.headers.set(\n          NEXT_REWRITTEN_QUERY_HEADER,\n          // remove the leading ? from the search string\n          destination.search.slice(1)\n        )\n      }\n    }\n  }\n\n  /**\n   * Always forward the `_rsc` search parameter to the rewritten URL for RSC requests,\n   * unless it's already present. This is necessary to ensure that RSC hash validation\n   * works correctly after a rewrite. For internal rewrites, the server can validate the\n   * RSC hash using the original URL, so forwarding the `_rsc` parameter is less critical.\n   * However, for external rewrites (where the request is proxied to another Next.js server),\n   * the external server does not have access to the original URL or its search parameters.\n   * In these cases, forwarding the `_rsc` parameter is essential so that the external server\n   * can perform the correct RSC hash validation.\n   */\n  if (response && rewrite && isRSCRequest && rscHash) {\n    const rewriteURL = new URL(rewrite)\n    if (!rewriteURL.searchParams.has(NEXT_RSC_UNION_QUERY)) {\n      rewriteURL.searchParams.set(NEXT_RSC_UNION_QUERY, rscHash)\n      response.headers.set('x-middleware-rewrite', rewriteURL.toString())\n    }\n  }\n\n  /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */\n  const redirect = response?.headers.get('Location')\n  if (response && redirect && !isEdgeRendering) {\n    const redirectURL = new NextURL(redirect, {\n      forceLocale: false,\n      headers: params.request.headers,\n      nextConfig: params.request.nextConfig,\n    })\n\n    /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */\n    response = new Response(response.body, response)\n\n    if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n      if (redirectURL.host === requestURL.host) {\n        redirectURL.buildId = buildId || redirectURL.buildId\n        response.headers.set('Location', redirectURL.toString())\n      }\n    }\n\n    /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */\n    if (isNextDataRequest) {\n      response.headers.delete('Location')\n      response.headers.set(\n        'x-nextjs-redirect',\n        getRelativeURL(redirectURL.toString(), requestURL.toString())\n      )\n    }\n  }\n\n  const finalResponse = response ? response : NextResponse.next()\n\n  // Flight headers are not overridable / removable so they are applied at the end.\n  const middlewareOverrideHeaders = finalResponse.headers.get(\n    'x-middleware-override-headers'\n  )\n  const overwrittenHeaders: string[] = []\n  if (middlewareOverrideHeaders) {\n    for (const [key, value] of flightHeaders) {\n      finalResponse.headers.set(`x-middleware-request-${key}`, value)\n      overwrittenHeaders.push(key)\n    }\n\n    if (overwrittenHeaders.length > 0) {\n      finalResponse.headers.set(\n        'x-middleware-override-headers',\n        middlewareOverrideHeaders + ',' + overwrittenHeaders.join(',')\n      )\n    }\n  }\n\n  return {\n    response: finalResponse,\n    waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n    fetchMetrics: request.fetchMetrics,\n  }\n}\n","import type { PathnameNormalizer } from './pathname-normalizer'\n\nimport {\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n} from '../../../lib/constants'\n\nconst PATTERN = new RegExp(\n  `^(/.*)${RSC_SEGMENTS_DIR_SUFFIX}(/.*)${RSC_SEGMENT_SUFFIX}$`\n)\n\nexport class SegmentPrefixRSCPathnameNormalizer implements PathnameNormalizer {\n  public match(pathname: string): boolean {\n    return PATTERN.test(pathname)\n  }\n\n  public extract(pathname: string) {\n    const match = pathname.match(PATTERN)\n    if (!match) return null\n\n    return { originalPathname: match[1], segmentPath: match[2] }\n  }\n\n  public normalize(pathname: string): string {\n    const match = this.extract(pathname)\n    if (!match) return pathname\n\n    return match.originalPathname\n  }\n}\n","import type { __ApiPreviewProps } from './api-utils'\nimport type { LoadComponentsReturnType } from './load-components'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { Params } from './request/params'\nimport type { NextConfig, NextConfigComplete } from './config-shared'\nimport type {\n  NextParsedUrlQuery,\n  NextUrlWithParsedQuery,\n  RequestMeta,\n} from './request-meta'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { RenderOptsPartial as PagesRenderOptsPartial } from './render'\nimport type {\n  RenderOptsPartial as AppRenderOptsPartial,\n  ServerOnInstrumentationRequestError,\n} from './app-render/types'\nimport type {\n  ServerComponentsHmrCache,\n  ResponseCacheBase,\n} from './response-cache'\nimport type { UrlWithParsedQuery } from 'url'\nimport {\n  NormalizeError,\n  DecodeError,\n  normalizeRepeatedSlashes,\n  MissingStaticPage,\n} from '../shared/lib/utils'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { BaseNextRequest, BaseNextResponse } from './base-http'\nimport type {\n  ManifestRewriteRoute,\n  ManifestRoute,\n  PrerenderManifest,\n} from '../build'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type {\n  Server as HTTPServer,\n  IncomingMessage,\n  ServerResponse as HTTPServerResponse,\n} from 'http'\nimport type { MiddlewareMatcher } from '../build/analysis/get-page-static-info'\nimport type { TLSSocket } from 'tls'\nimport type { PathnameNormalizer } from './normalizers/request/pathname-normalizer'\nimport type { InstrumentationModule } from './instrumentation/types'\n\nimport { format as formatUrl, parse as parseUrl } from 'url'\nimport { formatHostname } from './lib/format-hostname'\nimport {\n  APP_PATHS_MANIFEST,\n  NEXT_BUILTIN_DOCUMENT,\n  PAGES_MANIFEST,\n  STATIC_STATUS_PAGES,\n  UNDERSCORE_NOT_FOUND_ROUTE,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { setConfig } from '../shared/lib/runtime-config.external'\nimport { execOnce } from '../shared/lib/utils'\nimport { isBlockedPage } from './utils'\nimport { getBotType, isBot } from '../shared/lib/router/utils/is-bot'\nimport RenderResult from './render-result'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport * as Log from '../build/output/log'\nimport { getPreviouslyRevalidatedTags, getServerUtils } from './server-utils'\nimport isError, { getProperError } from '../lib/is-error'\nimport {\n  addRequestMeta,\n  getRequestMeta,\n  removeRequestMeta,\n  setRequestMeta,\n} from './request-meta'\nimport { removePathPrefix } from '../shared/lib/router/utils/remove-path-prefix'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\nimport { getHostname } from '../shared/lib/get-hostname'\nimport { parseUrl as parseUrlUtil } from '../shared/lib/router/utils/parse-url'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport {\n  RSC_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_URL,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n} from '../client/components/app-router-headers'\nimport type {\n  MatchOptions,\n  RouteMatcherManager,\n} from './route-matcher-managers/route-matcher-manager'\nimport { LocaleRouteNormalizer } from './normalizers/locale-route-normalizer'\nimport { DefaultRouteMatcherManager } from './route-matcher-managers/default-route-matcher-manager'\nimport { AppPageRouteMatcherProvider } from './route-matcher-providers/app-page-route-matcher-provider'\nimport { AppRouteRouteMatcherProvider } from './route-matcher-providers/app-route-route-matcher-provider'\nimport { PagesAPIRouteMatcherProvider } from './route-matcher-providers/pages-api-route-matcher-provider'\nimport { PagesRouteMatcherProvider } from './route-matcher-providers/pages-route-matcher-provider'\nimport { ServerManifestLoader } from './route-matcher-providers/helpers/manifest-loaders/server-manifest-loader'\nimport {\n  getTracer,\n  isBubbledError,\n  SpanKind,\n  SpanStatusCode,\n} from './lib/trace/tracer'\nimport { BaseServerSpan } from './lib/trace/constants'\nimport { I18NProvider } from './lib/i18n-provider'\nimport { sendResponse } from './send-response'\nimport { normalizeNextQueryParam } from './web/utils'\nimport {\n  HTML_CONTENT_TYPE_HEADER,\n  JSON_CONTENT_TYPE_HEADER,\n  MATCHED_PATH_HEADER,\n  NEXT_RESUME_HEADER,\n} from '../lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { matchNextDataPathname } from './lib/match-next-data-pathname'\nimport getRouteFromAssetPath from '../shared/lib/router/utils/get-route-from-asset-path'\nimport { RSCPathnameNormalizer } from './normalizers/request/rsc'\nimport { stripFlightHeaders } from './app-render/strip-flight-headers'\nimport {\n  isAppPageRouteModule,\n  isAppRouteRouteModule,\n} from './route-modules/checks'\nimport { PrefetchRSCPathnameNormalizer } from './normalizers/request/prefetch-rsc'\nimport { NextDataPathnameNormalizer } from './normalizers/request/next-data'\nimport { getIsPossibleServerAction } from './lib/server-action-request-meta'\nimport { isInterceptionRouteAppPath } from '../shared/lib/router/utils/interception-routes'\nimport { toRoute } from './lib/to-route'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { isNodeNextRequest, isNodeNextResponse } from './base-http/helpers'\nimport { patchSetHeaderWithCookieSupport } from './lib/patch-set-header'\nimport { checkIsAppPPREnabled } from './lib/experimental/ppr'\nimport {\n  getBuiltinRequestContext,\n  type WaitUntil,\n} from './after/builtin-request-context'\nimport { NextRequestHint } from './web/adapter'\nimport type { RouteModule } from './route-modules/route-module'\nimport { type FallbackMode, parseFallbackField } from '../lib/fallback'\nimport { SegmentPrefixRSCPathnameNormalizer } from './normalizers/request/segment-prefix-rsc'\nimport { shouldServeStreamingMetadata } from './lib/streaming-metadata'\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter'\nimport { NoFallbackError } from '../shared/lib/no-fallback-error.external'\nimport { getCacheHandlers } from './use-cache/handlers'\nimport { fixMojibake } from './lib/fix-mojibake'\nimport { computeCacheBustingSearchParam } from '../shared/lib/router/utils/cache-busting-search-param'\nimport { setCacheBustingSearchParamWithHash } from '../client/components/router-reducer/set-cache-busting-search-param'\nimport type { CacheControl } from './lib/cache-control'\nimport type { PrerenderedRoute } from '../build/static-paths/types'\n\nexport type FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: NextParsedUrlQuery\n}\n\nexport interface MiddlewareRoutingItem {\n  page: string\n  match: MiddlewareRouteMatch\n  matchers?: MiddlewareMatcher[]\n}\n\nexport type RouteHandler<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = (\n  req: ServerRequest,\n  res: ServerResponse,\n  parsedUrl: NextUrlWithParsedQuery\n) => PromiseLike<boolean> | boolean\n\n/**\n * The normalized route manifest is the same as the route manifest, but with\n * the rewrites normalized to the object shape that the router expects.\n */\nexport type NormalizedRouteManifest = {\n  readonly dynamicRoutes: ReadonlyArray<ManifestRoute>\n  readonly rewrites: {\n    readonly beforeFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly afterFiles: ReadonlyArray<ManifestRewriteRoute>\n    readonly fallback: ReadonlyArray<ManifestRewriteRoute>\n  }\n}\n\nexport interface Options {\n  /**\n   * Object containing the configuration next.config.js\n   */\n  conf: NextConfig\n  /**\n   * Set to false when the server was created by Next.js\n   */\n  customServer?: boolean\n  /**\n   * Tells if Next.js is running in dev mode\n   */\n  dev?: boolean\n  /**\n   * Enables the experimental testing mode.\n   */\n  experimentalTestProxy?: boolean\n\n  /**\n   * Whether or not the dev server is running in experimental HTTPS mode\n   */\n  experimentalHttpsServer?: boolean\n  /**\n   * Where the Next project is located\n   */\n  dir?: string\n  /**\n   * Tells if Next.js is at the platform-level\n   */\n  minimalMode?: boolean\n  /**\n   * Hide error messages containing server information\n   */\n  quiet?: boolean\n  /**\n   * The hostname the server is running behind\n   */\n  hostname?: string\n  /**\n   * The port the server is running behind\n   */\n  port?: number\n  /**\n   * The HTTP Server that Next.js is running behind\n   */\n  httpServer?: HTTPServer\n}\n\nexport type RenderOpts = PagesRenderOptsPartial & AppRenderOptsPartial\n\nexport type LoadedRenderOpts = RenderOpts &\n  LoadComponentsReturnType &\n  RequestLifecycleOpts\n\nexport type RequestLifecycleOpts = {\n  waitUntil: ((promise: Promise<any>) => void) | undefined\n  onClose: (callback: () => void) => void\n  onAfterTaskError: ((error: unknown) => void) | undefined\n}\n\ntype BaseRenderOpts = RenderOpts & {\n  poweredByHeader: boolean\n  generateEtags: boolean\n  previewProps: __ApiPreviewProps\n}\n\n/**\n * The public interface for rendering with the server programmatically. This\n * would typically only allow the base request or response to extend it, but\n * because this can be programmatically accessed, we assume that it could also\n * be the base Node.js request and response types.\n */\nexport interface BaseRequestHandler<\n  ServerRequest extends BaseNextRequest | IncomingMessage = BaseNextRequest,\n  ServerResponse extends\n    | BaseNextResponse\n    | HTTPServerResponse = BaseNextResponse,\n> {\n  (\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery | undefined\n  ): Promise<void> | void\n}\n\nexport type RequestContext<\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> = {\n  req: ServerRequest\n  res: ServerResponse\n  pathname: string\n  query: NextParsedUrlQuery\n  renderOpts: RenderOpts\n}\n\n// Internal wrapper around build errors at development\n// time, to prevent us from propagating or logging them\nexport class WrappedBuildError extends Error {\n  innerError: Error\n\n  constructor(innerError: Error) {\n    super()\n    this.innerError = innerError\n  }\n}\n\ntype ResponsePayload = {\n  body: RenderResult\n  cacheControl?: CacheControl\n}\n\nexport type NextEnabledDirectories = {\n  readonly pages: boolean\n  readonly app: boolean\n}\n\nexport default abstract class Server<\n  ServerOptions extends Options = Options,\n  ServerRequest extends BaseNextRequest = BaseNextRequest,\n  ServerResponse extends BaseNextResponse = BaseNextResponse,\n> {\n  public readonly hostname?: string\n  public readonly fetchHostname?: string\n  public readonly port?: number\n  protected readonly dir: string\n  protected readonly quiet: boolean\n  protected readonly nextConfig: NextConfigComplete\n  protected readonly distDir: string\n  protected readonly publicDir: string\n  protected readonly hasStaticDir: boolean\n  protected readonly pagesManifest?: PagesManifest\n  protected readonly appPathsManifest?: PagesManifest\n  protected readonly buildId: string\n  protected readonly minimalMode: boolean\n  protected readonly renderOpts: BaseRenderOpts\n  protected readonly serverOptions: Readonly<ServerOptions>\n  protected readonly appPathRoutes?: Record<string, string[]>\n  protected readonly clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  protected interceptionRoutePatterns: RegExp[]\n  protected nextFontManifest?: DeepReadonly<NextFontManifest>\n  protected instrumentation: InstrumentationModule | undefined\n  private readonly responseCache: ResponseCacheBase\n\n  protected abstract getPublicDir(): string\n  protected abstract getHasStaticDir(): boolean\n  protected abstract getPagesManifest(): PagesManifest | undefined\n  protected abstract getAppPathsManifest(): PagesManifest | undefined\n  protected abstract getBuildId(): string\n  protected abstract getinterceptionRoutePatterns(): RegExp[]\n\n  protected readonly enabledDirectories: NextEnabledDirectories\n  protected abstract getEnabledDirectories(dev: boolean): NextEnabledDirectories\n\n  protected readonly experimentalTestProxy?: boolean\n\n  protected abstract findPageComponents(params: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure?: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null>\n  protected abstract getPrerenderManifest(): DeepReadonly<PrerenderManifest>\n  protected abstract getNextFontManifest():\n    | DeepReadonly<NextFontManifest>\n    | undefined\n  protected abstract attachRequestMeta(\n    req: ServerRequest,\n    parsedUrl: NextUrlWithParsedQuery\n  ): void\n  protected abstract hasPage(pathname: string): Promise<boolean>\n\n  protected abstract sendRenderResult(\n    req: ServerRequest,\n    res: ServerResponse,\n    options: {\n      result: RenderResult\n      generateEtags: boolean\n      poweredByHeader: boolean\n      cacheControl: CacheControl | undefined\n    }\n  ): Promise<void>\n\n  protected abstract runApi(\n    req: ServerRequest,\n    res: ServerResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean>\n\n  protected abstract renderHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult>\n\n  protected abstract getIncrementalCache(options: {\n    requestHeaders: Record<string, undefined | string | string[]>\n  }): Promise<import('./lib/incremental-cache').IncrementalCache>\n\n  protected abstract getResponseCache(options: {\n    dev: boolean\n  }): ResponseCacheBase\n\n  protected getServerComponentsHmrCache():\n    | ServerComponentsHmrCache\n    | undefined {\n    return this.nextConfig.experimental.serverComponentsHmrCache\n      ? (globalThis as any).__serverComponentsHmrCache\n      : undefined\n  }\n\n  protected abstract loadEnvConfig(params: {\n    dev: boolean\n    forceReload?: boolean\n  }): void\n\n  // TODO-APP: (wyattjoh): Make protected again. Used for turbopack in route-resolver.ts right now.\n  public readonly matchers: RouteMatcherManager\n  protected readonly i18nProvider?: I18NProvider\n  protected readonly localeNormalizer?: LocaleRouteNormalizer\n\n  protected readonly normalizers: {\n    readonly rsc: RSCPathnameNormalizer | undefined\n    readonly prefetchRSC: PrefetchRSCPathnameNormalizer | undefined\n    readonly segmentPrefetchRSC: SegmentPrefixRSCPathnameNormalizer | undefined\n    readonly data: NextDataPathnameNormalizer | undefined\n  }\n\n  private readonly isAppPPREnabled: boolean\n  private readonly isAppSegmentPrefetchEnabled: boolean\n\n  /**\n   * This is used to persist cache scopes across\n   * prefetch -> full route requests for cache components\n   * it's only fully used in dev\n   */\n\n  public constructor(options: ServerOptions) {\n    const {\n      dir = '.',\n      quiet = false,\n      conf,\n      dev = false,\n      minimalMode = false,\n      hostname,\n      port,\n      experimentalTestProxy,\n    } = options\n\n    this.experimentalTestProxy = experimentalTestProxy\n    this.serverOptions = options\n\n    this.dir = (require('path') as typeof import('path')).resolve(dir)\n\n    this.quiet = quiet\n    this.loadEnvConfig({ dev })\n\n    // TODO: should conf be normalized to prevent missing\n    // values from causing issues as this can be user provided\n    this.nextConfig = conf as NextConfigComplete\n    this.hostname = hostname\n    if (this.hostname) {\n      // we format the hostname so that it can be fetched\n      this.fetchHostname = formatHostname(this.hostname)\n    }\n    this.port = port\n    this.distDir = (require('path') as typeof import('path')).join(\n      this.dir,\n      this.nextConfig.distDir\n    )\n    this.publicDir = this.getPublicDir()\n    this.hasStaticDir = !minimalMode && this.getHasStaticDir()\n\n    this.i18nProvider = this.nextConfig.i18n?.locales\n      ? new I18NProvider(this.nextConfig.i18n)\n      : undefined\n\n    // Configure the locale normalizer, it's used for routes inside `pages/`.\n    this.localeNormalizer = this.i18nProvider\n      ? new LocaleRouteNormalizer(this.i18nProvider)\n      : undefined\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n    } = this.nextConfig\n\n    this.buildId = this.getBuildId()\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] =\n      minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE\n\n    this.enabledDirectories = this.getEnabledDirectories(dev)\n\n    this.isAppPPREnabled =\n      this.enabledDirectories.app &&\n      checkIsAppPPREnabled(this.nextConfig.experimental.ppr)\n\n    this.isAppSegmentPrefetchEnabled =\n      this.enabledDirectories.app &&\n      this.nextConfig.experimental.clientSegmentCache === true\n\n    this.normalizers = {\n      // We should normalize the pathname from the RSC prefix only in minimal\n      // mode as otherwise that route is not exposed external to the server as\n      // we instead only rely on the headers.\n      rsc:\n        this.enabledDirectories.app && this.minimalMode\n          ? new RSCPathnameNormalizer()\n          : undefined,\n      prefetchRSC:\n        this.isAppPPREnabled && this.minimalMode\n          ? new PrefetchRSCPathnameNormalizer()\n          : undefined,\n      segmentPrefetchRSC:\n        this.isAppSegmentPrefetchEnabled && this.minimalMode\n          ? new SegmentPrefixRSCPathnameNormalizer()\n          : undefined,\n      data: this.enabledDirectories.pages\n        ? new NextDataPathnameNormalizer(this.buildId)\n        : undefined,\n    }\n\n    this.nextFontManifest = this.getNextFontManifest()\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    this.renderOpts = {\n      dir: this.dir,\n      supportsDynamicResponse: true,\n      trailingSlash: this.nextConfig.trailingSlash,\n      deploymentId: this.nextConfig.deploymentId,\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || '',\n      generateEtags,\n      previewProps: this.getPrerenderManifest().preview,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: this.nextConfig.images,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      nextConfigOutput: this.nextConfig.output,\n      nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n      disableOptimizedLoading:\n        this.nextConfig.experimental.disableOptimizedLoading,\n      domainLocales: this.nextConfig.i18n?.domains,\n      distDir: this.distDir,\n      serverComponents: this.enabledDirectories.app,\n      cacheLifeProfiles: this.nextConfig.experimental.cacheLife,\n      enableTainting: this.nextConfig.experimental.taint,\n      crossOrigin: this.nextConfig.crossOrigin\n        ? this.nextConfig.crossOrigin\n        : undefined,\n      largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n      // Only the `publicRuntimeConfig` key is exposed to the client side\n      // It'll be rendered as part of __NEXT_DATA__ on the client side\n      runtimeConfig:\n        Object.keys(publicRuntimeConfig).length > 0\n          ? publicRuntimeConfig\n          : undefined,\n\n      isExperimentalCompile: this.nextConfig.experimental.isExperimentalCompile,\n      // `htmlLimitedBots` is passed to server as serialized config in string format\n      htmlLimitedBots: this.nextConfig.htmlLimitedBots,\n      experimental: {\n        expireTime: this.nextConfig.expireTime,\n        staleTimes: this.nextConfig.experimental.staleTimes,\n        clientTraceMetadata: this.nextConfig.experimental.clientTraceMetadata,\n        cacheComponents: this.nextConfig.experimental.cacheComponents ?? false,\n        clientSegmentCache:\n          this.nextConfig.experimental.clientSegmentCache === 'client-only'\n            ? 'client-only'\n            : Boolean(this.nextConfig.experimental.clientSegmentCache),\n        clientParamParsing:\n          this.nextConfig.experimental.clientParamParsing ?? false,\n        dynamicOnHover: this.nextConfig.experimental.dynamicOnHover ?? false,\n        inlineCss: this.nextConfig.experimental.inlineCss ?? false,\n        authInterrupts: !!this.nextConfig.experimental.authInterrupts,\n      },\n      onInstrumentationRequestError:\n        this.instrumentationOnRequestError.bind(this),\n      reactMaxHeadersLength: this.nextConfig.reactMaxHeadersLength,\n      devtoolSegmentExplorer:\n        this.nextConfig.experimental.devtoolSegmentExplorer,\n    }\n\n    // Initialize next/config with the environment configuration\n    setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.pagesManifest = this.getPagesManifest()\n    this.appPathsManifest = this.getAppPathsManifest()\n    this.appPathRoutes = this.getAppPathRoutes()\n    this.interceptionRoutePatterns = this.getinterceptionRoutePatterns()\n\n    // Configure the routes.\n    this.matchers = this.getRouteMatchers()\n\n    // Start route compilation. We don't wait for the routes to finish loading\n    // because we use the `waitTillReady` promise below in `handleRequest` to\n    // wait. Also we can't `await` in the constructor.\n    void this.matchers.reload()\n\n    this.setAssetPrefix(assetPrefix)\n    this.responseCache = this.getResponseCache({ dev })\n  }\n\n  private handleRSCRequest: RouteHandler<ServerRequest, ServerResponse> = (\n    req,\n    _res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname) return false\n\n    if (this.normalizers.segmentPrefetchRSC?.match(parsedUrl.pathname)) {\n      const result = this.normalizers.segmentPrefetchRSC.extract(\n        parsedUrl.pathname\n      )\n      if (!result) return false\n\n      const { originalPathname, segmentPath } = result\n      parsedUrl.pathname = originalPathname\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n      req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] = segmentPath\n\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n      addRequestMeta(req, 'segmentPrefetchRSCRequest', segmentPath)\n    } else if (this.normalizers.prefetchRSC?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.prefetchRSC.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a router prefetch request.\n      req.headers[RSC_HEADER] = '1'\n      req.headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n      addRequestMeta(req, 'isPrefetchRSCRequest', true)\n    } else if (this.normalizers.rsc?.match(parsedUrl.pathname)) {\n      parsedUrl.pathname = this.normalizers.rsc.normalize(\n        parsedUrl.pathname,\n        true\n      )\n\n      // Mark the request as a RSC request.\n      req.headers[RSC_HEADER] = '1'\n      addRequestMeta(req, 'isRSCRequest', true)\n    } else if (req.headers['x-now-route-matches']) {\n      // If we didn't match, return with the flight headers stripped. If in\n      // minimal mode we didn't match based on the path, this can't be a RSC\n      // request. This is because Vercel only sends this header during\n      // revalidation requests and we want the cache to instead depend on the\n      // request path for flight information.\n      stripFlightHeaders(req.headers)\n\n      return false\n    } else if (req.headers[RSC_HEADER] === '1') {\n      addRequestMeta(req, 'isRSCRequest', true)\n\n      if (req.headers[NEXT_ROUTER_PREFETCH_HEADER] === '1') {\n        addRequestMeta(req, 'isPrefetchRSCRequest', true)\n\n        const segmentPrefetchRSCRequest =\n          req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]\n        if (typeof segmentPrefetchRSCRequest === 'string') {\n          addRequestMeta(\n            req,\n            'segmentPrefetchRSCRequest',\n            segmentPrefetchRSCRequest\n          )\n        }\n      }\n    } else {\n      // Otherwise just return without doing anything.\n      return false\n    }\n\n    if (req.url) {\n      const parsed = parseUrl(req.url)\n      parsed.pathname = parsedUrl.pathname\n      req.url = formatUrl(parsed)\n    }\n\n    return false\n  }\n\n  private handleNextDataRequest: RouteHandler<ServerRequest, ServerResponse> =\n    async (req, res, parsedUrl) => {\n      const middleware = await this.getMiddleware()\n      const params = matchNextDataPathname(parsedUrl.pathname)\n\n      // ignore for non-next data URLs\n      if (!params || !params.path) {\n        return false\n      }\n\n      if (params.path[0] !== this.buildId) {\n        // Ignore if its a middleware request when we aren't on edge.\n        if (getRequestMeta(req, 'middlewareInvoke')) {\n          return false\n        }\n\n        // Make sure to 404 if the buildId isn't correct\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // remove buildId from URL\n      params.path.shift()\n\n      const lastParam = params.path[params.path.length - 1]\n\n      // show 404 if it doesn't end with .json\n      if (typeof lastParam !== 'string' || !lastParam.endsWith('.json')) {\n        await this.render404(req, res, parsedUrl)\n        return true\n      }\n\n      // re-create page's pathname\n      let pathname = `/${params.path.join('/')}`\n      pathname = getRouteFromAssetPath(pathname, '.json')\n\n      // ensure trailing slash is normalized per config\n      if (middleware) {\n        if (this.nextConfig.trailingSlash && !pathname.endsWith('/')) {\n          pathname += '/'\n        }\n        if (\n          !this.nextConfig.trailingSlash &&\n          pathname.length > 1 &&\n          pathname.endsWith('/')\n        ) {\n          pathname = pathname.substring(0, pathname.length - 1)\n        }\n      }\n\n      if (this.i18nProvider) {\n        // Remove the port from the hostname if present.\n        const hostname = req?.headers.host?.split(':', 1)[0].toLowerCase()\n\n        const domainLocale = this.i18nProvider.detectDomainLocale(hostname)\n        const defaultLocale =\n          domainLocale?.defaultLocale ?? this.i18nProvider.config.defaultLocale\n\n        const localePathResult = this.i18nProvider.analyze(pathname)\n\n        // If the locale is detected from the path, we need to remove it\n        // from the pathname.\n        if (localePathResult.detectedLocale) {\n          pathname = localePathResult.pathname\n        }\n\n        // Update the query with the detected locale and default locale.\n        addRequestMeta(req, 'locale', localePathResult.detectedLocale)\n        addRequestMeta(req, 'defaultLocale', defaultLocale)\n\n        // If the locale is not detected from the path, we need to mark that\n        // it was not inferred from default.\n        if (!localePathResult.detectedLocale) {\n          removeRequestMeta(req, 'localeInferredFromDefault')\n        }\n\n        // If no locale was detected and we don't have middleware, we need\n        // to render a 404 page.\n        if (!localePathResult.detectedLocale && !middleware) {\n          addRequestMeta(req, 'locale', defaultLocale)\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n      }\n\n      parsedUrl.pathname = pathname\n      addRequestMeta(req, 'isNextDataReq', true)\n\n      return false\n    }\n\n  protected handleNextImageRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallRenderRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected handleCatchallMiddlewareRequest: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = () => false\n\n  protected getRouteMatchers(): RouteMatcherManager {\n    // Create a new manifest loader that get's the manifests from the server.\n    const manifestLoader = new ServerManifestLoader((name) => {\n      switch (name) {\n        case PAGES_MANIFEST:\n          return this.getPagesManifest() ?? null\n        case APP_PATHS_MANIFEST:\n          return this.getAppPathsManifest() ?? null\n        default:\n          return null\n      }\n    })\n\n    // Configure the matchers and handlers.\n    const matchers: RouteMatcherManager = new DefaultRouteMatcherManager()\n\n    // Match pages under `pages/`.\n    matchers.push(\n      new PagesRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // Match api routes under `pages/api/`.\n    matchers.push(\n      new PagesAPIRouteMatcherProvider(\n        this.distDir,\n        manifestLoader,\n        this.i18nProvider\n      )\n    )\n\n    // If the app directory is enabled, then add the app matchers and handlers.\n    if (this.enabledDirectories.app) {\n      // Match app pages under `app/`.\n      matchers.push(\n        new AppPageRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n      matchers.push(\n        new AppRouteRouteMatcherProvider(this.distDir, manifestLoader)\n      )\n    }\n\n    return matchers\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    const [err, req, ctx] = args\n\n    if (this.instrumentation) {\n      try {\n        await this.instrumentation.onRequestError?.(\n          err,\n          {\n            path: req.url || '',\n            method: req.method || 'GET',\n            // Normalize middleware headers and other server request headers\n            headers:\n              req instanceof NextRequestHint\n                ? Object.fromEntries(req.headers.entries())\n                : req.headers,\n          },\n          ctx\n        )\n      } catch (handlerErr) {\n        // Log the soft error and continue, since errors can thrown from react stream handler\n        console.error('Error in instrumentation.onRequestError:', handlerErr)\n      }\n    }\n  }\n\n  public logError(err: Error): void {\n    if (this.quiet) return\n    Log.error(err)\n  }\n\n  public async handleRequest(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    await this.prepare()\n    const method = req.method.toUpperCase()\n\n    const tracer = getTracer()\n    return tracer.withPropagatedContext(req.headers, () => {\n      return tracer.trace(\n        BaseServerSpan.handleRequest,\n        {\n          spanName: `${method} ${req.url}`,\n          kind: SpanKind.SERVER,\n          attributes: {\n            'http.method': method,\n            'http.target': req.url,\n          },\n        },\n        async (span) =>\n          this.handleRequestImpl(req, res, parsedUrl).finally(() => {\n            if (!span) return\n\n            const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n            span.setAttributes({\n              'http.status_code': res.statusCode,\n              'next.rsc': isRSCRequest,\n            })\n\n            if (res.statusCode && res.statusCode >= 500) {\n              // For 5xx status codes: SHOULD be set to 'Error' span status.\n              // x-ref: https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n              })\n              // For span status 'Error', SHOULD set 'error.type' attribute.\n              span.setAttribute('error.type', res.statusCode.toString())\n            }\n\n            const rootSpanAttributes = tracer.getRootSpanAttributes()\n            // We were unable to get attributes, probably OTEL is not enabled\n            if (!rootSpanAttributes) return\n\n            if (\n              rootSpanAttributes.get('next.span_type') !==\n              BaseServerSpan.handleRequest\n            ) {\n              console.warn(\n                `Unexpected root span type '${rootSpanAttributes.get(\n                  'next.span_type'\n                )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n              )\n              return\n            }\n\n            const route = rootSpanAttributes.get('next.route')\n            if (route) {\n              const name = isRSCRequest\n                ? `RSC ${method} ${route}`\n                : `${method} ${route}`\n\n              span.setAttributes({\n                'next.route': route,\n                'http.route': route,\n                'next.span_name': name,\n              })\n              span.updateName(name)\n            } else {\n              span.updateName(\n                isRSCRequest\n                  ? `RSC ${method} ${req.url}`\n                  : `${method} ${req.url}`\n              )\n            }\n          })\n      )\n    })\n  }\n\n  private async handleRequestImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery\n  ): Promise<void> {\n    try {\n      // Wait for the matchers to be ready.\n      await this.matchers.waitTillReady()\n\n      // ensure cookies set in middleware are merged and\n      // not overridden by API routes/getServerSideProps\n      patchSetHeaderWithCookieSupport(\n        req,\n        isNodeNextResponse(res) ? res.originalResponse : res\n      )\n\n      const urlParts = (req.url || '').split('?', 1)\n      const urlNoQuery = urlParts[0]\n\n      // this normalizes repeated slashes in the path e.g. hello//world ->\n      // hello/world or backslashes to forward slashes, this does not\n      // handle trailing slash as that is handled the same as a next.config.js\n      // redirect\n      if (urlNoQuery?.match(/(\\\\|\\/\\/)/)) {\n        const cleanUrl = normalizeRepeatedSlashes(req.url!)\n        res.redirect(cleanUrl, 308).body(cleanUrl).send()\n        return\n      }\n\n      // Parse url if parsedUrl not provided\n      if (!parsedUrl || typeof parsedUrl !== 'object') {\n        if (!req.url) {\n          throw new Error('Invariant: url can not be undefined')\n        }\n\n        parsedUrl = parseUrl(req.url!, true)\n      }\n\n      if (!parsedUrl.pathname) {\n        throw new Error(\"Invariant: pathname can't be empty\")\n      }\n\n      // Parse the querystring ourselves if the user doesn't handle querystring parsing\n      if (typeof parsedUrl.query === 'string') {\n        parsedUrl.query = Object.fromEntries(\n          new URLSearchParams(parsedUrl.query)\n        )\n      }\n\n      // Update the `x-forwarded-*` headers.\n      const { originalRequest = null } = isNodeNextRequest(req) ? req : {}\n      const xForwardedProto = originalRequest?.headers['x-forwarded-proto']\n      const isHttps = xForwardedProto\n        ? xForwardedProto === 'https'\n        : !!(originalRequest?.socket as TLSSocket)?.encrypted\n\n      req.headers['x-forwarded-host'] ??= req.headers['host'] ?? this.hostname\n      req.headers['x-forwarded-port'] ??= this.port\n        ? this.port.toString()\n        : isHttps\n          ? '443'\n          : '80'\n      req.headers['x-forwarded-proto'] ??= isHttps ? 'https' : 'http'\n      req.headers['x-forwarded-for'] ??= originalRequest?.socket?.remoteAddress\n\n      // This should be done before any normalization of the pathname happens as\n      // it captures the initial URL.\n      this.attachRequestMeta(req, parsedUrl)\n\n      let finished = await this.handleRSCRequest(req, res, parsedUrl)\n      if (finished) return\n\n      const domainLocale = this.i18nProvider?.detectDomainLocale(\n        getHostname(parsedUrl, req.headers)\n      )\n\n      const defaultLocale =\n        domainLocale?.defaultLocale || this.nextConfig.i18n?.defaultLocale\n      addRequestMeta(req, 'defaultLocale', defaultLocale)\n\n      const url = parseUrlUtil(req.url.replace(/^\\/+/, '/'))\n      const pathnameInfo = getNextPathnameInfo(url.pathname, {\n        nextConfig: this.nextConfig,\n        i18nProvider: this.i18nProvider,\n      })\n      url.pathname = pathnameInfo.pathname\n\n      if (pathnameInfo.basePath) {\n        req.url = removePathPrefix(req.url!, this.nextConfig.basePath)\n      }\n\n      const useMatchedPathHeader =\n        this.minimalMode && typeof req.headers[MATCHED_PATH_HEADER] === 'string'\n\n      // TODO: merge handling with invokePath\n      if (useMatchedPathHeader) {\n        try {\n          if (this.enabledDirectories.app) {\n            // ensure /index path is normalized for prerender\n            // in minimal mode\n            if (req.url.match(/^\\/index($|\\?)/)) {\n              req.url = req.url.replace(/^\\/index/, '/')\n            }\n            parsedUrl.pathname =\n              parsedUrl.pathname === '/index' ? '/' : parsedUrl.pathname\n          }\n\n          // x-matched-path is the source of truth, it tells what page\n          // should be rendered because we don't process rewrites in minimalMode\n          let { pathname: matchedPath } = new URL(\n            fixMojibake(req.headers[MATCHED_PATH_HEADER] as string),\n            'http://localhost'\n          )\n\n          let { pathname: urlPathname } = new URL(req.url, 'http://localhost')\n\n          // For ISR the URL is normalized to the prerenderPath so if\n          // it's a data request the URL path will be the data URL,\n          // basePath is already stripped by this point\n          if (this.normalizers.data?.match(urlPathname)) {\n            addRequestMeta(req, 'isNextDataReq', true)\n          }\n          // In minimal mode, if PPR is enabled, then we should check to see if\n          // the request should be a resume request.\n          else if (\n            this.isAppPPREnabled &&\n            this.minimalMode &&\n            req.headers[NEXT_RESUME_HEADER] === '1' &&\n            req.method === 'POST'\n          ) {\n            // Decode the postponed state from the request body, it will come as\n            // an array of buffers, so collect them and then concat them to form\n            // the string.\n            const body: Array<Buffer> = []\n            for await (const chunk of req.body) {\n              body.push(chunk)\n            }\n            const postponed = Buffer.concat(body).toString('utf8')\n\n            addRequestMeta(req, 'postponed', postponed)\n          }\n\n          matchedPath = this.normalize(matchedPath)\n          const normalizedUrlPath = this.stripNextDataPath(urlPathname)\n\n          matchedPath = denormalizePagePath(matchedPath)\n\n          // Perform locale detection and normalization.\n          const localeAnalysisResult = this.i18nProvider?.analyze(matchedPath, {\n            defaultLocale,\n          })\n\n          // The locale result will be defined even if the locale was not\n          // detected for the request because it will be inferred from the\n          // default locale.\n          if (localeAnalysisResult) {\n            addRequestMeta(req, 'locale', localeAnalysisResult.detectedLocale)\n\n            // If the detected locale was inferred from the default locale, we\n            // need to modify the metadata on the request to indicate that.\n            if (localeAnalysisResult.inferredFromDefault) {\n              addRequestMeta(req, 'localeInferredFromDefault', true)\n            } else {\n              removeRequestMeta(req, 'localeInferredFromDefault')\n            }\n          }\n\n          let srcPathname = matchedPath\n          let pageIsDynamic = isDynamicRoute(srcPathname)\n          let paramsResult: {\n            params: ParsedUrlQuery | false\n            hasValidParams: boolean\n          } = {\n            params: false,\n            hasValidParams: false,\n          }\n\n          if (!pageIsDynamic) {\n            const match = await this.matchers.match(srcPathname, {\n              i18n: localeAnalysisResult,\n            })\n\n            // Update the source pathname to the matched page's pathname.\n            if (match) {\n              srcPathname = match.definition.pathname\n\n              // The page is dynamic if the params are defined. We know at this\n              // stage that the matched path is not a static page if the params\n              // were parsed from the matched path header.\n              if (typeof match.params !== 'undefined') {\n                pageIsDynamic = true\n                paramsResult.params = match.params\n                paramsResult.hasValidParams = true\n              }\n            }\n          }\n\n          // The rest of this function can't handle i18n properly, so ensure we\n          // restore the pathname with the locale information stripped from it\n          // now that we're done matching if we're using i18n.\n          if (localeAnalysisResult) {\n            matchedPath = localeAnalysisResult.pathname\n          }\n\n          const utils = getServerUtils({\n            pageIsDynamic,\n            page: srcPathname,\n            i18n: this.nextConfig.i18n,\n            basePath: this.nextConfig.basePath,\n            rewrites: this.getRoutesManifest()?.rewrites || {\n              beforeFiles: [],\n              afterFiles: [],\n              fallback: [],\n            },\n            caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes,\n          })\n\n          // Ensure parsedUrl.pathname includes locale before processing\n          // rewrites or they won't match correctly.\n          if (defaultLocale && !pathnameInfo.locale) {\n            parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`\n          }\n\n          // Store a copy of `parsedUrl.query` before calling handleRewrites.\n          // Since `handleRewrites` might add new queries to `parsedUrl.query`.\n          const originQueryParams = { ...parsedUrl.query }\n\n          const pathnameBeforeRewrite = parsedUrl.pathname\n          const rewriteParamKeys = Object.keys(\n            utils.handleRewrites(req, parsedUrl)\n          )\n\n          // Create a copy of the query params to avoid mutating the original\n          // object. This prevents any overlapping query params that have the\n          // same normalized key from causing issues.\n          const queryParams = { ...parsedUrl.query }\n          const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname\n\n          if (didRewrite && parsedUrl.pathname) {\n            addRequestMeta(req, 'rewroteURL', parsedUrl.pathname)\n          }\n\n          const routeParamKeys = new Set<string>()\n          for (const [key, value] of Object.entries(parsedUrl.query)) {\n            const normalizedKey = normalizeNextQueryParam(key)\n            if (!normalizedKey) continue\n\n            // Remove the prefixed key from the query params because we want\n            // to consume it for the dynamic route matcher.\n            delete parsedUrl.query[key]\n            routeParamKeys.add(normalizedKey)\n\n            if (typeof value === 'undefined') continue\n\n            queryParams[normalizedKey] = Array.isArray(value)\n              ? value.map((v) => decodeQueryPathParameter(v))\n              : decodeQueryPathParameter(value)\n          }\n\n          // interpolate dynamic params and normalize URL if needed\n          if (pageIsDynamic) {\n            let params: ParsedUrlQuery | false = {}\n\n            // If we don't already have valid params, try to parse them from\n            // the query params.\n            if (!paramsResult.hasValidParams) {\n              paramsResult = utils.normalizeDynamicRouteParams(\n                queryParams,\n                false\n              )\n            }\n\n            // for prerendered ISR paths we attempt parsing the route\n            // params from the URL directly as route-matches may not\n            // contain the correct values due to the filesystem path\n            // matching before the dynamic route has been matched\n            if (\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(normalizedUrlPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(normalizedUrlPath)\n\n              if (matcherParams) {\n                utils.normalizeDynamicRouteParams(matcherParams, false)\n                Object.assign(paramsResult.params, matcherParams)\n                paramsResult.hasValidParams = true\n              }\n            }\n\n            // if an action request is bypassing a prerender and we\n            // don't have the params in the URL since it was prerendered\n            // and matched during handle: 'filesystem' rather than dynamic route\n            // resolving we need to parse the params from the matched-path.\n            // Note: this is similar to above case but from match-path instead\n            // of from the request URL since a rewrite could cause that to not\n            // match the src pathname\n            if (\n              // we can have a collision with /index and a top-level /[slug]\n              matchedPath !== '/index' &&\n              !paramsResult.hasValidParams &&\n              !isDynamicRoute(matchedPath)\n            ) {\n              let matcherParams = utils.dynamicRouteMatcher?.(matchedPath)\n\n              if (matcherParams) {\n                const curParamsResult = utils.normalizeDynamicRouteParams(\n                  matcherParams,\n                  false\n                )\n\n                if (curParamsResult.hasValidParams) {\n                  Object.assign(params, matcherParams)\n                  paramsResult = curParamsResult\n                }\n              }\n            }\n\n            if (paramsResult.hasValidParams) {\n              params = paramsResult.params\n            }\n\n            const routeMatchesHeader = req.headers['x-now-route-matches']\n            if (\n              typeof routeMatchesHeader === 'string' &&\n              routeMatchesHeader &&\n              isDynamicRoute(matchedPath) &&\n              !paramsResult.hasValidParams\n            ) {\n              const routeMatches =\n                utils.getParamsFromRouteMatches(routeMatchesHeader)\n\n              if (routeMatches) {\n                paramsResult = utils.normalizeDynamicRouteParams(\n                  routeMatches,\n                  true\n                )\n\n                if (paramsResult.hasValidParams) {\n                  params = paramsResult.params\n                }\n              }\n            }\n\n            // Try to parse the params from the query if we couldn't parse them\n            // from the route matches but ignore missing optional params.\n            if (!paramsResult.hasValidParams) {\n              paramsResult = utils.normalizeDynamicRouteParams(\n                queryParams,\n                true\n              )\n\n              if (paramsResult.hasValidParams) {\n                params = paramsResult.params\n              }\n            }\n\n            // If the pathname being requested is the same as the source\n            // pathname, and we don't have valid params, we want to use the\n            // default route matches.\n            if (\n              utils.defaultRouteMatches &&\n              normalizedUrlPath === srcPathname &&\n              !paramsResult.hasValidParams\n            ) {\n              params = utils.defaultRouteMatches\n\n              // If the route matches header is an empty string, we want to\n              // render a fallback shell. This is because we know this came from\n              // a prerender (it has the header) but it's values were filtered\n              // out (because the allowQuery was empty). If it was undefined\n              // then we know that the request is hitting the lambda directly.\n              if (routeMatchesHeader === '') {\n                addRequestMeta(req, 'renderFallbackShell', true)\n              }\n            }\n\n            if (params) {\n              matchedPath = utils.interpolateDynamicPath(srcPathname, params)\n              req.url = utils.interpolateDynamicPath(req.url!, params)\n\n              // If the request is for a segment prefetch, we need to update the\n              // segment prefetch request path to include the interpolated\n              // params.\n              let segmentPrefetchRSCRequest = getRequestMeta(\n                req,\n                'segmentPrefetchRSCRequest'\n              )\n              if (\n                segmentPrefetchRSCRequest &&\n                isDynamicRoute(segmentPrefetchRSCRequest, false)\n              ) {\n                segmentPrefetchRSCRequest = utils.interpolateDynamicPath(\n                  segmentPrefetchRSCRequest,\n                  params\n                )\n\n                req.headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] =\n                  segmentPrefetchRSCRequest\n                addRequestMeta(\n                  req,\n                  'segmentPrefetchRSCRequest',\n                  segmentPrefetchRSCRequest\n                )\n              }\n            }\n          }\n\n          if (pageIsDynamic || didRewrite) {\n            utils.normalizeCdnUrl(req, [\n              ...rewriteParamKeys,\n              ...Object.keys(utils.defaultRouteRegex?.groups || {}),\n            ])\n          }\n          // Remove the route `params` keys from `parsedUrl.query` if they are\n          // not in the original query params.\n          // If it's used in both route `params` and query `searchParams`, it should be kept.\n          for (const key of routeParamKeys) {\n            if (!(key in originQueryParams)) {\n              delete parsedUrl.query[key]\n            }\n          }\n          parsedUrl.pathname = matchedPath\n          url.pathname = parsedUrl.pathname\n          finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n          if (finished) return\n        } catch (err) {\n          if (err instanceof DecodeError || err instanceof NormalizeError) {\n            res.statusCode = 400\n            return this.renderError(null, req, res, '/_error', {})\n          }\n          throw err\n        }\n      }\n\n      addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale))\n\n      if (pathnameInfo.locale) {\n        req.url = formatUrl(url)\n        addRequestMeta(req, 'didStripLocale', true)\n      }\n\n      // If we aren't in minimal mode or there is no locale in the query\n      // string, add the locale to the query string.\n      if (!this.minimalMode || !getRequestMeta(req, 'locale')) {\n        // If the locale is in the pathname, add it to the query string.\n        if (pathnameInfo.locale) {\n          addRequestMeta(req, 'locale', pathnameInfo.locale)\n        }\n        // If the default locale is available, add it to the query string and\n        // mark it as inferred rather than implicit.\n        else if (defaultLocale) {\n          addRequestMeta(req, 'locale', defaultLocale)\n          addRequestMeta(req, 'localeInferredFromDefault', true)\n        }\n      }\n\n      // set incremental cache to request meta so it can\n      // be passed down for edge functions and the fetch disk\n      // cache can be leveraged locally\n      if (\n        !(this.serverOptions as any).webServerConfig &&\n        !getRequestMeta(req, 'incrementalCache')\n      ) {\n        const incrementalCache = await this.getIncrementalCache({\n          requestHeaders: Object.assign({}, req.headers),\n        })\n\n        incrementalCache.resetRequestCache()\n        addRequestMeta(req, 'incrementalCache', incrementalCache)\n        // This is needed for pages router to leverage unstable_cache\n        // TODO: re-work this handling to not use global and use a AsyncStore\n        ;(globalThis as any).__incrementalCache = incrementalCache\n      }\n\n      const cacheHandlers = getCacheHandlers()\n\n      if (cacheHandlers) {\n        await Promise.all(\n          [...cacheHandlers].map(async (cacheHandler) => {\n            if ('refreshTags' in cacheHandler) {\n              // Note: cacheHandler.refreshTags() is called lazily before the\n              // first cache entry is retrieved. It allows us to skip the\n              // refresh request if no caches are read at all.\n            } else {\n              const previouslyRevalidatedTags = getPreviouslyRevalidatedTags(\n                req.headers,\n                this.getPrerenderManifest().preview.previewModeId\n              )\n\n              await cacheHandler.receiveExpiredTags(\n                ...previouslyRevalidatedTags\n              )\n            }\n          })\n        )\n      }\n\n      // set server components HMR cache to request meta so it can be passed\n      // down for edge functions\n      if (!getRequestMeta(req, 'serverComponentsHmrCache')) {\n        addRequestMeta(\n          req,\n          'serverComponentsHmrCache',\n          this.getServerComponentsHmrCache()\n        )\n      }\n\n      // when invokePath is specified we can short short circuit resolving\n      // we only honor this header if we are inside of a render worker to\n      // prevent external users coercing the routing path\n      const invokePath = getRequestMeta(req, 'invokePath')\n      const useInvokePath = !useMatchedPathHeader && invokePath\n\n      if (useInvokePath) {\n        const invokeStatus = getRequestMeta(req, 'invokeStatus')\n        if (invokeStatus) {\n          const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n          if (invokeQuery) {\n            Object.assign(parsedUrl.query, invokeQuery)\n          }\n\n          res.statusCode = invokeStatus\n          let err: Error | null = getRequestMeta(req, 'invokeError') || null\n\n          return this.renderError(err, req, res, '/_error', parsedUrl.query)\n        }\n\n        const parsedMatchedPath = new URL(invokePath || '/', 'http://n')\n        const invokePathnameInfo = getNextPathnameInfo(\n          parsedMatchedPath.pathname,\n          {\n            nextConfig: this.nextConfig,\n            parseData: false,\n          }\n        )\n\n        if (invokePathnameInfo.locale) {\n          addRequestMeta(req, 'locale', invokePathnameInfo.locale)\n        }\n\n        if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n          parsedUrl.pathname = parsedMatchedPath.pathname\n          addRequestMeta(req, 'rewroteURL', invokePathnameInfo.pathname)\n        }\n        const normalizeResult = normalizeLocalePath(\n          removePathPrefix(parsedUrl.pathname, this.nextConfig.basePath || ''),\n          this.nextConfig.i18n?.locales\n        )\n\n        if (normalizeResult.detectedLocale) {\n          addRequestMeta(req, 'locale', normalizeResult.detectedLocale)\n        }\n        parsedUrl.pathname = normalizeResult.pathname\n\n        for (const key of Object.keys(parsedUrl.query)) {\n          delete parsedUrl.query[key]\n        }\n        const invokeQuery = getRequestMeta(req, 'invokeQuery')\n\n        if (invokeQuery) {\n          Object.assign(parsedUrl.query, invokeQuery)\n        }\n\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        await this.handleCatchallRenderRequest(req, res, parsedUrl)\n        return\n      }\n\n      if (getRequestMeta(req, 'middlewareInvoke')) {\n        finished = await this.normalizeAndAttachMetadata(req, res, parsedUrl)\n        if (finished) return\n\n        finished = await this.handleCatchallMiddlewareRequest(\n          req,\n          res,\n          parsedUrl\n        )\n        if (finished) return\n\n        const err = new Error()\n        ;(err as any).result = {\n          response: new Response(null, {\n            headers: {\n              'x-middleware-next': '1',\n            },\n          }),\n        }\n        ;(err as any).bubble = true\n        throw err\n      }\n\n      // This wasn't a request via the matched path or the invoke path, so\n      // prepare for a legacy run by removing the base path.\n\n      // ensure we strip the basePath when not using an invoke header\n      if (!useMatchedPathHeader && pathnameInfo.basePath) {\n        parsedUrl.pathname = removePathPrefix(\n          parsedUrl.pathname,\n          pathnameInfo.basePath\n        )\n      }\n\n      res.statusCode = 200\n      return await this.run(req, res, parsedUrl)\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      if (\n        (err && typeof err === 'object' && err.code === 'ERR_INVALID_URL') ||\n        err instanceof DecodeError ||\n        err instanceof NormalizeError\n      ) {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n\n      if (\n        this.minimalMode ||\n        this.renderOpts.dev ||\n        (isBubbledError(err) && err.bubble)\n      ) {\n        throw err\n      }\n      this.logError(getProperError(err))\n      res.statusCode = 500\n      res.body('Internal Server Error').send()\n    }\n  }\n\n  /**\n   * Normalizes a pathname without attaching any metadata from any matched\n   * normalizer.\n   *\n   * @param pathname the pathname to normalize\n   * @returns the normalized pathname\n   */\n  private normalize = (pathname: string) => {\n    const normalizers: Array<PathnameNormalizer> = []\n\n    if (this.normalizers.data) {\n      normalizers.push(this.normalizers.data)\n    }\n\n    // We have to put the segment prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.segmentPrefetchRSC) {\n      normalizers.push(this.normalizers.segmentPrefetchRSC)\n    }\n\n    // We have to put the prefetch normalizer before the RSC normalizer\n    // because the RSC normalizer will match the prefetch RSC routes too.\n    if (this.normalizers.prefetchRSC) {\n      normalizers.push(this.normalizers.prefetchRSC)\n    }\n\n    if (this.normalizers.rsc) {\n      normalizers.push(this.normalizers.rsc)\n    }\n\n    for (const normalizer of normalizers) {\n      if (!normalizer.match(pathname)) continue\n\n      return normalizer.normalize(pathname, true)\n    }\n\n    return pathname\n  }\n\n  private normalizeAndAttachMetadata: RouteHandler<\n    ServerRequest,\n    ServerResponse\n  > = async (req, res, url) => {\n    let finished = await this.handleNextImageRequest(req, res, url)\n    if (finished) return true\n\n    if (this.enabledDirectories.pages) {\n      finished = await this.handleNextDataRequest(req, res, url)\n      if (finished) return true\n    }\n\n    return false\n  }\n\n  /**\n   * @internal - this method is internal to Next.js and should not be used directly by end-users\n   */\n  public getRequestHandlerWithMetadata(\n    meta: RequestMeta\n  ): BaseRequestHandler<ServerRequest, ServerResponse> {\n    const handler = this.getRequestHandler()\n    return (req, res, parsedUrl) => {\n      setRequestMeta(req, meta)\n      return handler(req, res, parsedUrl)\n    }\n  }\n\n  public getRequestHandler(): BaseRequestHandler<\n    ServerRequest,\n    ServerResponse\n  > {\n    return this.handleRequest.bind(this)\n  }\n\n  protected abstract handleUpgrade(\n    req: ServerRequest,\n    socket: any,\n    head?: any\n  ): Promise<void>\n\n  public setAssetPrefix(prefix?: string): void {\n    this.nextConfig.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  protected prepared: boolean = false\n  protected preparedPromise: Promise<void> | null = null\n  /**\n   * Runs async initialization of server.\n   * It is idempotent, won't fire underlying initialization more than once.\n   */\n  public async prepare(): Promise<void> {\n    if (this.prepared) return\n\n    // Get instrumentation module\n    if (!this.instrumentation) {\n      this.instrumentation = await this.loadInstrumentationModule()\n    }\n    if (this.preparedPromise === null) {\n      this.preparedPromise = this.prepareImpl().then(() => {\n        this.prepared = true\n        this.preparedPromise = null\n      })\n    }\n    return this.preparedPromise\n  }\n  protected async prepareImpl(): Promise<void> {}\n  protected async loadInstrumentationModule(): Promise<any> {}\n\n  public async close(): Promise<void> {}\n\n  protected getAppPathRoutes(): Record<string, string[]> {\n    const appPathRoutes: Record<string, string[]> = {}\n\n    Object.keys(this.appPathsManifest || {}).forEach((entry) => {\n      const normalizedPath = normalizeAppPath(entry)\n      if (!appPathRoutes[normalizedPath]) {\n        appPathRoutes[normalizedPath] = []\n      }\n      appPathRoutes[normalizedPath].push(entry)\n    })\n    return appPathRoutes\n  }\n\n  protected async run(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.run, async () =>\n      this.runImpl(req, res, parsedUrl)\n    )\n  }\n\n  private async runImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    await this.handleCatchallRenderRequest(req, res, parsedUrl)\n  }\n\n  private async pipe(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.pipe, async () =>\n      this.pipeImpl(fn, partialContext)\n    )\n  }\n\n  private async pipeImpl(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<void> {\n    const ua = partialContext.req.headers['user-agent'] || ''\n\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        // `renderOpts.botType` is accumulated in `this.renderImpl()`\n        supportsDynamicResponse: !this.renderOpts.botType,\n        serveStreamingMetadata: shouldServeStreamingMetadata(\n          ua,\n          this.nextConfig.htmlLimitedBots\n        ),\n      },\n    }\n\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return\n    }\n    const { req, res } = ctx\n    const originalStatus = res.statusCode\n    const { body } = payload\n    let { cacheControl } = payload\n    if (!res.sent) {\n      const { generateEtags, poweredByHeader, dev } = this.renderOpts\n\n      // In dev, we should not cache pages for any reason.\n      if (dev) {\n        res.setHeader('Cache-Control', 'no-store, must-revalidate')\n        cacheControl = undefined\n      }\n\n      if (cacheControl && cacheControl.expire === undefined) {\n        cacheControl.expire = this.nextConfig.expireTime\n      }\n\n      await this.sendRenderResult(req, res, {\n        result: body,\n        generateEtags,\n        poweredByHeader,\n        cacheControl,\n      })\n      res.statusCode = originalStatus\n    }\n  }\n\n  private async getStaticHTML(\n    fn: (\n      ctx: RequestContext<ServerRequest, ServerResponse>\n    ) => Promise<ResponsePayload | null>,\n    partialContext: Omit<\n      RequestContext<ServerRequest, ServerResponse>,\n      'renderOpts'\n    >\n  ): Promise<string | null> {\n    const ctx: RequestContext<ServerRequest, ServerResponse> = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicResponse: false,\n      },\n    }\n    const payload = await fn(ctx)\n    if (payload === null) {\n      return null\n    }\n    return payload.body.toUnchunkedString()\n  }\n\n  public async render(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.render, async () =>\n      this.renderImpl(req, res, pathname, query, parsedUrl, internalRender)\n    )\n  }\n\n  protected getWaitUntil(): WaitUntil | undefined {\n    const builtinRequestContext = getBuiltinRequestContext()\n    if (builtinRequestContext) {\n      // the platform provided a request context.\n      // use the `waitUntil` from there, whether actually present or not --\n      // if not present, `after` will error.\n\n      // NOTE: if we're in an edge runtime sandbox, this context will be used to forward the outer waitUntil.\n      return builtinRequestContext.waitUntil\n    }\n\n    if (this.minimalMode) {\n      // we're built for a serverless environment, and `waitUntil` is not available,\n      // but using a noop would likely lead to incorrect behavior,\n      // because we have no way of keeping the invocation alive.\n      // return nothing, and `after` will error if used.\n      //\n      // NOTE: for edge functions, `NextWebServer` always runs in minimal mode.\n      //\n      // NOTE: if we're in an edge runtime sandbox, waitUntil will be passed in using \"@next/request-context\",\n      // so we won't get here.\n      return undefined\n    }\n\n    return this.getInternalWaitUntil()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil | undefined {\n    return undefined\n  }\n\n  private async renderImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    parsedUrl?: NextUrlWithParsedQuery,\n    internalRender = false\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.serverOptions.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    const ua = req.headers['user-agent'] || ''\n    this.renderOpts.botType = getBotType(ua)\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !internalRender &&\n      !this.minimalMode &&\n      !getRequestMeta(req, 'isNextDataReq') &&\n      (req.url?.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && req.url!.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    return this.pipe((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  protected async getStaticPaths({\n    pathname,\n  }: {\n    pathname: string\n    urlPathname: string\n    requestHeaders: import('./lib/incremental-cache').IncrementalCache['requestHeaders']\n    page: string\n    isAppPath: boolean\n  }): Promise<{\n    staticPaths?: string[]\n    prerenderedRoutes?: PrerenderedRoute[]\n    fallbackMode?: FallbackMode\n  }> {\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField =\n      this.getPrerenderManifest().dynamicRoutes[pathname]?.fallback\n\n    return {\n      // `staticPaths` is intentionally set to `undefined` as it should've\n      // been caught when checking disk data.\n      staticPaths: undefined,\n      fallbackMode: parseFallbackField(fallbackField),\n    }\n  }\n\n  private async renderToResponseWithComponents(\n    requestContext: RequestContext<ServerRequest, ServerResponse>,\n    findComponentsResult: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponseWithComponents,\n      async () =>\n        this.renderToResponseWithComponentsImpl(\n          requestContext,\n          findComponentsResult\n        )\n    )\n  }\n\n  protected pathCouldBeIntercepted(resolvedPathname: string): boolean {\n    return (\n      isInterceptionRouteAppPath(resolvedPathname) ||\n      this.interceptionRoutePatterns.some((regexp) => {\n        return regexp.test(resolvedPathname)\n      })\n    )\n  }\n\n  protected setVaryHeader(\n    req: ServerRequest,\n    res: ServerResponse,\n    isAppPath: boolean,\n    resolvedPathname: string\n  ): void {\n    const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE_HEADER}, ${NEXT_ROUTER_PREFETCH_HEADER}, ${NEXT_ROUTER_SEGMENT_PREFETCH_HEADER}`\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    let addedNextUrlToVary = false\n\n    if (isAppPath && this.pathCouldBeIntercepted(resolvedPathname)) {\n      // Interception route responses can vary based on the `Next-URL` header.\n      // We use the Vary header to signal this behavior to the client to properly cache the response.\n      res.appendHeader('vary', `${baseVaryHeader}, ${NEXT_URL}`)\n      addedNextUrlToVary = true\n    } else if (isAppPath || isRSCRequest) {\n      // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n      // We also set this header for pages to avoid caching issues when navigating between pages and app.\n      res.appendHeader('vary', baseVaryHeader)\n    }\n\n    if (!addedNextUrlToVary) {\n      // Remove `Next-URL` from the request headers we determined it wasn't necessary to include in the Vary header.\n      // This is to avoid any dependency on the `Next-URL` header being present when preparing the response.\n      delete req.headers[NEXT_URL]\n    }\n  }\n\n  private async renderToResponseWithComponentsImpl(\n    {\n      req,\n      res,\n      pathname,\n      renderOpts: opts,\n    }: RequestContext<ServerRequest, ServerResponse>,\n    { components, query }: FindComponentsResult\n  ): Promise<ResponsePayload | null> {\n    if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n      pathname = '/404'\n    }\n    const isErrorPathname = pathname === '/_error'\n    const is404Page =\n      pathname === '/404' || (isErrorPathname && res.statusCode === 404)\n    const is500Page =\n      pathname === '/500' || (isErrorPathname && res.statusCode === 500)\n    const isAppPath = components.isAppPath === true\n\n    const hasServerProps = !!components.getServerSideProps\n    const isPossibleServerAction = getIsPossibleServerAction(req)\n    let isSSG = !!components.getStaticProps\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? false\n\n    // Not all CDNs respect the Vary header when caching. We must assume that\n    // only the URL is used to vary the responses. The Next client computes a\n    // hash of the header values and sends it as a search param. Before\n    // responding to a request, we must verify that the hash matches the\n    // expected value. Neglecting to do this properly can lead to cache\n    // poisoning attacks on certain CDNs.\n    if (\n      !this.minimalMode &&\n      this.nextConfig.experimental.validateRSCRequestHeaders &&\n      isRSCRequest\n    ) {\n      const headers = req.headers\n\n      const prefetchHeaderValue = headers[NEXT_ROUTER_PREFETCH_HEADER]\n      const routerPrefetch =\n        prefetchHeaderValue !== undefined\n          ? // We only recognize '1' and '2'. Strip all other values here.\n            prefetchHeaderValue === '1' || prefetchHeaderValue === '2'\n            ? prefetchHeaderValue\n            : undefined\n          : // For runtime prefetches, we always perform a dynamic request,\n            // so we don't expect the header to be stripped by an intermediate layer.\n            // This should only happen for static prefetches, so we only handle those here.\n            getRequestMeta(req, 'isPrefetchRSCRequest')\n            ? '1'\n            : undefined\n\n      const segmentPrefetchRSCRequest =\n        headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] ||\n        getRequestMeta(req, 'segmentPrefetchRSCRequest')\n\n      const expectedHash = computeCacheBustingSearchParam(\n        routerPrefetch,\n        segmentPrefetchRSCRequest,\n        headers[NEXT_ROUTER_STATE_TREE_HEADER],\n        headers[NEXT_URL]\n      )\n      const actualHash =\n        getRequestMeta(req, 'cacheBustingSearchParam') ??\n        new URL(req.url || '', 'http://localhost').searchParams.get(\n          NEXT_RSC_UNION_QUERY\n        )\n\n      if (expectedHash !== actualHash) {\n        // The hash sent by the client does not match the expected value.\n        // Redirect to the URL with the correct cache-busting search param.\n        // This prevents cache poisoning attacks on CDNs that don't respect Vary headers.\n        // Note: When no headers are present, expectedHash is empty string and client\n        // must send `_rsc` param, otherwise actualHash is null and hash check fails.\n        const url = new URL(req.url || '', 'http://localhost')\n        setCacheBustingSearchParamWithHash(url, expectedHash)\n        res.statusCode = 307\n        res.setHeader('location', `${url.pathname}${url.search}`)\n        res.body('').send()\n        return null\n      }\n    }\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = getRequestMeta(req, 'rewroteURL') || urlPathname\n\n    this.setVaryHeader(req, res, isAppPath, resolvedUrlPathname)\n\n    let staticPaths: string[] | undefined\n    let hasFallback = false\n\n    const prerenderManifest = this.getPrerenderManifest()\n\n    if (\n      hasFallback ||\n      staticPaths?.includes(resolvedUrlPathname) ||\n      // this signals revalidation in deploy environments\n      // TODO: make this more generic\n      req.headers['x-now-route-matches']\n    ) {\n      isSSG = true\n    } else if (!this.renderOpts.dev) {\n      isSSG ||= !!prerenderManifest.routes[toRoute(pathname)]\n    }\n\n    // Toggle whether or not this is a Data request\n    const isNextDataRequest =\n      !!(\n        getRequestMeta(req, 'isNextDataReq') ||\n        (req.headers['x-nextjs-data'] &&\n          (this.serverOptions as any).webServerConfig)\n      ) &&\n      (isSSG || hasServerProps)\n\n    // when we are handling a middleware prefetch and it doesn't\n    // resolve to a static data route we bail early to avoid\n    // unexpected SSR invocations\n    if (\n      !isSSG &&\n      req.headers['x-middleware-prefetch'] &&\n      !(is404Page || pathname === '/_error')\n    ) {\n      res.setHeader(MATCHED_PATH_HEADER, pathname)\n      res.setHeader('x-middleware-skip', '1')\n      res.setHeader(\n        'cache-control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n      res.body('{}').send()\n      return null\n    }\n\n    // normalize req.url for SSG paths as it is not exposed\n    // to getStaticProps and the asPath should not expose /_next/data\n    if (\n      isSSG &&\n      this.minimalMode &&\n      req.headers[MATCHED_PATH_HEADER] &&\n      req.url.startsWith('/_next/data')\n    ) {\n      req.url = this.stripNextDataPath(req.url)\n    }\n\n    const locale = getRequestMeta(req, 'locale')\n\n    if (\n      !!req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200)\n    ) {\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${locale ? `/${locale}` : ''}${pathname}`\n      )\n    }\n\n    let routeModule: RouteModule | undefined\n    if (components.routeModule) {\n      routeModule = components.routeModule\n    }\n\n    /**\n     * If the route being rendered is an app page, and the ppr feature has been\n     * enabled, then the given route _could_ support PPR.\n     */\n    const couldSupportPPR: boolean =\n      this.isAppPPREnabled &&\n      typeof routeModule !== 'undefined' &&\n      isAppPageRouteModule(routeModule)\n\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =\n      process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' &&\n      typeof query.__nextppronly !== 'undefined' &&\n      couldSupportPPR\n\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled: boolean =\n      couldSupportPPR &&\n      ((\n        prerenderManifest.routes[pathname] ??\n        prerenderManifest.dynamicRoutes[pathname]\n      )?.renderingMode === 'PARTIALLY_STATIC' ||\n        // Ideally we'd want to check the appConfig to see if this page has PPR\n        // enabled or not, but that would require plumbing the appConfig through\n        // to the server during development. We assume that the page supports it\n        // but only during development.\n        (hasDebugStaticShellQuery &&\n          (this.renderOpts.dev === true ||\n            this.experimentalTestProxy === true)))\n\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled\n      ? getRequestMeta(req, 'postponed')\n      : undefined\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isNextDataRequest && !isRSCRequest) {\n      res.statusCode = 404\n    }\n\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.slice(1), 10)\n    }\n\n    if (\n      // Server actions can use non-GET/HEAD methods.\n      !isPossibleServerAction &&\n      // Resume can use non-GET/HEAD methods.\n      !minimalPostponed &&\n      !is404Page &&\n      !is500Page &&\n      pathname !== '/_error' &&\n      req.method !== 'HEAD' &&\n      req.method !== 'GET' &&\n      (typeof components.Component === 'string' || isSSG)\n    ) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      res.body('Method Not Allowed').send()\n      return null\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return {\n        body: RenderResult.fromStatic(\n          components.Component,\n          HTML_CONTENT_TYPE_HEADER\n        ),\n      }\n    }\n\n    // Ensure that if the `amp` query parameter is falsy that we remove it from\n    // the query object. This ensures it won't be found by the `in` operator.\n    if ('amp' in query && !query.amp) delete query.amp\n\n    if (opts.supportsDynamicResponse === true) {\n      const ua = req.headers['user-agent'] || ''\n      const isBotRequest = isBot(ua)\n      const isSupportedDocument =\n        typeof components.Document?.getInitialProps !== 'function' ||\n        // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n        NEXT_BUILTIN_DOCUMENT in components.Document\n\n      // Disable dynamic HTML in cases that we know it won't be generated,\n      // so that we can continue generating a cache key when possible.\n      // TODO-APP: should the first render for a dynamic app path\n      // be static so we can collect revalidate and populate the\n      // cache if there are no dynamic data requirements\n      opts.supportsDynamicResponse =\n        !isSSG && !isBotRequest && !query.amp && isSupportedDocument\n    }\n\n    // In development, we always want to generate dynamic HTML.\n    if (!isNextDataRequest && isAppPath && opts.dev) {\n      opts.supportsDynamicResponse = true\n    }\n\n    if (isSSG && this.minimalMode && req.headers[MATCHED_PATH_HEADER]) {\n      // the url value is already correct when the matched-path header is set\n      resolvedUrlPathname = urlPathname\n    }\n\n    urlPathname = removeTrailingSlash(urlPathname)\n    resolvedUrlPathname = removeTrailingSlash(resolvedUrlPathname)\n    if (this.localeNormalizer) {\n      resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname)\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isNextDataRequest) {\n      resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname)\n      urlPathname = this.stripNextDataPath(urlPathname)\n    }\n\n    // use existing incrementalCache instance if available\n    const incrementalCache: import('./lib/incremental-cache').IncrementalCache =\n      await this.getIncrementalCache({\n        requestHeaders: Object.assign({}, req.headers),\n      })\n\n    // TODO: investigate, this is not safe across multiple concurrent requests\n    incrementalCache.resetRequestCache()\n\n    if (\n      routeModule?.isDev &&\n      isDynamicRoute(pathname) &&\n      (components.getStaticPaths || isAppPath)\n    ) {\n      const pathsResults = await this.getStaticPaths({\n        pathname,\n        urlPathname,\n        requestHeaders: req.headers,\n        page: components.page,\n        isAppPath,\n      })\n      if (isAppPath && this.nextConfig.experimental.cacheComponents) {\n        if (pathsResults.prerenderedRoutes?.length) {\n          let smallestFallbackRouteParams = null\n          for (const route of pathsResults.prerenderedRoutes) {\n            const fallbackRouteParams = route.fallbackRouteParams\n            if (!fallbackRouteParams || fallbackRouteParams.length === 0) {\n              // There are no fallback route params so we don't need to continue\n              smallestFallbackRouteParams = null\n              break\n            }\n            if (\n              smallestFallbackRouteParams === null ||\n              fallbackRouteParams.length < smallestFallbackRouteParams.length\n            ) {\n              smallestFallbackRouteParams = fallbackRouteParams\n            }\n          }\n          if (smallestFallbackRouteParams) {\n            const devValidatingFallbackParams = new Map<string, string>(\n              smallestFallbackRouteParams.map((v) => [v, ''])\n            )\n            addRequestMeta(\n              req,\n              'devValidatingFallbackParams',\n              devValidatingFallbackParams\n            )\n          }\n        }\n      }\n    }\n\n    // An OPTIONS request to a page handler is invalid.\n    if (\n      req.method === 'OPTIONS' &&\n      !is404Page &&\n      (!routeModule || !isAppRouteRouteModule(routeModule))\n    ) {\n      await sendResponse(req, res, new Response(null, { status: 400 }))\n      return null\n    }\n\n    const request = isNodeNextRequest(req) ? req.originalRequest : req\n    const response = isNodeNextResponse(res) ? res.originalResponse : res\n\n    const parsedInitUrl = parseUrl(getRequestMeta(req, 'initURL') || req.url)\n    let initPathname = parsedInitUrl.pathname || '/'\n\n    for (const normalizer of [\n      this.normalizers.segmentPrefetchRSC,\n      this.normalizers.prefetchRSC,\n      this.normalizers.rsc,\n    ]) {\n      if (normalizer?.match(initPathname)) {\n        initPathname = normalizer.normalize(initPathname)\n      }\n    }\n\n    // On minimal mode, the request url of dynamic route can be a\n    // literal dynamic route ('/[slug]') instead of actual URL, so overwriting to initPathname\n    // will transform back the resolved url to the dynamic route pathname.\n    if (!(this.minimalMode && isErrorPathname)) {\n      request.url = `${initPathname}${parsedInitUrl.search || ''}`\n    }\n\n    // propagate the request context for dev\n    setRequestMeta(request, getRequestMeta(req))\n    addRequestMeta(request, 'distDir', this.distDir)\n    addRequestMeta(request, 'query', query)\n    addRequestMeta(request, 'params', opts.params)\n    addRequestMeta(request, 'ampValidator', this.renderOpts.ampValidator)\n    addRequestMeta(request, 'minimalMode', this.minimalMode)\n\n    if (opts.err) {\n      addRequestMeta(request, 'invokeError', opts.err)\n    }\n\n    const handler: (\n      req: ServerRequest | IncomingMessage,\n      res: ServerResponse | HTTPServerResponse,\n      ctx: {\n        waitUntil: ReturnType<Server['getWaitUntil']>\n      }\n    ) => Promise<void> = components.ComponentMod.handler\n\n    const maybeDevRequest =\n      // we need to capture fetch metrics when they are set\n      // and can't wait for handler to resolve as the fetch\n      // metrics are logged on response close which happens\n      // before handler resolves\n      process.env.NODE_ENV === 'development'\n        ? new Proxy(request, {\n            get(target: any, prop) {\n              if (typeof target[prop] === 'function') {\n                return target[prop].bind(target)\n              }\n              return target[prop]\n            },\n            set(target: any, prop, value) {\n              if (prop === 'fetchMetrics') {\n                ;(req as any).fetchMetrics = value\n              }\n              target[prop] = value\n              return true\n            },\n          })\n        : request\n\n    await handler(maybeDevRequest, response, {\n      waitUntil: this.getWaitUntil(),\n    })\n\n    // response is handled fully in handler\n    return null\n  }\n\n  private stripNextDataPath(path: string, stripLocale = true) {\n    if (path.includes(this.buildId)) {\n      const splitPath = path.substring(\n        path.indexOf(this.buildId) + this.buildId.length\n      )\n\n      path = denormalizePagePath(splitPath.replace(/\\.json$/, ''))\n    }\n\n    if (this.localeNormalizer && stripLocale) {\n      return this.localeNormalizer.normalize(path)\n    }\n    return path\n  }\n\n  // map the route to the actual bundle name\n  protected getOriginalAppPaths(route: string) {\n    if (this.enabledDirectories.app) {\n      const originalAppPath = this.appPathRoutes?.[route]\n\n      if (!originalAppPath) {\n        return null\n      }\n\n      return originalAppPath\n    }\n    return null\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const { query, pathname } = ctx\n\n    const appPaths = this.getOriginalAppPaths(pathname)\n    const isAppPath = Array.isArray(appPaths)\n\n    let page = pathname\n    if (isAppPath) {\n      // the last item in the array is the root page, if there are parallel routes\n      page = appPaths[appPaths.length - 1]\n    }\n\n    const result = await this.findPageComponents({\n      locale: getRequestMeta(ctx.req, 'locale'),\n      page,\n      query,\n      params: ctx.renderOpts.params || {},\n      isAppPath,\n      sriEnabled: !!this.nextConfig.experimental.sri?.algorithm,\n      appPaths,\n      // Ensuring for loading page component routes is done via the matcher.\n      shouldEnsure: false,\n    })\n    if (result) {\n      getTracer().setRootSpanAttribute('next.route', pathname)\n      try {\n        return await this.renderToResponseWithComponents(ctx, result)\n      } catch (err) {\n        const isNoFallbackError = err instanceof NoFallbackError\n\n        if (!isNoFallbackError || (isNoFallbackError && bubbleNoFallback)) {\n          throw err\n        }\n      }\n    }\n    return false\n  }\n\n  private async renderToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(\n      BaseServerSpan.renderToResponse,\n      {\n        spanName: `rendering page`,\n        attributes: {\n          'next.route': ctx.pathname,\n        },\n      },\n      async () => {\n        return this.renderToResponseImpl(ctx)\n      }\n    )\n  }\n\n  protected abstract getMiddleware(): Promise<MiddlewareRoutingItem | undefined>\n  protected abstract getFallbackErrorComponents(\n    url?: string\n  ): Promise<LoadComponentsReturnType | null>\n  protected abstract getRoutesManifest(): NormalizedRouteManifest | undefined\n\n  private async renderToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>\n  ): Promise<ResponsePayload | null> {\n    const { req, res, query, pathname } = ctx\n    let page = pathname\n    const bubbleNoFallback =\n      getRequestMeta(ctx.req, 'bubbleNoFallback') ?? false\n\n    if (\n      !this.minimalMode &&\n      this.nextConfig.experimental.validateRSCRequestHeaders\n    ) {\n      addRequestMeta(\n        ctx.req,\n        'cacheBustingSearchParam',\n        query[NEXT_RSC_UNION_QUERY]\n      )\n    }\n    delete query[NEXT_RSC_UNION_QUERY]\n\n    const options: MatchOptions = {\n      i18n: this.i18nProvider?.fromRequest(req, pathname),\n    }\n\n    try {\n      for await (const match of this.matchers.matchAll(pathname, options)) {\n        // when a specific invoke-output is meant to be matched\n        // ensure a prior dynamic route/page doesn't take priority\n        const invokeOutput = getRequestMeta(ctx.req, 'invokeOutput')\n        if (\n          !this.minimalMode &&\n          typeof invokeOutput === 'string' &&\n          isDynamicRoute(invokeOutput || '') &&\n          invokeOutput !== match.definition.pathname\n        ) {\n          continue\n        }\n\n        const result = await this.renderPageComponent(\n          {\n            ...ctx,\n            pathname: match.definition.pathname,\n            renderOpts: {\n              ...ctx.renderOpts,\n              params: match.params,\n            },\n          },\n          bubbleNoFallback\n        )\n        if (result !== false) return result\n      }\n\n      // currently edge functions aren't receiving the x-matched-path\n      // header so we need to fallback to matching the current page\n      // when we weren't able to match via dynamic route to handle\n      // the rewrite case\n      // @ts-expect-error extended in child class web-server\n      if (this.serverOptions.webServerConfig) {\n        // @ts-expect-error extended in child class web-server\n        ctx.pathname = this.serverOptions.webServerConfig.page\n        const result = await this.renderPageComponent(ctx, bubbleNoFallback)\n        if (result !== false) return result\n      }\n    } catch (error) {\n      const err = getProperError(error)\n\n      if (error instanceof MissingStaticPage) {\n        console.error(\n          'Invariant: failed to load static page',\n          JSON.stringify(\n            {\n              page,\n              url: ctx.req.url,\n              matchedPath: ctx.req.headers[MATCHED_PATH_HEADER],\n              initUrl: getRequestMeta(ctx.req, 'initURL'),\n              didRewrite: !!getRequestMeta(ctx.req, 'rewroteURL'),\n              rewroteUrl: getRequestMeta(ctx.req, 'rewroteURL'),\n            },\n            null,\n            2\n          )\n        )\n        throw err\n      }\n\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err\n      }\n      if (err instanceof DecodeError || err instanceof NormalizeError) {\n        res.statusCode = 400\n        return await this.renderErrorToResponse(ctx, err)\n      }\n\n      res.statusCode = 500\n\n      // if pages/500 is present we still need to trigger\n      // /_error `getInitialProps` to allow reporting error\n      if (await this.hasPage('/500')) {\n        addRequestMeta(ctx.req, 'customErrorRender', true)\n        await this.renderErrorToResponse(ctx, err)\n        removeRequestMeta(ctx.req, 'customErrorRender')\n      }\n\n      const isWrappedError = err instanceof WrappedBuildError\n\n      if (!isWrappedError) {\n        if (this.minimalMode || this.renderOpts.dev) {\n          if (isError(err)) err.page = page\n          throw err\n        }\n        this.logError(getProperError(err))\n      }\n      const response = await this.renderErrorToResponse(\n        ctx,\n        isWrappedError ? (err as WrappedBuildError).innerError : err\n      )\n      return response\n    }\n\n    const middleware = await this.getMiddleware()\n    if (\n      middleware &&\n      !!ctx.req.headers['x-nextjs-data'] &&\n      (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)\n    ) {\n      const locale = getRequestMeta(req, 'locale')\n\n      res.setHeader(\n        'x-nextjs-matched-path',\n        `${locale ? `/${locale}` : ''}${pathname}`\n      )\n      res.statusCode = 200\n      res.setHeader('Content-Type', JSON_CONTENT_TYPE_HEADER)\n      res.body('{}')\n      res.send()\n      return null\n    }\n\n    res.statusCode = 404\n    return this.renderErrorToResponse(ctx, null)\n  }\n\n  public async renderToHTML(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return getTracer().trace(BaseServerSpan.renderToHTML, async () => {\n      return this.renderToHTMLImpl(req, res, pathname, query)\n    })\n  }\n\n  private async renderToHTMLImpl(\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    return getTracer().trace(BaseServerSpan.renderError, async () => {\n      return this.renderErrorImpl(err, req, res, pathname, query, setHeaders)\n    })\n  }\n\n  private async renderErrorImpl(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: NextParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'private, no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n\n    return this.pipe(\n      async (ctx) => {\n        const response = await this.renderErrorToResponse(ctx, err)\n        if (this.minimalMode && res.statusCode === 500) {\n          throw err\n        }\n        return response\n      },\n      { req, res, pathname, query }\n    )\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    Log.warn(\n      `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`\n    )\n  })\n\n  private async renderErrorToResponse(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    return getTracer().trace(BaseServerSpan.renderErrorToResponse, async () => {\n      return this.renderErrorToResponseImpl(ctx, err)\n    })\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<ServerRequest, ServerResponse>,\n    err: Error | null\n  ): Promise<ResponsePayload | null> {\n    // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n    // Since favicon.ico is automatically requested by the browser.\n    if (this.renderOpts.dev && ctx.pathname === '/favicon.ico') {\n      return {\n        body: RenderResult.EMPTY,\n      }\n    }\n    const { res, query } = ctx\n\n    try {\n      let result: null | FindComponentsResult = null\n\n      const is404 = res.statusCode === 404\n      let using404Page = false\n\n      if (is404) {\n        if (this.enabledDirectories.app) {\n          // Use the not-found entry in app directory\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n            query,\n            params: {},\n            isAppPath: true,\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n\n        if (!result && (await this.hasPage('/404'))) {\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: '/404',\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 404 route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n          using404Page = result !== null\n        }\n      }\n      let statusPage = `/${res.statusCode}`\n\n      if (\n        !getRequestMeta(ctx.req, 'customErrorRender') &&\n        !result &&\n        STATIC_STATUS_PAGES.includes(statusPage)\n      ) {\n        // skip ensuring /500 in dev mode as it isn't used and the\n        // dev overlay is used instead\n        if (statusPage !== '/500' || !this.renderOpts.dev) {\n          result = await this.findPageComponents({\n            locale: getRequestMeta(ctx.req, 'locale'),\n            page: statusPage,\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 500\n            // route.\n            shouldEnsure: true,\n            url: ctx.req.url,\n          })\n        }\n      }\n\n      if (!result) {\n        result = await this.findPageComponents({\n          locale: getRequestMeta(ctx.req, 'locale'),\n          page: '/_error',\n          query,\n          params: {},\n          isAppPath: false,\n          // Ensuring can't be done here because you never \"match\" an error\n          // route.\n          shouldEnsure: true,\n          url: ctx.req.url,\n        })\n        statusPage = '/_error'\n      }\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        !using404Page &&\n        (await this.hasPage('/_error')) &&\n        !(await this.hasPage('/404'))\n      ) {\n        this.customErrorNo404Warn()\n      }\n\n      if (!result) {\n        // this can occur when a project directory has been moved/deleted\n        // which is handled in the parent process in development\n        if (this.renderOpts.dev) {\n          return {\n            // wait for dev-server to restart before refreshing\n            body: RenderResult.fromStatic(\n              `\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`,\n              HTML_CONTENT_TYPE_HEADER\n            ),\n          }\n        }\n\n        throw new WrappedBuildError(\n          new Error('missing required error components')\n        )\n      }\n\n      // If the page has a route module, use it for the new match. If it doesn't\n      // have a route module, remove the match.\n      if (result.components.routeModule) {\n        addRequestMeta(ctx.req, 'match', {\n          definition: result.components.routeModule.definition,\n          params: undefined,\n        })\n      } else {\n        removeRequestMeta(ctx.req, 'match')\n      }\n\n      try {\n        return await this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: statusPage,\n            renderOpts: {\n              ...ctx.renderOpts,\n              err,\n            },\n          },\n          result\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (error) {\n      const renderToHtmlError = getProperError(error)\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError)\n      }\n      res.statusCode = 500\n      const fallbackComponents = await this.getFallbackErrorComponents(\n        ctx.req.url\n      )\n\n      if (fallbackComponents) {\n        // There was an error, so use it's definition from the route module\n        // to add the match to the request.\n        addRequestMeta(ctx.req, 'match', {\n          definition: fallbackComponents.routeModule!.definition,\n          params: undefined,\n        })\n\n        return this.renderToResponseWithComponents(\n          {\n            ...ctx,\n            pathname: '/_error',\n            renderOpts: {\n              ...ctx.renderOpts,\n              // We render `renderToHtmlError` here because `err` is\n              // already captured in the stacktrace.\n              err: isWrappedError\n                ? renderToHtmlError.innerError\n                : renderToHtmlError,\n            },\n          },\n          {\n            query,\n            components: fallbackComponents,\n          }\n        )\n      }\n      return {\n        body: RenderResult.fromStatic('Internal Server Error', 'text/plain'),\n      }\n    }\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: ServerRequest,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    return this.getStaticHTML((ctx) => this.renderErrorToResponse(ctx, err), {\n      req,\n      res,\n      pathname,\n      query,\n    })\n  }\n\n  public async render404(\n    req: ServerRequest,\n    res: ServerResponse,\n    parsedUrl?: Pick<NextUrlWithParsedQuery, 'pathname' | 'query'>,\n    setHeaders = true\n  ): Promise<void> {\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(req.url!, true)\n\n    // Ensure the locales are provided on the request meta.\n    if (this.nextConfig.i18n) {\n      if (!getRequestMeta(req, 'locale')) {\n        addRequestMeta(req, 'locale', this.nextConfig.i18n.defaultLocale)\n      }\n      addRequestMeta(req, 'defaultLocale', this.nextConfig.i18n.defaultLocale)\n    }\n\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n}\n","import type { IncomingHttpHeaders } from 'node:http'\n\nimport { FLIGHT_HEADERS } from '../../client/components/app-router-headers'\n\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */\nexport function stripFlightHeaders(headers: IncomingHttpHeaders) {\n  for (const header of FLIGHT_HEADERS) {\n    delete headers[header]\n  }\n}\n","// Translate a pages asset path (relative from a common prefix) back into its logical route\n\nimport { isDynamicRoute } from './is-dynamic'\n\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getRouteFromAssetPath(\n  assetPath: string,\n  ext: string = ''\n): string {\n  assetPath = assetPath.replace(/\\\\/g, '/')\n  assetPath =\n    ext && assetPath.endsWith(ext) ? assetPath.slice(0, -ext.length) : assetPath\n  if (assetPath.startsWith('/index/') && !isDynamicRoute(assetPath)) {\n    assetPath = assetPath.slice(6)\n  } else if (assetPath === '/index') {\n    assetPath = '/'\n  }\n  return assetPath\n}\n","import { isIPv6 } from './is-ipv6'\n\n/**\n * Formats a hostname so that it is a valid host that can be fetched by wrapping\n * IPv6 hosts with brackets.\n * @param hostname\n * @returns\n */\nexport function formatHostname(hostname: string): string {\n  return isIPv6(hostname) ? `[${hostname}]` : hostname\n}\n","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, the options for\n * `experimental_ppr` will be ignored.\n */\n\nexport type ExperimentalPPRConfig = boolean | 'incremental'\n\n/**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */\nexport function checkIsAppPPREnabled(\n  config: ExperimentalPPRConfig | undefined\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental') return true\n\n  return false\n}\n\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */\nexport function checkIsRoutePPREnabled(\n  config: ExperimentalPPRConfig | undefined,\n  appConfig: {\n    experimental_ppr?: boolean\n  }\n): boolean {\n  // If the config is undefined, partial prerendering is disabled.\n  if (typeof config === 'undefined') return false\n\n  // If the config is a boolean, use it directly.\n  if (typeof config === 'boolean') return config\n\n  // If the config is a string, it must be 'incremental' to enable partial\n  // prerendering.\n  if (config === 'incremental' && appConfig.experimental_ppr === true) {\n    return true\n  }\n\n  return false\n}\n","import { getRequestMeta, type NextIncomingMessage } from '../request-meta'\n\ntype PatchableResponse = {\n  setHeader(key: string, value: string | string[]): PatchableResponse\n}\n\n/**\n * Ensure cookies set in middleware are merged and not overridden by API\n * routes/getServerSideProps.\n *\n * @param req Incoming request\n * @param res Outgoing response\n */\nexport function patchSetHeaderWithCookieSupport(\n  req: NextIncomingMessage,\n  res: PatchableResponse\n) {\n  const setHeader = res.setHeader.bind(res)\n  res.setHeader = (\n    name: string,\n    value: string | string[]\n  ): PatchableResponse => {\n    // When renders /_error after page is failed, it could attempt to set\n    // headers after headers.\n    if ('headersSent' in res && res.headersSent) {\n      return res\n    }\n\n    if (name.toLowerCase() === 'set-cookie') {\n      const middlewareValue = getRequestMeta(req, 'middlewareCookie')\n\n      if (\n        !middlewareValue ||\n        !Array.isArray(value) ||\n        !value.every((item, idx) => item === middlewareValue[idx])\n      ) {\n        value = [\n          // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n          ...new Set([\n            ...(middlewareValue || []),\n            ...(typeof value === 'string'\n              ? [value]\n              : Array.isArray(value)\n                ? value\n                : []),\n          ]),\n        ]\n      }\n    }\n\n    return setHeader(name, value)\n  }\n}\n","// x-matched-path header can be decoded incorrectly\n// and should only be utf8 characters so this fixes\n// incorrectly encoded values\nexport function fixMojibake(input: string): string {\n  // Convert each character's char code to a byte\n  const bytes = new Uint8Array(input.length)\n  for (let i = 0; i < input.length; i++) {\n    bytes[i] = input.charCodeAt(i)\n  }\n\n  // Decode the bytes as proper UTF-8\n  const decoder = new TextDecoder('utf-8')\n  return decoder.decode(bytes)\n}\n","import type {\n  FlightRouterState,\n  Segment,\n} from '../../../server/app-render/types'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../shared/lib/router/utils/interception-routes'\nimport type { Params } from '../../../server/request/params'\nimport {\n  isGroupSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\n\nconst removeLeadingSlash = (segment: string): string => {\n  return segment[0] === '/' ? segment.slice(1) : segment\n}\n\nconst segmentToPathname = (segment: Segment): string => {\n  if (typeof segment === 'string') {\n    // 'children' is not a valid path -- it's technically a parallel route that corresponds with the current segment's page\n    // if we don't skip it, then the computed pathname might be something like `/children` which doesn't make sense.\n    if (segment === 'children') return ''\n\n    return segment\n  }\n\n  return segment[1]\n}\n\nfunction normalizeSegments(segments: string[]): string {\n  return (\n    segments.reduce((acc, segment) => {\n      segment = removeLeadingSlash(segment)\n      if (segment === '' || isGroupSegment(segment)) {\n        return acc\n      }\n\n      return `${acc}/${segment}`\n    }, '') || '/'\n  )\n}\n\nexport function extractPathFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): string | undefined {\n  const segment = Array.isArray(flightRouterState[0])\n    ? flightRouterState[0][1]\n    : flightRouterState[0]\n\n  if (\n    segment === DEFAULT_SEGMENT_KEY ||\n    INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m))\n  )\n    return undefined\n\n  if (segment.startsWith(PAGE_SEGMENT_KEY)) return ''\n\n  const segments = [segmentToPathname(segment)]\n  const parallelRoutes = flightRouterState[1] ?? {}\n\n  const childrenPath = parallelRoutes.children\n    ? extractPathFromFlightRouterState(parallelRoutes.children)\n    : undefined\n\n  if (childrenPath !== undefined) {\n    segments.push(childrenPath)\n  } else {\n    for (const [key, value] of Object.entries(parallelRoutes)) {\n      if (key === 'children') continue\n\n      const childPath = extractPathFromFlightRouterState(value)\n\n      if (childPath !== undefined) {\n        segments.push(childPath)\n      }\n    }\n  }\n\n  return normalizeSegments(segments)\n}\n\nfunction computeChangedPathImpl(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const [segmentA, parallelRoutesA] = treeA\n  const [segmentB, parallelRoutesB] = treeB\n\n  const normalizedSegmentA = segmentToPathname(segmentA)\n  const normalizedSegmentB = segmentToPathname(segmentB)\n\n  if (\n    INTERCEPTION_ROUTE_MARKERS.some(\n      (m) =>\n        normalizedSegmentA.startsWith(m) || normalizedSegmentB.startsWith(m)\n    )\n  ) {\n    return ''\n  }\n\n  if (!matchSegment(segmentA, segmentB)) {\n    // once we find where the tree changed, we compute the rest of the path by traversing the tree\n    return extractPathFromFlightRouterState(treeB) ?? ''\n  }\n\n  for (const parallelRouterKey in parallelRoutesA) {\n    if (parallelRoutesB[parallelRouterKey]) {\n      const changedPath = computeChangedPathImpl(\n        parallelRoutesA[parallelRouterKey],\n        parallelRoutesB[parallelRouterKey]\n      )\n      if (changedPath !== null) {\n        return `${segmentToPathname(segmentB)}/${changedPath}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport function computeChangedPath(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const changedPath = computeChangedPathImpl(treeA, treeB)\n\n  if (changedPath == null || changedPath === '/') {\n    return changedPath\n  }\n\n  // lightweight normalization to remove route groups\n  return normalizeSegments(changedPath.split('/'))\n}\n\n/**\n * Recursively extracts dynamic parameters from FlightRouterState.\n */\nexport function getSelectedParams(\n  currentTree: FlightRouterState,\n  params: Params = {}\n): Params {\n  const parallelRoutes = currentTree[1]\n\n  for (const parallelRoute of Object.values(parallelRoutes)) {\n    const segment = parallelRoute[0]\n    const isDynamicParameter = Array.isArray(segment)\n    const segmentValue = isDynamicParameter ? segment[1] : segment\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) continue\n\n    // Ensure catchAll and optional catchall are turned into an array\n    const isCatchAll =\n      isDynamicParameter && (segment[2] === 'c' || segment[2] === 'oc')\n\n    if (isCatchAll) {\n      params[segment[0]] = segment[1].split('/')\n    } else if (isDynamicParameter) {\n      params[segment[0]] = segment[1]\n    }\n\n    params = getSelectedParams(parallelRoute, params)\n  }\n\n  return params\n}\n","import type { FlightRouterState } from './types'\nimport { flightRouterStateSchema } from './types'\nimport { assert } from 'next/dist/compiled/superstruct'\n\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[]\n): FlightRouterState\nexport function parseAndValidateFlightRouterState(\n  stateHeader: undefined\n): undefined\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[] | undefined\n): FlightRouterState | undefined\nexport function parseAndValidateFlightRouterState(\n  stateHeader: string | string[] | undefined\n): FlightRouterState | undefined {\n  if (typeof stateHeader === 'undefined') {\n    return undefined\n  }\n  if (Array.isArray(stateHeader)) {\n    throw new Error(\n      'Multiple router state headers were sent. This is not allowed.'\n    )\n  }\n\n  // We limit the size of the router state header to ~40kb. This is to prevent\n  // a malicious user from sending a very large header and slowing down the\n  // resolving of the router state.\n  // This is around 2,000 nested or parallel route segment states:\n  // '{\"children\":[\"\",{}]}'.length === 20.\n  if (stateHeader.length > 20 * 2000) {\n    throw new Error('The router state header was too large.')\n  }\n\n  try {\n    const state = JSON.parse(decodeURIComponent(stateHeader))\n    assert(state, flightRouterStateSchema)\n    return state\n  } catch {\n    throw new Error('The router state header was sent but could not be parsed.')\n  }\n}\n","import type { UrlWithParsedQuery } from 'url'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\n\nconst DUMMY_ORIGIN = 'http://n'\n\nexport function isFullStringUrl(url: string) {\n  return /https?:\\/\\//.test(url)\n}\n\nexport function parseUrl(url: string): URL | undefined {\n  let parsed: URL | undefined = undefined\n  try {\n    parsed = new URL(url, DUMMY_ORIGIN)\n  } catch {}\n  return parsed\n}\n\nexport function parseReqUrl(url: string): UrlWithParsedQuery | undefined {\n  const parsedUrl: URL | undefined = parseUrl(url)\n\n  if (!parsedUrl) {\n    return\n  }\n\n  const query: Record<string, string | string[]> = {}\n\n  for (const key of parsedUrl.searchParams.keys()) {\n    const values = parsedUrl.searchParams.getAll(key)\n    query[key] = values.length > 1 ? values : values[0]\n  }\n\n  const legacyUrl: UrlWithParsedQuery = {\n    query,\n    hash: parsedUrl.hash,\n    search: parsedUrl.search,\n    path: parsedUrl.pathname,\n    pathname: parsedUrl.pathname,\n    href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n    host: '',\n    hostname: '',\n    auth: '',\n    protocol: '',\n    slashes: null,\n    port: '',\n  }\n  return legacyUrl\n}\n\nexport function stripNextRscUnionQuery(relativeUrl: string): string {\n  const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN)\n  urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  return urlInstance.pathname + urlInstance.search\n}\n","import {\n  getBotType,\n  HTML_LIMITED_BOT_UA_RE_STRING,\n} from '../../shared/lib/router/utils/is-bot'\nimport type { BaseNextRequest } from '../base-http'\n\nexport function shouldServeStreamingMetadata(\n  userAgent: string,\n  htmlLimitedBots: string | undefined\n): boolean {\n  const blockingMetadataUARegex = new RegExp(\n    htmlLimitedBots || HTML_LIMITED_BOT_UA_RE_STRING,\n    'i'\n  )\n  // Only block metadata for HTML-limited bots\n  if (userAgent && blockingMetadataUARegex.test(userAgent)) {\n    return false\n  }\n  return true\n}\n\n// When the request UA is a html-limited bot, we should do a dynamic render.\n// In this case, postpone state is not sent.\nexport function isHtmlBotRequest(req: {\n  headers: BaseNextRequest['headers']\n}): boolean {\n  const ua = req.headers['user-agent'] || ''\n  const botType = getBotType(ua)\n\n  return botType === 'html'\n}\n","import { BLOCKED_PAGES } from '../shared/lib/constants'\n\nexport function isBlockedPage(page: string): boolean {\n  return BLOCKED_PAGES.includes(page)\n}\n\nexport function cleanAmpPath(pathname: string): string {\n  if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, '?')\n  }\n  if (pathname.match(/&amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/&amp=(y|yes|true|1)/, '')\n  }\n  pathname = pathname.replace(/\\?$/, '')\n  return pathname\n}\n\ntype AnyFunc<T> = (this: T, ...args: any) => any\nexport function debounce<T, F extends AnyFunc<T>>(\n  fn: F,\n  ms: number,\n  maxWait = Infinity\n) {\n  let timeoutId: undefined | NodeJS.Timeout\n\n  // The time the debouncing function was first called during this debounce queue.\n  let startTime = 0\n  // The time the debouncing function was last called.\n  let lastCall = 0\n\n  // The arguments and this context of the last call to the debouncing function.\n  let args: Parameters<F>, context: T\n\n  // A helper used to that either invokes the debounced function, or\n  // reschedules the timer if a more recent call was made.\n  function run() {\n    const now = Date.now()\n    const diff = lastCall + ms - now\n\n    // If the diff is non-positive, then we've waited at least `ms`\n    // milliseconds since the last call. Or if we've waited for longer than the\n    // max wait time, we must call the debounced function.\n    if (diff <= 0 || startTime + maxWait >= now) {\n      // It's important to clear the timeout id before invoking the debounced\n      // function, in case the function calls the debouncing function again.\n      timeoutId = undefined\n      fn.apply(context, args)\n    } else {\n      // Else, a new call was made after the original timer was scheduled. We\n      // didn't clear the timeout (doing so is very slow), so now we need to\n      // reschedule the timer for the time difference.\n      timeoutId = setTimeout(run, diff)\n    }\n  }\n\n  return function (this: T, ...passedArgs: Parameters<F>) {\n    // The arguments and this context of the most recent call are saved so the\n    // debounced function can be invoked with them later.\n    args = passedArgs\n    context = this\n\n    // Instead of constantly clearing and scheduling a timer, we record the\n    // time of the last call. If a second call comes in before the timer fires,\n    // then we'll reschedule in the run function. Doing this is considerably\n    // faster.\n    lastCall = Date.now()\n\n    // Only schedule a new timer if we're not currently waiting.\n    if (timeoutId === undefined) {\n      startTime = lastCall\n      timeoutId = setTimeout(run, ms)\n    }\n  }\n}\n","/**\n * Describes the different fallback modes that a given page can have.\n */\nexport const enum FallbackMode {\n  /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */\n  BLOCKING_STATIC_RENDER = 'BLOCKING_STATIC_RENDER',\n\n  /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */\n  NOT_FOUND = 'NOT_FOUND',\n}\n\n/**\n * The fallback value returned from the `getStaticPaths` function.\n */\nexport type GetStaticPathsFallback = boolean | 'blocking'\n\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */\nexport function parseFallbackField(\n  fallbackField: string | boolean | null | undefined\n): FallbackMode | undefined {\n  if (typeof fallbackField === 'string') {\n    return FallbackMode.PRERENDER\n  } else if (fallbackField === null) {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else if (fallbackField === false) {\n    return FallbackMode.NOT_FOUND\n  } else if (fallbackField === undefined) {\n    return undefined\n  } else {\n    throw new Error(\n      `Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`\n    )\n  }\n}\n\nexport function fallbackModeToFallbackField(\n  fallback: FallbackMode,\n  page: string | undefined\n): string | false | null {\n  switch (fallback) {\n    case FallbackMode.BLOCKING_STATIC_RENDER:\n      return null\n    case FallbackMode.NOT_FOUND:\n      return false\n    case FallbackMode.PRERENDER:\n      if (!page) {\n        throw new Error(\n          `Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`\n        )\n      }\n\n      return page\n    default:\n      throw new Error(`Invalid fallback mode: ${fallback}`)\n  }\n}\n\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */\nexport function parseStaticPathsResult(\n  result: GetStaticPathsFallback\n): FallbackMode {\n  if (result === true) {\n    return FallbackMode.PRERENDER\n  } else if (result === 'blocking') {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else {\n    return FallbackMode.NOT_FOUND\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { BaseNextRequest } from '../base-http'\nimport type { NextRequest } from '../web/exports'\nimport { ACTION_HEADER } from '../../client/components/app-router-headers'\n\nexport function getServerActionRequestMetadata(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): {\n  actionId: string | null\n  isURLEncodedAction: boolean\n  isMultipartAction: boolean\n  isFetchAction: boolean\n  isPossibleServerAction: boolean\n} {\n  let actionId: string | null\n  let contentType: string | null\n\n  if (req.headers instanceof Headers) {\n    actionId = req.headers.get(ACTION_HEADER) ?? null\n    contentType = req.headers.get('content-type')\n  } else {\n    actionId = (req.headers[ACTION_HEADER] as string) ?? null\n    contentType = req.headers['content-type'] ?? null\n  }\n\n  const isURLEncodedAction = Boolean(\n    req.method === 'POST' && contentType === 'application/x-www-form-urlencoded'\n  )\n  const isMultipartAction = Boolean(\n    req.method === 'POST' && contentType?.startsWith('multipart/form-data')\n  )\n  const isFetchAction = Boolean(\n    actionId !== undefined &&\n      typeof actionId === 'string' &&\n      req.method === 'POST'\n  )\n\n  const isPossibleServerAction = Boolean(\n    isFetchAction || isURLEncodedAction || isMultipartAction\n  )\n\n  return {\n    actionId,\n    isURLEncodedAction,\n    isMultipartAction,\n    isFetchAction,\n    isPossibleServerAction,\n  }\n}\n\nexport function getIsPossibleServerAction(\n  req: IncomingMessage | BaseNextRequest | NextRequest\n): boolean {\n  return getServerActionRequestMetadata(req).isPossibleServerAction\n}\n","import type { AppRouteRouteModule } from './app-route/module'\nimport type { AppPageRouteModule } from './app-page/module'\nimport type { PagesRouteModule } from './pages/module'\nimport type { PagesAPIRouteModule } from './pages-api/module'\n\nimport type { RouteModule } from './route-module'\n\nimport { RouteKind } from '../route-kind'\n\nexport function isAppRouteRouteModule(\n  routeModule: RouteModule\n): routeModule is AppRouteRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_ROUTE\n}\n\nexport function isAppPageRouteModule(\n  routeModule: RouteModule\n): routeModule is AppPageRouteModule {\n  return routeModule.definition.kind === RouteKind.APP_PAGE\n}\n\nexport function isPagesRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES\n}\n\nexport function isPagesAPIRouteModule(\n  routeModule: RouteModule\n): routeModule is PagesAPIRouteModule {\n  return routeModule.definition.kind === RouteKind.PAGES_API\n}\n","import path from 'path'\nimport {\n  PAGES_MANIFEST,\n  SERVER_DIRECTORY,\n  APP_PATHS_MANIFEST,\n} from '../shared/lib/constants'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { PageNotFoundError, MissingStaticPage } from '../shared/lib/utils'\nimport { LRUCache } from '../server/lib/lru-cache'\nimport { loadManifest } from './load-manifest.external'\nimport { promises } from 'fs'\n\nconst isDev = process.env.NODE_ENV === 'development'\nconst pagePathCache = !isDev ? new LRUCache<string | null>(1000) : null\n\nexport function getMaybePagePath(\n  page: string,\n  distDir: string,\n  locales: readonly string[] | undefined,\n  isAppPath: boolean\n): string | null {\n  const cacheKey = `${page}:${distDir}:${locales}:${isAppPath}`\n\n  let pagePath = pagePathCache?.get(cacheKey)\n\n  // If we have a cached path, we can return it directly.\n  if (pagePath) return pagePath\n\n  const serverBuildPath = path.join(distDir, SERVER_DIRECTORY)\n  let appPathsManifest: undefined | PagesManifest\n\n  if (isAppPath) {\n    appPathsManifest = loadManifest(\n      path.join(serverBuildPath, APP_PATHS_MANIFEST),\n      !isDev\n    ) as PagesManifest\n  }\n  const pagesManifest = loadManifest(\n    path.join(serverBuildPath, PAGES_MANIFEST),\n    !isDev\n  ) as PagesManifest\n\n  try {\n    page = denormalizePagePath(normalizePagePath(page))\n  } catch (err) {\n    console.error(err)\n    throw new PageNotFoundError(page)\n  }\n\n  const checkManifest = (manifest: PagesManifest) => {\n    let curPath = manifest[page]\n\n    if (!manifest[curPath] && locales) {\n      const manifestNoLocales: typeof pagesManifest = {}\n\n      for (const key of Object.keys(manifest)) {\n        manifestNoLocales[normalizeLocalePath(key, locales).pathname] =\n          pagesManifest[key]\n      }\n      curPath = manifestNoLocales[page]\n    }\n    return curPath\n  }\n\n  if (appPathsManifest) {\n    pagePath = checkManifest(appPathsManifest)\n  }\n\n  if (!pagePath) {\n    pagePath = checkManifest(pagesManifest)\n  }\n\n  if (!pagePath) {\n    pagePathCache?.set(cacheKey, null)\n    return null\n  }\n\n  pagePath = path.join(serverBuildPath, pagePath)\n\n  pagePathCache?.set(cacheKey, pagePath)\n  return pagePath\n}\n\nexport function getPagePath(\n  page: string,\n  distDir: string,\n  locales: string[] | undefined,\n  isAppPath: boolean\n): string {\n  const pagePath = getMaybePagePath(page, distDir, locales, isAppPath)\n\n  if (!pagePath) {\n    throw new PageNotFoundError(page)\n  }\n\n  return pagePath\n}\n\nexport async function requirePage(\n  page: string,\n  distDir: string,\n  isAppPath: boolean\n): Promise<any> {\n  const pagePath = getPagePath(page, distDir, undefined, isAppPath)\n  if (pagePath.endsWith('.html')) {\n    return promises.readFile(pagePath, 'utf8').catch((err) => {\n      throw new MissingStaticPage(page, err.message)\n    })\n  }\n\n  const mod = process.env.NEXT_MINIMAL\n    ? // @ts-ignore\n      __non_webpack_require__(pagePath)\n    : require(pagePath)\n  return mod\n}\n","export function interopDefault(mod: any) {\n  return mod.default || mod\n}\n","/**\n * Wait for a given number of milliseconds and then resolve.\n *\n * @param ms the number of milliseconds to wait\n */\nexport async function wait(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","import type {\n  AppType,\n  DocumentType,\n  NextComponentType,\n} from '../shared/lib/utils'\nimport type { ClientReferenceManifest } from '../build/webpack/plugins/flight-manifest-plugin'\nimport type {\n  PageConfig,\n  GetStaticPaths,\n  GetServerSideProps,\n  GetStaticProps,\n} from '../types'\nimport type { RouteModule } from './route-modules/route-module'\nimport type { BuildManifest } from './get-page-files'\nimport type { ActionManifest } from '../build/webpack/plugins/flight-client-entry-plugin'\n\nimport {\n  BUILD_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  CLIENT_REFERENCE_MANIFEST,\n  SERVER_REFERENCE_MANIFEST,\n  DYNAMIC_CSS_MANIFEST,\n  SUBRESOURCE_INTEGRITY_MANIFEST,\n} from '../shared/lib/constants'\nimport { join } from 'path'\nimport { requirePage } from './require'\nimport { interopDefault } from '../lib/interop-default'\nimport { getTracer } from './lib/trace/tracer'\nimport { LoadComponentsSpan } from './lib/trace/constants'\nimport { evalManifest, loadManifest } from './load-manifest.external'\nimport { wait } from '../lib/wait'\nimport { setReferenceManifestsSingleton } from './app-render/encryption-utils'\nimport { createServerModuleMap } from './app-render/action-utils'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { isStaticMetadataRoute } from '../lib/metadata/is-metadata-route'\n\nexport type ManifestItem = {\n  id: number | string\n  files: string[]\n}\n\nexport type ReactLoadableManifest = { [moduleId: string]: ManifestItem }\n/**\n * This manifest prevents removing server rendered <link> tags after client\n * navigation. This is only needed under `Pages dir && Production && Webpack`.\n * @see https://github.com/vercel/next.js/pull/72959\n */\nexport type DynamicCssManifest = string[]\n\n/**\n * A manifest entry type for the react-loadable-manifest.json.\n *\n * The whole manifest.json is a type of `Record<pathname, LoadableManifest>`\n * where pathname is a string-based key points to the path of the page contains\n * each dynamic imports.\n */\nexport interface LoadableManifest {\n  [k: string]: { id: string | number; files: string[] }\n}\n\nexport type LoadComponentsReturnType<NextModule = any> = {\n  Component: NextComponentType\n  pageConfig: PageConfig\n  buildManifest: DeepReadonly<BuildManifest>\n  subresourceIntegrityManifest?: DeepReadonly<Record<string, string>>\n  reactLoadableManifest: DeepReadonly<ReactLoadableManifest>\n  dynamicCssManifest?: DeepReadonly<DynamicCssManifest>\n  clientReferenceManifest?: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest?: any\n  Document: DocumentType\n  App: AppType\n  getStaticProps?: GetStaticProps\n  getStaticPaths?: GetStaticPaths\n  getServerSideProps?: GetServerSideProps\n  ComponentMod: NextModule\n  routeModule: RouteModule\n  isAppPath?: boolean\n  page: string\n  multiZoneDraftMode?: boolean\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function loadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return loadManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts, or return undefined.\n */\nexport async function tryLoadManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  try {\n    return await loadManifestWithRetries<T>(manifestPath, attempts)\n  } catch (err) {\n    return undefined\n  }\n}\n\n/**\n * Load manifest file with retries, defaults to 3 attempts.\n */\nexport async function evalManifestWithRetries<T extends object>(\n  manifestPath: string,\n  attempts = 3\n) {\n  while (true) {\n    try {\n      return evalManifest<T>(manifestPath)\n    } catch (err) {\n      attempts--\n      if (attempts <= 0) throw err\n\n      await wait(100)\n    }\n  }\n}\n\nasync function tryLoadClientReferenceManifest(\n  manifestPath: string,\n  entryName: string,\n  attempts?: number\n) {\n  try {\n    const context = await evalManifestWithRetries<{\n      __RSC_MANIFEST: { [key: string]: ClientReferenceManifest }\n    }>(manifestPath, attempts)\n    return context.__RSC_MANIFEST[entryName]\n  } catch (err) {\n    return undefined\n  }\n}\n\nasync function loadComponentsImpl<N = any>({\n  distDir,\n  page,\n  isAppPath,\n  isDev,\n  sriEnabled,\n}: {\n  distDir: string\n  page: string\n  isAppPath: boolean\n  isDev: boolean\n  sriEnabled: boolean\n}): Promise<LoadComponentsReturnType<N>> {\n  let DocumentMod = {}\n  let AppMod = {}\n  if (!isAppPath) {\n    ;[DocumentMod, AppMod] = await Promise.all([\n      requirePage('/_document', distDir, false),\n      requirePage('/_app', distDir, false),\n    ])\n  }\n\n  // In dev mode we retry loading a manifest file to handle a race condition\n  // that can occur while app and pages are compiling at the same time, and the\n  // build-manifest is still being written to disk while an app path is\n  // attempting to load.\n  const manifestLoadAttempts = isDev ? 3 : 1\n\n  let reactLoadableManifestPath\n  if (!process.env.TURBOPACK) {\n    reactLoadableManifestPath = join(distDir, REACT_LOADABLE_MANIFEST)\n  } else if (isAppPath) {\n    reactLoadableManifestPath = join(\n      distDir,\n      'server',\n      'app',\n      page,\n      REACT_LOADABLE_MANIFEST\n    )\n  } else {\n    reactLoadableManifestPath = join(\n      distDir,\n      'server',\n      'pages',\n      normalizePagePath(page),\n      REACT_LOADABLE_MANIFEST\n    )\n  }\n\n  // Make sure to avoid loading the manifest for static metadata routes for better performance.\n  const hasClientManifest = !isStaticMetadataRoute(page)\n\n  // Load the manifest files first\n  //\n  // Loading page-specific manifests shouldn't throw an error if the manifest couldn't be found, so\n  // that the `requirePage` call below will throw the correct error in that case\n  // (a `PageNotFoundError`).\n  const [\n    buildManifest,\n    reactLoadableManifest,\n    dynamicCssManifest,\n    clientReferenceManifest,\n    serverActionsManifest,\n    subresourceIntegrityManifest,\n  ] = await Promise.all([\n    loadManifestWithRetries<BuildManifest>(\n      join(distDir, BUILD_MANIFEST),\n      manifestLoadAttempts\n    ),\n    tryLoadManifestWithRetries<ReactLoadableManifest>(\n      reactLoadableManifestPath,\n      manifestLoadAttempts\n    ),\n    // This manifest will only exist in Pages dir && Production && Webpack.\n    isAppPath || process.env.TURBOPACK\n      ? undefined\n      : loadManifestWithRetries<DynamicCssManifest>(\n          join(distDir, `${DYNAMIC_CSS_MANIFEST}.json`),\n          manifestLoadAttempts\n        ).catch(() => undefined),\n    isAppPath && hasClientManifest\n      ? tryLoadClientReferenceManifest(\n          join(\n            distDir,\n            'server',\n            'app',\n            page.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n          ),\n          page.replace(/%5F/g, '_'),\n          manifestLoadAttempts\n        )\n      : undefined,\n    isAppPath\n      ? loadManifestWithRetries<ActionManifest>(\n          join(distDir, 'server', SERVER_REFERENCE_MANIFEST + '.json'),\n          manifestLoadAttempts\n        ).catch(() => null)\n      : null,\n    sriEnabled\n      ? loadManifestWithRetries<DeepReadonly<Record<string, string>>>(\n          join(distDir, 'server', SUBRESOURCE_INTEGRITY_MANIFEST + '.json')\n        ).catch(() => undefined)\n      : undefined,\n  ])\n\n  // Before requiring the actual page module, we have to set the reference\n  // manifests to our global store so Server Action's encryption util can access\n  // to them at the top level of the page module.\n  if (serverActionsManifest && clientReferenceManifest) {\n    setReferenceManifestsSingleton({\n      page,\n      clientReferenceManifest,\n      serverActionsManifest,\n      serverModuleMap: createServerModuleMap({\n        serverActionsManifest,\n      }),\n    })\n  }\n\n  const ComponentMod = await requirePage(page, distDir, isAppPath)\n\n  const Component = interopDefault(ComponentMod)\n  const Document = interopDefault(DocumentMod)\n  const App = interopDefault(AppMod)\n\n  const { getServerSideProps, getStaticProps, getStaticPaths, routeModule } =\n    ComponentMod\n\n  return {\n    App,\n    Document,\n    Component,\n    buildManifest,\n    subresourceIntegrityManifest,\n    reactLoadableManifest: reactLoadableManifest || {},\n    dynamicCssManifest,\n    pageConfig: ComponentMod.config || {},\n    ComponentMod,\n    getServerSideProps,\n    getStaticProps,\n    getStaticPaths,\n    clientReferenceManifest,\n    serverActionsManifest,\n    isAppPath,\n    page,\n    routeModule,\n  }\n}\n\nexport const loadComponents = getTracer().wrap(\n  LoadComponentsSpan.loadComponents,\n  loadComponentsImpl\n)\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport { workAsyncStorage } from './work-async-storage.external'\n\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({\n  serverActionsManifest,\n}: {\n  serverActionsManifest: ActionManifest\n}) {\n  return new Proxy(\n    {},\n    {\n      get: (_, id: string) => {\n        const workers =\n          serverActionsManifest[\n            process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n          ]?.[id]?.workers\n\n        if (!workers) {\n          return undefined\n        }\n\n        const workStore = workAsyncStorage.getStore()\n\n        let workerEntry:\n          | { moduleId: string | number; async: boolean }\n          | undefined\n\n        if (workStore) {\n          workerEntry = workers[normalizeWorkerPageName(workStore.page)]\n        } else {\n          // If there's no work store defined, we can assume that a server\n          // module map is needed during module evaluation, e.g. to create a\n          // server action using a higher-order function. Therefore it should be\n          // safe to return any entry from the manifest that matches the action\n          // ID. They all refer to the same module ID, which must also exist in\n          // the current page bundle. TODO: This is currently not guaranteed in\n          // Turbopack, and needs to be fixed.\n          workerEntry = Object.values(workers).at(0)\n        }\n\n        if (!workerEntry) {\n          return undefined\n        }\n\n        const { moduleId, async } = workerEntry\n\n        return { id: moduleId, name: id, chunks: [], async }\n      },\n    }\n  )\n}\n\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */\nexport function selectWorkerForForwarding(\n  actionId: string,\n  pageName: string,\n  serverActionsManifest: ActionManifest\n) {\n  const workers =\n    serverActionsManifest[\n      process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'\n    ][actionId]?.workers\n  const workerName = normalizeWorkerPageName(pageName)\n\n  // no workers, nothing to forward to\n  if (!workers) return\n\n  // if there is a worker for this page, no need to forward it.\n  if (workers[workerName]) {\n    return\n  }\n\n  // otherwise, grab the first worker that has a handler for this action id\n  return denormalizeWorkerPageName(Object.keys(workers)[0])\n}\n\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */\nfunction normalizeWorkerPageName(pageName: string) {\n  if (pathHasPrefix(pageName, 'app')) {\n    return pageName\n  }\n\n  return 'app' + pageName\n}\n\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */\nfunction denormalizeWorkerPageName(bundlePath: string) {\n  return normalizeAppPath(removePathPrefix(bundlePath, 'app'))\n}\n","import type { BaseNextRequest } from '../../../../server/base-http'\nimport type { MiddlewareMatcher } from '../../../../build/analysis/get-page-static-info'\nimport type { Params } from '../../../../server/request/params'\nimport { matchHas } from './prepare-destination'\n\nexport interface MiddlewareRouteMatch {\n  (\n    pathname: string | null | undefined,\n    request: BaseNextRequest,\n    query: Params\n  ): boolean\n}\n\nexport function getMiddlewareRouteMatcher(\n  matchers: MiddlewareMatcher[]\n): MiddlewareRouteMatch {\n  return (\n    pathname: string | null | undefined,\n    req: BaseNextRequest,\n    query: Params\n  ) => {\n    for (const matcher of matchers) {\n      const routeMatch = new RegExp(matcher.regexp).exec(pathname!)\n      if (!routeMatch) {\n        continue\n      }\n\n      if (matcher.has || matcher.missing) {\n        const hasParams = matchHas(req, query, matcher.has, matcher.missing)\n        if (!hasParams) {\n          continue\n        }\n      }\n\n      return true\n    }\n\n    return false\n  }\n}\n","import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n","export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = (cb: ScheduledFn<void>) => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = (cb: ScheduledFn<void>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n","import type { OutgoingHttpHeaders } from 'http'\nimport type RenderResult from '../render-result'\nimport type { CacheControl, Revalidate } from '../lib/cache-control'\nimport type { RouteKind } from '../route-kind'\n\nexport interface ResponseCacheBase {\n  get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalCache\n      /**\n       * This is a hint to the cache to help it determine what kind of route\n       * this is so it knows where to look up the cache entry from. If not\n       * provided it will test the filesystem to check.\n       */\n      routeKind: RouteKind\n\n      /**\n       * True if this is a fallback request.\n       */\n      isFallback?: boolean\n\n      /**\n       * True if the route is enabled for PPR.\n       */\n      isRoutePPREnabled?: boolean\n    }\n  ): Promise<ResponseCacheEntry | null>\n}\n\n// The server components HMR cache might store other data as well in the future,\n// at which point this should be refactored to a discriminated union type.\nexport interface ServerComponentsHmrCache {\n  get(key: string): CachedFetchData | undefined\n  set(key: string, data: CachedFetchData): void\n}\n\nexport type CachedFetchData = {\n  headers: Record<string, string>\n  body: string\n  url: string\n  status?: number\n}\n\nexport const enum CachedRouteKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  REDIRECT = 'REDIRECT',\n  IMAGE = 'IMAGE',\n}\n\nexport interface CachedFetchValue {\n  kind: CachedRouteKind.FETCH\n  data: CachedFetchData\n  // tags are only present with file-system-cache\n  // fetch cache stores tags outside of cache entry\n  tags?: string[]\n  revalidate: number\n}\n\nexport interface CachedRedirectValue {\n  kind: CachedRouteKind.REDIRECT\n  props: Object\n}\n\nexport interface CachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  rscData: Buffer | undefined\n  status: number | undefined\n  postponed: string | undefined\n  headers: OutgoingHttpHeaders | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface CachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  html: RenderResult\n  pageData: Object\n  status: number | undefined\n  headers: OutgoingHttpHeaders | undefined\n}\n\nexport interface CachedRouteValue {\n  kind: CachedRouteKind.APP_ROUTE\n  // this needs to be a RenderResult so since renderResponse\n  // expects that type instead of a string\n  body: Buffer\n  status: number\n  headers: OutgoingHttpHeaders\n}\n\nexport interface CachedImageValue {\n  kind: CachedRouteKind.IMAGE\n  etag: string\n  upstreamEtag: string\n  buffer: Buffer\n  extension: string\n  isMiss?: boolean\n  isStale?: boolean\n}\n\nexport interface IncrementalCachedAppPageValue {\n  kind: CachedRouteKind.APP_PAGE\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  rscData: Buffer | undefined\n  headers: OutgoingHttpHeaders | undefined\n  postponed: string | undefined\n  status: number | undefined\n  segmentData: Map<string, Buffer> | undefined\n}\n\nexport interface IncrementalCachedPageValue {\n  kind: CachedRouteKind.PAGES\n  // this needs to be a string since the cache expects to store\n  // the string value\n  html: string\n  pageData: Object\n  headers: OutgoingHttpHeaders | undefined\n  status: number | undefined\n}\n\nexport interface IncrementalResponseCacheEntry {\n  cacheControl?: CacheControl\n  /**\n   * timestamp in milliseconds to revalidate after\n   */\n  revalidateAfter?: Revalidate\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  isMiss?: boolean\n  value: Exclude<IncrementalCacheValue, CachedFetchValue> | null\n}\n\nexport interface IncrementalFetchCacheEntry {\n  /**\n   * `-1` here dictates a blocking revalidate should be used\n   */\n  isStale?: boolean | -1\n  value: CachedFetchValue\n}\n\nexport type IncrementalCacheEntry =\n  | IncrementalResponseCacheEntry\n  | IncrementalFetchCacheEntry\n\nexport type IncrementalCacheValue =\n  | CachedRedirectValue\n  | IncrementalCachedPageValue\n  | IncrementalCachedAppPageValue\n  | CachedImageValue\n  | CachedFetchValue\n  | CachedRouteValue\n\nexport type ResponseCacheValue =\n  | CachedRedirectValue\n  | CachedPageValue\n  | CachedAppPageValue\n  | CachedImageValue\n  | CachedRouteValue\n\nexport type ResponseCacheEntry = {\n  cacheControl?: CacheControl\n  value: ResponseCacheValue | null\n  isStale?: boolean | -1\n  isMiss?: boolean\n}\n\n/**\n * @param hasResolved whether the responseGenerator has resolved it's promise\n * @param previousCacheEntry the previous cache entry if it exists or the current\n */\nexport type ResponseGenerator = (state: {\n  hasResolved: boolean\n  previousCacheEntry?: IncrementalResponseCacheEntry | null\n  isRevalidating?: boolean\n  span?: any\n}) => Promise<ResponseCacheEntry | null>\n\nexport const enum IncrementalCacheKind {\n  APP_PAGE = 'APP_PAGE',\n  APP_ROUTE = 'APP_ROUTE',\n  PAGES = 'PAGES',\n  FETCH = 'FETCH',\n  IMAGE = 'IMAGE',\n}\n\nexport interface GetIncrementalFetchCacheContext {\n  kind: IncrementalCacheKind.FETCH\n  revalidate?: Revalidate\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  softTags?: string[]\n}\n\nexport interface GetIncrementalResponseCacheContext {\n  kind: Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH>\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback: boolean\n}\n\nexport interface SetIncrementalFetchCacheContext {\n  fetchCache: true\n  fetchUrl?: string\n  fetchIdx?: number\n  tags?: string[]\n  isImplicitBuildTimeCache?: boolean\n}\n\nexport interface SetIncrementalResponseCacheContext {\n  fetchCache?: false\n  cacheControl?: CacheControl\n\n  /**\n   * True if the route is enabled for PPR.\n   */\n  isRoutePPREnabled?: boolean\n\n  /**\n   * True if this is a fallback request.\n   */\n  isFallback?: boolean\n}\n\nexport interface IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n\nexport interface IncrementalCache extends IncrementalResponseCache {\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  set(\n    key: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  set(\n    key: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n}\n","import {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedAppPageValue,\n  type CachedPageValue,\n  type IncrementalResponseCacheEntry,\n  type ResponseCacheEntry,\n} from './types'\n\nimport RenderResult from '../render-result'\nimport { RouteKind } from '../route-kind'\nimport { HTML_CONTENT_TYPE_HEADER } from '../../lib/constants'\n\nexport async function fromResponseCacheEntry(\n  cacheEntry: ResponseCacheEntry\n): Promise<IncrementalResponseCacheEntry> {\n  return {\n    ...cacheEntry,\n    value:\n      cacheEntry.value?.kind === CachedRouteKind.PAGES\n        ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n          }\n        : cacheEntry.value?.kind === CachedRouteKind.APP_PAGE\n          ? {\n              kind: CachedRouteKind.APP_PAGE,\n              html: await cacheEntry.value.html.toUnchunkedString(true),\n              postponed: cacheEntry.value.postponed,\n              rscData: cacheEntry.value.rscData,\n              headers: cacheEntry.value.headers,\n              status: cacheEntry.value.status,\n              segmentData: cacheEntry.value.segmentData,\n            }\n          : cacheEntry.value,\n  }\n}\n\nexport async function toResponseCacheEntry(\n  response: IncrementalResponseCacheEntry | null\n): Promise<ResponseCacheEntry | null> {\n  if (!response) return null\n\n  return {\n    isMiss: response.isMiss,\n    isStale: response.isStale,\n    cacheControl: response.cacheControl,\n    value:\n      response.value?.kind === CachedRouteKind.PAGES\n        ? ({\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(\n              response.value.html,\n              HTML_CONTENT_TYPE_HEADER\n            ),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status,\n          } satisfies CachedPageValue)\n        : response.value?.kind === CachedRouteKind.APP_PAGE\n          ? ({\n              kind: CachedRouteKind.APP_PAGE,\n              html: RenderResult.fromStatic(\n                response.value.html,\n                HTML_CONTENT_TYPE_HEADER\n              ),\n              rscData: response.value.rscData,\n              headers: response.value.headers,\n              status: response.value.status,\n              postponed: response.value.postponed,\n              segmentData: response.value.segmentData,\n            } satisfies CachedAppPageValue)\n          : response.value,\n  }\n}\n\nexport function routeKindToIncrementalCacheKind(\n  routeKind: RouteKind\n): Exclude<IncrementalCacheKind, IncrementalCacheKind.FETCH> {\n  switch (routeKind) {\n    case RouteKind.PAGES:\n      return IncrementalCacheKind.PAGES\n    case RouteKind.APP_PAGE:\n      return IncrementalCacheKind.APP_PAGE\n    case RouteKind.IMAGE:\n      return IncrementalCacheKind.IMAGE\n    case RouteKind.APP_ROUTE:\n      return IncrementalCacheKind.APP_ROUTE\n    case RouteKind.PAGES_API:\n      // Pages Router API routes are not cached in the incremental cache.\n      throw new Error(`Unexpected route kind ${routeKind}`)\n    default:\n      return routeKind satisfies never\n  }\n}\n","import type {\n  ResponseCacheEntry,\n  ResponseGenerator,\n  ResponseCacheBase,\n  IncrementalResponseCacheEntry,\n  IncrementalResponseCache,\n} from './types'\n\nimport { Batcher } from '../../lib/batcher'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport {\n  fromResponseCacheEntry,\n  routeKindToIncrementalCacheKind,\n  toResponseCacheEntry,\n} from './utils'\nimport type { RouteKind } from '../route-kind'\n\nexport * from './types'\n\nexport default class ResponseCache implements ResponseCacheBase {\n  private readonly batcher = Batcher.create<\n    { key: string; isOnDemandRevalidate: boolean },\n    IncrementalResponseCacheEntry | null,\n    string\n  >({\n    // Ensure on-demand revalidate doesn't block normal requests, it should be\n    // safe to run an on-demand revalidate for the same key as a normal request.\n    cacheKeyFn: ({ key, isOnDemandRevalidate }) =>\n      `${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n    // We wait to do any async work until after we've added our promise to\n    // `pendingResponses` to ensure that any any other calls will reuse the\n    // same promise until we've fully finished our work.\n    schedulerFn: scheduleOnNextTick,\n  })\n\n  private previousCacheItem?: {\n    key: string\n    entry: IncrementalResponseCacheEntry | null\n    expiresAt: number\n  }\n\n  // we don't use minimal_mode name here as this.minimal_mode is\n  // statically replace for server runtimes but we need it to\n  // be dynamic here\n  private minimal_mode?: boolean\n\n  constructor(minimal_mode: boolean) {\n    this.minimal_mode = minimal_mode\n  }\n\n  public async get(\n    key: string | null,\n    responseGenerator: ResponseGenerator,\n    context: {\n      routeKind: RouteKind\n      isOnDemandRevalidate?: boolean\n      isPrefetch?: boolean\n      incrementalCache: IncrementalResponseCache\n      isRoutePPREnabled?: boolean\n      isFallback?: boolean\n      waitUntil?: (prom: Promise<any>) => void\n    }\n  ): Promise<ResponseCacheEntry | null> {\n    // If there is no key for the cache, we can't possibly look this up in the\n    // cache so just return the result of the response generator.\n    if (!key) {\n      return responseGenerator({ hasResolved: false, previousCacheEntry: null })\n    }\n\n    const {\n      incrementalCache,\n      isOnDemandRevalidate = false,\n      isFallback = false,\n      isRoutePPREnabled = false,\n      waitUntil,\n    } = context\n\n    const response = await this.batcher.batch(\n      { key, isOnDemandRevalidate },\n      (cacheKey, resolve) => {\n        const prom = (async () => {\n          // We keep the previous cache entry around to leverage when the\n          // incremental cache is disabled in minimal mode.\n          if (\n            this.minimal_mode &&\n            this.previousCacheItem?.key === cacheKey &&\n            this.previousCacheItem.expiresAt > Date.now()\n          ) {\n            return this.previousCacheItem.entry\n          }\n\n          // Coerce the kindHint into a given kind for the incremental cache.\n          const kind = routeKindToIncrementalCacheKind(context.routeKind)\n\n          let resolved = false\n          let cachedResponse: IncrementalResponseCacheEntry | null = null\n          try {\n            cachedResponse = !this.minimal_mode\n              ? await incrementalCache.get(key, {\n                  kind,\n                  isRoutePPREnabled: context.isRoutePPREnabled,\n                  isFallback,\n                })\n              : null\n\n            if (cachedResponse && !isOnDemandRevalidate) {\n              resolve(cachedResponse)\n              resolved = true\n\n              if (!cachedResponse.isStale || context.isPrefetch) {\n                // The cached value is still valid, so we don't need\n                // to update it yet.\n                return null\n              }\n            }\n\n            const cacheEntry = await responseGenerator({\n              hasResolved: resolved,\n              previousCacheEntry: cachedResponse,\n              isRevalidating: true,\n            })\n\n            // If the cache entry couldn't be generated, we don't want to cache\n            // the result.\n            if (!cacheEntry) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            const resolveValue = await fromResponseCacheEntry({\n              ...cacheEntry,\n              isMiss: !cachedResponse,\n            })\n            if (!resolveValue) {\n              // Unset the previous cache item if it was set.\n              if (this.minimal_mode) this.previousCacheItem = undefined\n              return null\n            }\n\n            // For on-demand revalidate wait to resolve until cache is set.\n            // Otherwise resolve now.\n            if (!isOnDemandRevalidate && !resolved) {\n              resolve(resolveValue)\n              resolved = true\n            }\n\n            // We want to persist the result only if it has a cache control value\n            // defined.\n            if (resolveValue.cacheControl) {\n              if (this.minimal_mode) {\n                this.previousCacheItem = {\n                  key: cacheKey,\n                  entry: resolveValue,\n                  expiresAt: Date.now() + 1000,\n                }\n              } else {\n                await incrementalCache.set(key, resolveValue.value, {\n                  cacheControl: resolveValue.cacheControl,\n                  isRoutePPREnabled,\n                  isFallback,\n                })\n              }\n            }\n\n            return resolveValue\n          } catch (err) {\n            // When a path is erroring we automatically re-set the existing cache\n            // with new revalidate and expire times to prevent non-stop retrying.\n            if (cachedResponse?.cacheControl) {\n              const newRevalidate = Math.min(\n                Math.max(cachedResponse.cacheControl.revalidate || 3, 3),\n                30\n              )\n\n              const newExpire =\n                cachedResponse.cacheControl.expire === undefined\n                  ? undefined\n                  : Math.max(\n                      newRevalidate + 3,\n                      cachedResponse.cacheControl.expire\n                    )\n\n              await incrementalCache.set(key, cachedResponse.value, {\n                cacheControl: { revalidate: newRevalidate, expire: newExpire },\n                isRoutePPREnabled,\n                isFallback,\n              })\n            }\n\n            // While revalidating in the background we can't reject as we already\n            // resolved the cache entry so log the error here.\n            if (resolved) {\n              console.error(err)\n              return null\n            }\n\n            // We haven't resolved yet, so let's throw to indicate an error.\n            throw err\n          }\n        })()\n\n        // we need to ensure background revalidates are\n        // passed to waitUntil\n        if (waitUntil) {\n          waitUntil(prom)\n        }\n        return prom\n      }\n    )\n\n    return toResponseCacheEntry(response)\n  }\n}\n","import path from '../shared/lib/isomorphic/path'\nimport type { CacheFs } from '../shared/lib/utils'\n\n/**\n * A task to be written.\n */\ntype Task = [\n  /**\n   * The directory to create.\n   */\n  directory: string,\n\n  /**\n   * The promise to create the directory.\n   */\n  mkdir: Promise<unknown>,\n\n  /**\n   * The promises to write the files that are dependent on the directory being\n   * created.\n   */\n  writeFile: Promise<unknown>[],\n]\n/**\n * MultiFileWriter is a utility for writing multiple files in parallel that\n * guarantees that all files will be written after their containing directory\n * is created, and that the directory will only be created once.\n */\nexport class MultiFileWriter {\n  /**\n   * The tasks to be written.\n   */\n  private readonly tasks: Task[] = []\n\n  constructor(\n    /**\n     * The file system methods to use.\n     */\n    private readonly fs: Pick<CacheFs, 'mkdir' | 'writeFile'>\n  ) {}\n\n  /**\n   * Finds or creates a task for a directory.\n   *\n   * @param directory - The directory to find or create a task for.\n   * @returns The task for the directory.\n   */\n  private findOrCreateTask(directory: string): Task {\n    // See if this directory already has a task to create it.\n    for (const task of this.tasks) {\n      if (task[0] === directory) {\n        return task\n      }\n    }\n\n    const promise = this.fs.mkdir(directory)\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Otherwise, create a new task for this directory.\n    const task: Task = [directory, promise, []]\n    this.tasks.push(task)\n\n    return task\n  }\n\n  /**\n   * Appends a file to the writer to be written after its containing directory\n   * is created. The file writer should be awaited after all the files have been\n   * appended. Any async operation that occurs between appending and awaiting\n   * may cause an unhandled promise rejection warning and potentially crash the\n   * process.\n   *\n   * @param filePath - The path to the file to write.\n   * @param data - The data to write to the file.\n   */\n  public append(filePath: string, data: Buffer | string): void {\n    // Find or create a task for the directory that contains the file.\n    const task = this.findOrCreateTask(path.dirname(filePath))\n\n    const promise = task[1].then(() => this.fs.writeFile(filePath, data))\n\n    // Attach a catch handler so that it doesn't throw an unhandled promise\n    // rejection warning.\n    promise.catch(() => {})\n\n    // Add the file write to the task AFTER the directory promise has resolved.\n    task[2].push(promise)\n  }\n\n  /**\n   * Returns a promise that resolves when all the files have been written.\n   */\n  public wait(): Promise<unknown> {\n    return Promise.all(this.tasks.flatMap((task) => task[2]))\n  }\n}\n","import type { RouteMetadata } from '../../../export/routes/types'\nimport type { CacheHandler, CacheHandlerContext, CacheHandlerValue } from '.'\nimport type { CacheFs } from '../../../shared/lib/utils'\nimport {\n  CachedRouteKind,\n  IncrementalCacheKind,\n  type CachedFetchValue,\n  type IncrementalCacheValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\n\nimport type { LRUCache } from '../lru-cache'\nimport path from '../../../shared/lib/isomorphic/path'\nimport {\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_DATA_SUFFIX,\n  NEXT_META_SUFFIX,\n  RSC_PREFETCH_SUFFIX,\n  RSC_SEGMENT_SUFFIX,\n  RSC_SEGMENTS_DIR_SUFFIX,\n  RSC_SUFFIX,\n} from '../../../lib/constants'\nimport { isStale, tagsManifest } from './tags-manifest.external'\nimport { MultiFileWriter } from '../../../lib/multi-file-writer'\nimport { getMemoryCache } from './memory-cache.external'\n\ntype FileSystemCacheContext = Omit<\n  CacheHandlerContext,\n  'fs' | 'serverDistDir'\n> & {\n  fs: CacheFs\n  serverDistDir: string\n}\n\nexport default class FileSystemCache implements CacheHandler {\n  private fs: FileSystemCacheContext['fs']\n  private flushToDisk?: FileSystemCacheContext['flushToDisk']\n  private serverDistDir: FileSystemCacheContext['serverDistDir']\n  private revalidatedTags: string[]\n  private static debug: boolean = !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n  private static memoryCache: LRUCache<CacheHandlerValue> | undefined\n\n  constructor(ctx: FileSystemCacheContext) {\n    this.fs = ctx.fs\n    this.flushToDisk = ctx.flushToDisk\n    this.serverDistDir = ctx.serverDistDir\n    this.revalidatedTags = ctx.revalidatedTags\n\n    if (ctx.maxMemoryCacheSize) {\n      if (!FileSystemCache.memoryCache) {\n        if (FileSystemCache.debug) {\n          console.log('using memory store for fetch cache')\n        }\n\n        FileSystemCache.memoryCache = getMemoryCache(ctx.maxMemoryCacheSize)\n      } else if (FileSystemCache.debug) {\n        console.log('memory store already initialized')\n      }\n    } else if (FileSystemCache.debug) {\n      console.log('not using memory store for fetch cache')\n    }\n  }\n\n  public resetRequestCache(): void {}\n\n  public async revalidateTag(\n    ...args: Parameters<CacheHandler['revalidateTag']>\n  ) {\n    let [tags] = args\n    tags = typeof tags === 'string' ? [tags] : tags\n\n    if (FileSystemCache.debug) {\n      console.log('revalidateTag', tags)\n    }\n\n    if (tags.length === 0) {\n      return\n    }\n\n    for (const tag of tags) {\n      if (!tagsManifest.has(tag)) {\n        tagsManifest.set(tag, Date.now())\n      }\n    }\n  }\n\n  public async get(...args: Parameters<CacheHandler['get']>) {\n    const [key, ctx] = args\n    const { kind } = ctx\n\n    let data = FileSystemCache.memoryCache?.get(key)\n\n    if (FileSystemCache.debug) {\n      if (kind === IncrementalCacheKind.FETCH) {\n        console.log('get', key, ctx.tags, kind, !!data)\n      } else {\n        console.log('get', key, kind, !!data)\n      }\n    }\n\n    // let's check the disk for seed data\n    if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n      try {\n        if (kind === IncrementalCacheKind.APP_ROUTE) {\n          const filePath = this.getFilePath(\n            `${key}.body`,\n            IncrementalCacheKind.APP_ROUTE\n          )\n          const fileData = await this.fs.readFile(filePath)\n          const { mtime } = await this.fs.stat(filePath)\n\n          const meta = JSON.parse(\n            await this.fs.readFile(\n              filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n              'utf8'\n            )\n          )\n\n          data = {\n            lastModified: mtime.getTime(),\n            value: {\n              kind: CachedRouteKind.APP_ROUTE,\n              body: fileData,\n              headers: meta.headers,\n              status: meta.status,\n            },\n          }\n        } else {\n          const filePath = this.getFilePath(\n            kind === IncrementalCacheKind.FETCH ? key : `${key}.html`,\n            kind\n          )\n\n          const fileData = await this.fs.readFile(filePath, 'utf8')\n          const { mtime } = await this.fs.stat(filePath)\n\n          if (kind === IncrementalCacheKind.FETCH) {\n            const { tags, fetchIdx, fetchUrl } = ctx\n\n            if (!this.flushToDisk) return null\n\n            const lastModified = mtime.getTime()\n            const parsedData: CachedFetchValue = JSON.parse(fileData)\n            data = {\n              lastModified,\n              value: parsedData,\n            }\n\n            if (data.value?.kind === CachedRouteKind.FETCH) {\n              const storedTags = data.value?.tags\n\n              // update stored tags if a new one is being added\n              // TODO: remove this when we can send the tags\n              // via header on GET same as SET\n              if (!tags?.every((tag) => storedTags?.includes(tag))) {\n                if (FileSystemCache.debug) {\n                  console.log('tags vs storedTags mismatch', tags, storedTags)\n                }\n                await this.set(key, data.value, {\n                  fetchCache: true,\n                  tags,\n                  fetchIdx,\n                  fetchUrl,\n                })\n              }\n            }\n          } else if (kind === IncrementalCacheKind.APP_PAGE) {\n            // We try to load the metadata file, but if it fails, we don't\n            // error. We also don't load it if this is a fallback.\n            let meta: RouteMetadata | undefined\n            try {\n              meta = JSON.parse(\n                await this.fs.readFile(\n                  filePath.replace(/\\.html$/, NEXT_META_SUFFIX),\n                  'utf8'\n                )\n              )\n            } catch {}\n\n            let maybeSegmentData: Map<string, Buffer> | undefined\n            if (meta?.segmentPaths) {\n              // Collect all the segment data for this page.\n              // TODO: To optimize file system reads, we should consider creating\n              // separate cache entries for each segment, rather than storing them\n              // all on the page's entry. Though the behavior is\n              // identical regardless.\n              const segmentData: Map<string, Buffer> = new Map()\n              maybeSegmentData = segmentData\n              const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX\n              await Promise.all(\n                meta.segmentPaths.map(async (segmentPath: string) => {\n                  const segmentDataFilePath = this.getFilePath(\n                    segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX,\n                    IncrementalCacheKind.APP_PAGE\n                  )\n                  try {\n                    segmentData.set(\n                      segmentPath,\n                      await this.fs.readFile(segmentDataFilePath)\n                    )\n                  } catch {\n                    // This shouldn't happen, but if for some reason we fail to\n                    // load a segment from the filesystem, treat it the same as if\n                    // the segment is dynamic and does not have a prefetch.\n                  }\n                })\n              )\n            }\n\n            let rscData: Buffer | undefined\n            if (!ctx.isFallback) {\n              rscData = await this.fs.readFile(\n                this.getFilePath(\n                  `${key}${ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`,\n                  IncrementalCacheKind.APP_PAGE\n                )\n              )\n            }\n\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: CachedRouteKind.APP_PAGE,\n                html: fileData,\n                rscData,\n                postponed: meta?.postponed,\n                headers: meta?.headers,\n                status: meta?.status,\n                segmentData: maybeSegmentData,\n              },\n            }\n          } else if (kind === IncrementalCacheKind.PAGES) {\n            let meta: RouteMetadata | undefined\n            let pageData: string | object = {}\n\n            if (!ctx.isFallback) {\n              pageData = JSON.parse(\n                await this.fs.readFile(\n                  this.getFilePath(\n                    `${key}${NEXT_DATA_SUFFIX}`,\n                    IncrementalCacheKind.PAGES\n                  ),\n                  'utf8'\n                )\n              )\n            }\n\n            data = {\n              lastModified: mtime.getTime(),\n              value: {\n                kind: CachedRouteKind.PAGES,\n                html: fileData,\n                pageData,\n                headers: meta?.headers,\n                status: meta?.status,\n              },\n            }\n          } else {\n            throw new Error(\n              `Invariant: Unexpected route kind ${kind} in file system cache.`\n            )\n          }\n        }\n\n        if (data) {\n          FileSystemCache.memoryCache?.set(key, data)\n        }\n      } catch {\n        return null\n      }\n    }\n\n    if (\n      data?.value?.kind === CachedRouteKind.APP_PAGE ||\n      data?.value?.kind === CachedRouteKind.APP_ROUTE ||\n      data?.value?.kind === CachedRouteKind.PAGES\n    ) {\n      let cacheTags: undefined | string[]\n      const tagsHeader = data.value.headers?.[NEXT_CACHE_TAGS_HEADER]\n\n      if (typeof tagsHeader === 'string') {\n        cacheTags = tagsHeader.split(',')\n      }\n\n      if (cacheTags?.length) {\n        // we trigger a blocking validation if an ISR page\n        // had a tag revalidated, if we want to be a background\n        // revalidation instead we return data.lastModified = -1\n        if (isStale(cacheTags, data?.lastModified || Date.now())) {\n          return null\n        }\n      }\n    } else if (data?.value?.kind === CachedRouteKind.FETCH) {\n      const combinedTags =\n        ctx.kind === IncrementalCacheKind.FETCH\n          ? [...(ctx.tags || []), ...(ctx.softTags || [])]\n          : []\n\n      const wasRevalidated = combinedTags.some((tag) => {\n        if (this.revalidatedTags.includes(tag)) {\n          return true\n        }\n\n        return isStale([tag], data?.lastModified || Date.now())\n      })\n      // When revalidate tag is called we don't return\n      // stale data so it's updated right away\n      if (wasRevalidated) {\n        data = undefined\n      }\n    }\n\n    return data ?? null\n  }\n\n  public async set(\n    key: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ) {\n    FileSystemCache.memoryCache?.set(key, {\n      value: data,\n      lastModified: Date.now(),\n    })\n\n    if (FileSystemCache.debug) {\n      console.log('set', key)\n    }\n\n    if (!this.flushToDisk || !data) return\n\n    // Create a new writer that will prepare to write all the files to disk\n    // after their containing directory is created.\n    const writer = new MultiFileWriter(this.fs)\n\n    if (data.kind === CachedRouteKind.APP_ROUTE) {\n      const filePath = this.getFilePath(\n        `${key}.body`,\n        IncrementalCacheKind.APP_ROUTE\n      )\n\n      writer.append(filePath, data.body)\n\n      const meta: RouteMetadata = {\n        headers: data.headers,\n        status: data.status,\n        postponed: undefined,\n        segmentPaths: undefined,\n      }\n\n      writer.append(\n        filePath.replace(/\\.body$/, NEXT_META_SUFFIX),\n        JSON.stringify(meta, null, 2)\n      )\n    } else if (\n      data.kind === CachedRouteKind.PAGES ||\n      data.kind === CachedRouteKind.APP_PAGE\n    ) {\n      const isAppPath = data.kind === CachedRouteKind.APP_PAGE\n      const htmlPath = this.getFilePath(\n        `${key}.html`,\n        isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES\n      )\n\n      writer.append(htmlPath, data.html)\n\n      // Fallbacks don't generate a data file.\n      if (!ctx.fetchCache && !ctx.isFallback) {\n        writer.append(\n          this.getFilePath(\n            `${key}${\n              isAppPath\n                ? ctx.isRoutePPREnabled\n                  ? RSC_PREFETCH_SUFFIX\n                  : RSC_SUFFIX\n                : NEXT_DATA_SUFFIX\n            }`,\n            isAppPath\n              ? IncrementalCacheKind.APP_PAGE\n              : IncrementalCacheKind.PAGES\n          ),\n          isAppPath ? data.rscData! : JSON.stringify(data.pageData)\n        )\n      }\n\n      if (data?.kind === CachedRouteKind.APP_PAGE) {\n        let segmentPaths: string[] | undefined\n        if (data.segmentData) {\n          segmentPaths = []\n          const segmentsDir = htmlPath.replace(\n            /\\.html$/,\n            RSC_SEGMENTS_DIR_SUFFIX\n          )\n\n          for (const [segmentPath, buffer] of data.segmentData) {\n            segmentPaths.push(segmentPath)\n            const segmentDataFilePath =\n              segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX\n            writer.append(segmentDataFilePath, buffer)\n          }\n        }\n\n        const meta: RouteMetadata = {\n          headers: data.headers,\n          status: data.status,\n          postponed: data.postponed,\n          segmentPaths,\n        }\n\n        writer.append(\n          htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX),\n          JSON.stringify(meta)\n        )\n      }\n    } else if (data.kind === CachedRouteKind.FETCH) {\n      const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH)\n      writer.append(\n        filePath,\n        JSON.stringify({\n          ...data,\n          tags: ctx.fetchCache ? ctx.tags : [],\n        })\n      )\n    }\n\n    // Wait for all FS operations to complete.\n    await writer.wait()\n  }\n\n  private getFilePath(pathname: string, kind: IncrementalCacheKind): string {\n    switch (kind) {\n      case IncrementalCacheKind.FETCH:\n        // we store in .next/cache/fetch-cache so it can be persisted\n        // across deploys\n        return path.join(\n          this.serverDistDir,\n          '..',\n          'cache',\n          'fetch-cache',\n          pathname\n        )\n      case IncrementalCacheKind.PAGES:\n        return path.join(this.serverDistDir, 'pages', pathname)\n      case IncrementalCacheKind.IMAGE:\n      case IncrementalCacheKind.APP_PAGE:\n      case IncrementalCacheKind.APP_ROUTE:\n        return path.join(this.serverDistDir, 'app', pathname)\n      default:\n        throw new Error(`Unexpected file path kind: ${kind}`)\n    }\n  }\n}\n","import type { CacheFs } from '../../../shared/lib/utils'\nimport type { PrerenderManifest } from '../../../build'\nimport {\n  type IncrementalCacheValue,\n  type IncrementalCacheEntry,\n  type IncrementalCache as IncrementalCacheType,\n  IncrementalCacheKind,\n  CachedRouteKind,\n  type IncrementalResponseCacheEntry,\n  type IncrementalFetchCacheEntry,\n  type GetIncrementalFetchCacheContext,\n  type GetIncrementalResponseCacheContext,\n  type CachedFetchValue,\n  type SetIncrementalFetchCacheContext,\n  type SetIncrementalResponseCacheContext,\n} from '../../response-cache'\nimport type { DeepReadonly } from '../../../shared/lib/deep-readonly'\n\nimport FileSystemCache from './file-system-cache'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\n\nimport {\n  CACHE_ONE_YEAR,\n  PRERENDER_REVALIDATE_HEADER,\n} from '../../../lib/constants'\nimport { toRoute } from '../to-route'\nimport { SharedCacheControls } from './shared-cache-controls.external'\nimport {\n  getPrerenderResumeDataCache,\n  getRenderResumeDataCache,\n  workUnitAsyncStorage,\n} from '../../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../../shared/lib/invariant-error'\nimport type { Revalidate } from '../cache-control'\nimport { getPreviouslyRevalidatedTags } from '../../server-utils'\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external'\nimport { DetachedPromise } from '../../../lib/detached-promise'\n\nexport interface CacheHandlerContext {\n  fs?: CacheFs\n  dev?: boolean\n  flushToDisk?: boolean\n  serverDistDir?: string\n  maxMemoryCacheSize?: number\n  fetchCacheKeyPrefix?: string\n  prerenderManifest?: PrerenderManifest\n  revalidatedTags: string[]\n  _requestHeaders: IncrementalCache['requestHeaders']\n}\n\nexport interface CacheHandlerValue {\n  lastModified?: number\n  age?: number\n  cacheState?: string\n  value: IncrementalCacheValue | null\n}\n\nexport class CacheHandler {\n  // eslint-disable-next-line\n  constructor(_ctx: CacheHandlerContext) {}\n\n  public async get(\n    _cacheKey: string,\n    _ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<CacheHandlerValue | null> {\n    return {} as any\n  }\n\n  public async set(\n    _cacheKey: string,\n    _data: IncrementalCacheValue | null,\n    _ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {}\n\n  public async revalidateTag(\n    ..._args: Parameters<IncrementalCache['revalidateTag']>\n  ): Promise<void> {}\n\n  public resetRequestCache(): void {}\n}\n\nexport class IncrementalCache implements IncrementalCacheType {\n  readonly dev?: boolean\n  readonly disableForTestmode?: boolean\n  readonly cacheHandler?: CacheHandler\n  readonly hasCustomCacheHandler: boolean\n  readonly prerenderManifest: DeepReadonly<PrerenderManifest>\n  readonly requestHeaders: Record<string, undefined | string | string[]>\n  readonly allowedRevalidateHeaderKeys?: string[]\n  readonly minimalMode?: boolean\n  readonly fetchCacheKeyPrefix?: string\n  readonly revalidatedTags?: string[]\n  readonly isOnDemandRevalidate?: boolean\n\n  private static readonly debug: boolean =\n    !!process.env.NEXT_PRIVATE_DEBUG_CACHE\n  private readonly locks = new Map<string, Promise<void>>()\n\n  /**\n   * The cache controls for routes. This will source the values from the\n   * prerender manifest until the in-memory cache is updated with new values.\n   */\n  private readonly cacheControls: SharedCacheControls\n\n  constructor({\n    fs,\n    dev,\n    flushToDisk,\n    minimalMode,\n    serverDistDir,\n    requestHeaders,\n    maxMemoryCacheSize,\n    getPrerenderManifest,\n    fetchCacheKeyPrefix,\n    CurCacheHandler,\n    allowedRevalidateHeaderKeys,\n  }: {\n    fs?: CacheFs\n    dev: boolean\n    minimalMode?: boolean\n    serverDistDir?: string\n    flushToDisk?: boolean\n    allowedRevalidateHeaderKeys?: string[]\n    requestHeaders: IncrementalCache['requestHeaders']\n    maxMemoryCacheSize?: number\n    getPrerenderManifest: () => DeepReadonly<PrerenderManifest>\n    fetchCacheKeyPrefix?: string\n    CurCacheHandler?: typeof CacheHandler\n  }) {\n    this.hasCustomCacheHandler = Boolean(CurCacheHandler)\n\n    const cacheHandlersSymbol = Symbol.for('@next/cache-handlers')\n    const _globalThis: typeof globalThis & {\n      [cacheHandlersSymbol]?: {\n        FetchCache?: typeof CacheHandler\n      }\n    } = globalThis\n\n    if (!CurCacheHandler) {\n      // if we have a global cache handler available leverage it\n      const globalCacheHandler = _globalThis[cacheHandlersSymbol]\n\n      if (globalCacheHandler?.FetchCache) {\n        CurCacheHandler = globalCacheHandler.FetchCache\n      } else {\n        if (fs && serverDistDir) {\n          if (IncrementalCache.debug) {\n            console.log('using filesystem cache handler')\n          }\n          CurCacheHandler = FileSystemCache\n        }\n      }\n    } else if (IncrementalCache.debug) {\n      console.log('using custom cache handler', CurCacheHandler.name)\n    }\n\n    if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n      // Allow cache size to be overridden for testing purposes\n      maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10)\n    }\n    this.dev = dev\n    this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true'\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = 'minimalMode'\n    this[minimalModeKey] = minimalMode\n    this.requestHeaders = requestHeaders\n    this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys\n    this.prerenderManifest = getPrerenderManifest()\n    this.cacheControls = new SharedCacheControls(this.prerenderManifest)\n    this.fetchCacheKeyPrefix = fetchCacheKeyPrefix\n    let revalidatedTags: string[] = []\n\n    if (\n      requestHeaders[PRERENDER_REVALIDATE_HEADER] ===\n      this.prerenderManifest?.preview?.previewModeId\n    ) {\n      this.isOnDemandRevalidate = true\n    }\n\n    if (minimalMode) {\n      revalidatedTags = getPreviouslyRevalidatedTags(\n        requestHeaders,\n        this.prerenderManifest?.preview?.previewModeId\n      )\n    }\n\n    if (CurCacheHandler) {\n      this.cacheHandler = new CurCacheHandler({\n        dev,\n        fs,\n        flushToDisk,\n        serverDistDir,\n        revalidatedTags,\n        maxMemoryCacheSize,\n        _requestHeaders: requestHeaders,\n        fetchCacheKeyPrefix,\n      })\n    }\n  }\n\n  private calculateRevalidate(\n    pathname: string,\n    fromTime: number,\n    dev: boolean,\n    isFallback: boolean | undefined\n  ): Revalidate {\n    // in development we don't have a prerender-manifest\n    // and default to always revalidating to allow easier debugging\n    if (dev)\n      return Math.floor(performance.timeOrigin + performance.now() - 1000)\n\n    const cacheControl = this.cacheControls.get(toRoute(pathname))\n\n    // if an entry isn't present in routes we fallback to a default\n    // of revalidating after 1 second unless it's a fallback request.\n    const initialRevalidateSeconds = cacheControl\n      ? cacheControl.revalidate\n      : isFallback\n        ? false\n        : 1\n\n    const revalidateAfter =\n      typeof initialRevalidateSeconds === 'number'\n        ? initialRevalidateSeconds * 1000 + fromTime\n        : initialRevalidateSeconds\n\n    return revalidateAfter\n  }\n\n  _getPathname(pathname: string, fetchCache?: boolean) {\n    return fetchCache ? pathname : normalizePagePath(pathname)\n  }\n\n  resetRequestCache() {\n    this.cacheHandler?.resetRequestCache?.()\n  }\n\n  async lock(cacheKey: string): Promise<() => Promise<void> | void> {\n    // Wait for any existing lock on this cache key to be released\n    // This implements a simple queue-based locking mechanism\n    while (true) {\n      const lock = this.locks.get(cacheKey)\n\n      if (IncrementalCache.debug) {\n        console.log('lock get', cacheKey, !!lock)\n      }\n\n      // If no lock exists, we can proceed to acquire it\n      if (!lock) break\n\n      // Wait for the existing lock to be released before trying again\n      await lock\n    }\n\n    // Create a new detached promise that will represent this lock\n    // The resolve function (unlock) will be returned to the caller\n    const { resolve, promise } = new DetachedPromise<void>()\n\n    if (IncrementalCache.debug) {\n      console.log('successfully locked', cacheKey)\n    }\n\n    // Store the lock promise in the locks map\n    this.locks.set(cacheKey, promise)\n\n    return () => {\n      // Resolve the promise to release the lock.\n      resolve()\n\n      // Remove the lock from the map once it's released so that future gets\n      // can acquire the lock.\n      this.locks.delete(cacheKey)\n    }\n  }\n\n  async revalidateTag(tags: string | string[]): Promise<void> {\n    return this.cacheHandler?.revalidateTag(tags)\n  }\n\n  // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n  async generateCacheKey(\n    url: string,\n    init: RequestInit | Request = {}\n  ): Promise<string> {\n    // this should be bumped anytime a fix is made to cache entries\n    // that should bust the cache\n    const MAIN_KEY_PREFIX = 'v3'\n\n    const bodyChunks: string[] = []\n\n    const encoder = new TextEncoder()\n    const decoder = new TextDecoder()\n\n    if (init.body) {\n      // handle Uint8Array body\n      if (init.body instanceof Uint8Array) {\n        bodyChunks.push(decoder.decode(init.body))\n        ;(init as any)._ogBody = init.body\n      } // handle ReadableStream body\n      else if (typeof (init.body as any).getReader === 'function') {\n        const readableBody = init.body as ReadableStream<Uint8Array | string>\n\n        const chunks: Uint8Array[] = []\n\n        try {\n          await readableBody.pipeTo(\n            new WritableStream({\n              write(chunk) {\n                if (typeof chunk === 'string') {\n                  chunks.push(encoder.encode(chunk))\n                  bodyChunks.push(chunk)\n                } else {\n                  chunks.push(chunk)\n                  bodyChunks.push(decoder.decode(chunk, { stream: true }))\n                }\n              },\n            })\n          )\n\n          // Flush the decoder.\n          bodyChunks.push(decoder.decode())\n\n          // Create a new buffer with all the chunks.\n          const length = chunks.reduce((total, arr) => total + arr.length, 0)\n          const arrayBuffer = new Uint8Array(length)\n\n          // Push each of the chunks into the new array buffer.\n          let offset = 0\n          for (const chunk of chunks) {\n            arrayBuffer.set(chunk, offset)\n            offset += chunk.length\n          }\n\n          ;(init as any)._ogBody = arrayBuffer\n        } catch (err) {\n          console.error('Problem reading body', err)\n        }\n      } // handle FormData or URLSearchParams bodies\n      else if (typeof (init.body as any).keys === 'function') {\n        const formData = init.body as FormData\n        ;(init as any)._ogBody = init.body\n        for (const key of new Set([...formData.keys()])) {\n          const values = formData.getAll(key)\n          bodyChunks.push(\n            `${key}=${(\n              await Promise.all(\n                values.map(async (val) => {\n                  if (typeof val === 'string') {\n                    return val\n                  } else {\n                    return await val.text()\n                  }\n                })\n              )\n            ).join(',')}`\n          )\n        }\n        // handle blob body\n      } else if (typeof (init.body as any).arrayBuffer === 'function') {\n        const blob = init.body as Blob\n        const arrayBuffer = await blob.arrayBuffer()\n        bodyChunks.push(await blob.text())\n        ;(init as any)._ogBody = new Blob([arrayBuffer], { type: blob.type })\n      } else if (typeof init.body === 'string') {\n        bodyChunks.push(init.body)\n        ;(init as any)._ogBody = init.body\n      }\n    }\n\n    const headers =\n      typeof (init.headers || {}).keys === 'function'\n        ? Object.fromEntries(init.headers as Headers)\n        : Object.assign({}, init.headers)\n\n    // w3c trace context headers can break request caching and deduplication\n    // so we remove them from the cache key\n    if ('traceparent' in headers) delete headers['traceparent']\n    if ('tracestate' in headers) delete headers['tracestate']\n\n    const cacheString = JSON.stringify([\n      MAIN_KEY_PREFIX,\n      this.fetchCacheKeyPrefix || '',\n      url,\n      init.method,\n      headers,\n      init.mode,\n      init.redirect,\n      init.credentials,\n      init.referrer,\n      init.referrerPolicy,\n      init.integrity,\n      init.cache,\n      bodyChunks,\n    ])\n\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      function bufferToHex(buffer: ArrayBuffer): string {\n        return Array.prototype.map\n          .call(new Uint8Array(buffer), (b) => b.toString(16).padStart(2, '0'))\n          .join('')\n      }\n      const buffer = encoder.encode(cacheString)\n      return bufferToHex(await crypto.subtle.digest('SHA-256', buffer))\n    } else {\n      const crypto = require('crypto') as typeof import('crypto')\n      return crypto.createHash('sha256').update(cacheString).digest('hex')\n    }\n  }\n\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext\n  ): Promise<IncrementalFetchCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalResponseCacheContext\n  ): Promise<IncrementalResponseCacheEntry | null>\n  async get(\n    cacheKey: string,\n    ctx: GetIncrementalFetchCacheContext | GetIncrementalResponseCacheContext\n  ): Promise<IncrementalCacheEntry | null> {\n    // Unlike other caches if we have a resume data cache, we use it even if\n    // testmode would normally disable it or if requestHeaders say 'no-cache'.\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const resumeDataCache = workUnitStore\n        ? getRenderResumeDataCache(workUnitStore)\n        : null\n      if (resumeDataCache) {\n        const memoryCacheData = resumeDataCache.fetch.get(cacheKey)\n        if (memoryCacheData?.kind === CachedRouteKind.FETCH) {\n          return { isStale: false, value: memoryCacheData }\n        }\n      }\n    }\n\n    // we don't leverage the prerender cache in dev mode\n    // so that getStaticProps is always called for easier debugging\n    if (\n      this.disableForTestmode ||\n      (this.dev &&\n        (ctx.kind !== IncrementalCacheKind.FETCH ||\n          this.requestHeaders['cache-control'] === 'no-cache'))\n    ) {\n      return null\n    }\n\n    cacheKey = this._getPathname(\n      cacheKey,\n      ctx.kind === IncrementalCacheKind.FETCH\n    )\n\n    const cacheData = await this.cacheHandler?.get(cacheKey, ctx)\n\n    if (ctx.kind === IncrementalCacheKind.FETCH) {\n      if (!cacheData) {\n        return null\n      }\n\n      if (cacheData.value?.kind !== CachedRouteKind.FETCH) {\n        throw new InvariantError(\n          `Expected cached value for cache key ${JSON.stringify(cacheKey)} to be a \"FETCH\" kind, got ${JSON.stringify(cacheData.value?.kind)} instead.`\n        )\n      }\n\n      const workStore = workAsyncStorage.getStore()\n      const combinedTags = [...(ctx.tags || []), ...(ctx.softTags || [])]\n      // if a tag was revalidated we don't return stale data\n      if (\n        combinedTags.some(\n          (tag) =>\n            this.revalidatedTags?.includes(tag) ||\n            workStore?.pendingRevalidatedTags?.includes(tag)\n        )\n      ) {\n        return null\n      }\n\n      const revalidate = ctx.revalidate || cacheData.value.revalidate\n      const age =\n        (performance.timeOrigin +\n          performance.now() -\n          (cacheData.lastModified || 0)) /\n        1000\n\n      const isStale = age > revalidate\n      const data = cacheData.value.data\n\n      return {\n        isStale,\n        value: { kind: CachedRouteKind.FETCH, data, revalidate },\n      }\n    } else if (cacheData?.value?.kind === CachedRouteKind.FETCH) {\n      throw new InvariantError(\n        `Expected cached value for cache key ${JSON.stringify(cacheKey)} not to be a ${JSON.stringify(ctx.kind)} kind, got \"FETCH\" instead.`\n      )\n    }\n\n    let entry: IncrementalResponseCacheEntry | null = null\n    const cacheControl = this.cacheControls.get(toRoute(cacheKey))\n\n    let isStale: boolean | -1 | undefined\n    let revalidateAfter: Revalidate\n\n    if (cacheData?.lastModified === -1) {\n      isStale = -1\n      revalidateAfter = -1 * CACHE_ONE_YEAR\n    } else {\n      revalidateAfter = this.calculateRevalidate(\n        cacheKey,\n        cacheData?.lastModified || performance.timeOrigin + performance.now(),\n        this.dev ?? false,\n        ctx.isFallback\n      )\n      isStale =\n        revalidateAfter !== false &&\n        revalidateAfter < performance.timeOrigin + performance.now()\n          ? true\n          : undefined\n    }\n\n    if (cacheData) {\n      entry = {\n        isStale,\n        cacheControl,\n        revalidateAfter,\n        value: cacheData.value,\n      }\n    }\n\n    if (\n      !cacheData &&\n      this.prerenderManifest.notFoundRoutes.includes(cacheKey)\n    ) {\n      // for the first hit after starting the server the cache\n      // may not have a way to save notFound: true so if\n      // the prerender-manifest marks this as notFound then we\n      // return that entry and trigger a cache set to give it a\n      // chance to update in-memory entries\n      entry = {\n        isStale,\n        value: null,\n        cacheControl,\n        revalidateAfter,\n      }\n      this.set(cacheKey, entry.value, { ...ctx, cacheControl })\n    }\n    return entry\n  }\n\n  async set(\n    pathname: string,\n    data: CachedFetchValue | null,\n    ctx: SetIncrementalFetchCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: Exclude<IncrementalCacheValue, CachedFetchValue> | null,\n    ctx: SetIncrementalResponseCacheContext\n  ): Promise<void>\n  async set(\n    pathname: string,\n    data: IncrementalCacheValue | null,\n    ctx: SetIncrementalFetchCacheContext | SetIncrementalResponseCacheContext\n  ): Promise<void> {\n    // Even if we otherwise disable caching for testMode or if no fetchCache is\n    // configured we still always stash results in the resume data cache if one\n    // exists. This is because this is a transient in memory cache that\n    // populates caches ahead of a dynamic render in dev mode to allow the RSC\n    // debug info to have the right environment associated to it.\n    if (data?.kind === CachedRouteKind.FETCH) {\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      const prerenderResumeDataCache = workUnitStore\n        ? getPrerenderResumeDataCache(workUnitStore)\n        : null\n      if (prerenderResumeDataCache) {\n        prerenderResumeDataCache.fetch.set(pathname, data)\n      }\n    }\n\n    if (this.disableForTestmode || (this.dev && !ctx.fetchCache)) return\n\n    pathname = this._getPathname(pathname, ctx.fetchCache)\n\n    // FetchCache has upper limit of 2MB per-entry currently\n    const itemSize = JSON.stringify(data).length\n    if (\n      ctx.fetchCache &&\n      itemSize > 2 * 1024 * 1024 &&\n      // We ignore the size limit when custom cache handler is being used, as it\n      // might not have this limit\n      !this.hasCustomCacheHandler &&\n      // We also ignore the size limit when it's an implicit build-time-only\n      // caching that the user isn't even aware of.\n      !ctx.isImplicitBuildTimeCache\n    ) {\n      const warningText = `Failed to set Next.js data cache for ${ctx.fetchUrl || pathname}, items over 2MB can not be cached (${itemSize} bytes)`\n\n      if (this.dev) {\n        throw new Error(warningText)\n      }\n      console.warn(warningText)\n      return\n    }\n\n    try {\n      if (!ctx.fetchCache && ctx.cacheControl) {\n        this.cacheControls.set(toRoute(pathname), ctx.cacheControl)\n      }\n\n      await this.cacheHandler?.set(pathname, data, ctx)\n    } catch (error) {\n      console.warn('Failed to update prerender cache for', pathname, error)\n    }\n  }\n}\n","import type { CacheFs } from '../../shared/lib/utils'\n\nimport fs from 'fs'\n\nexport const nodeFs: CacheFs = {\n  existsSync: fs.existsSync,\n  readFile: fs.promises.readFile,\n  readFileSync: fs.readFileSync,\n  writeFile: (f, d) => fs.promises.writeFile(f, d),\n  mkdir: (dir) => fs.promises.mkdir(dir, { recursive: true }),\n  stat: (f) => fs.promises.stat(f),\n}\n","import type {\n  ServerResponse,\n  OutgoingHttpHeaders,\n  OutgoingHttpHeader,\n  IncomingMessage,\n  IncomingHttpHeaders,\n} from 'http'\nimport type { Socket } from 'net'\nimport type { TLSSocket } from 'tls'\n\nimport Stream from 'stream'\nimport {\n  fromNodeOutgoingHttpHeaders,\n  toNodeOutgoingHttpHeaders,\n} from '../web/utils'\n\ninterface MockedRequestOptions {\n  url: string\n  headers: IncomingHttpHeaders\n  method: string\n  readable?: Stream.Readable\n  socket?: Socket | null\n}\n\nexport class MockedRequest extends Stream.Readable implements IncomingMessage {\n  public url: string\n  public readonly statusCode?: number | undefined\n  public readonly statusMessage?: string | undefined\n  public readonly headers: IncomingHttpHeaders\n  public readonly method: string\n\n  // This is hardcoded for now, but can be updated to be configurable if needed.\n  public readonly httpVersion = '1.0'\n  public readonly httpVersionMajor = 1\n  public readonly httpVersionMinor = 0\n\n  private bodyReadable?: Stream.Readable\n\n  // If we don't actually have a socket, we'll just use a mock one that\n  // always returns false for the `encrypted` property and undefined for the\n  // `remoteAddress` property.\n  public socket: Socket = new Proxy<TLSSocket>({} as TLSSocket, {\n    get: (_target, prop) => {\n      if (prop !== 'encrypted' && prop !== 'remoteAddress') {\n        throw new Error('Method not implemented')\n      }\n\n      if (prop === 'remoteAddress') return undefined\n      // For this mock request, always ensure we just respond with the encrypted\n      // set to false to ensure there's no odd leakages.\n      return false\n    },\n  })\n\n  constructor({\n    url,\n    headers,\n    method,\n    socket = null,\n    readable,\n  }: MockedRequestOptions) {\n    super()\n\n    this.url = url\n    this.headers = headers\n    this.method = method\n\n    if (readable) {\n      this.bodyReadable = readable\n      this.bodyReadable.on('end', () => this.emit('end'))\n      this.bodyReadable.on('close', () => this.emit('close'))\n    }\n\n    if (socket) {\n      this.socket = socket\n    }\n  }\n\n  public get headersDistinct(): NodeJS.Dict<string[]> {\n    const headers: NodeJS.Dict<string[]> = {}\n    for (const [key, value] of Object.entries(this.headers)) {\n      if (!value) continue\n\n      headers[key] = Array.isArray(value) ? value : [value]\n    }\n\n    return headers\n  }\n\n  public _read(size: number): void {\n    if (this.bodyReadable) {\n      return this.bodyReadable._read(size)\n    } else {\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket {\n    return this.socket\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get aborted(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get complete(): boolean {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailers(): NodeJS.Dict<string> {\n    throw new Error('Method not implemented')\n  }\n\n  public get trailersDistinct(): NodeJS.Dict<string[]> {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawTrailers(): string[] {\n    throw new Error('Method not implemented')\n  }\n\n  public get rawHeaders(): string[] {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\nexport interface MockedResponseOptions {\n  statusCode?: number\n  socket?: Socket | null\n  headers?: OutgoingHttpHeaders\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n}\n\nexport class MockedResponse extends Stream.Writable implements ServerResponse {\n  public statusCode: number\n  public statusMessage: string = ''\n  public finished = false\n  public headersSent = false\n  public readonly socket: Socket | null\n\n  /**\n   * A promise that resolves to `true` when the response has been streamed.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly hasStreamed: Promise<boolean>\n\n  /**\n   * A list of buffers that have been written to the response.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly buffers: Buffer[] = []\n\n  /**\n   * The headers object that contains the headers that were initialized on the\n   * response and any that were added subsequently.\n   *\n   * @internal - used internally by Next.js\n   */\n  public readonly headers: Headers\n\n  private resWriter: MockedResponseOptions['resWriter']\n\n  public readonly headPromise: Promise<void>\n  private headPromiseResolve?: () => void\n\n  constructor(res: MockedResponseOptions = {}) {\n    super()\n\n    this.statusCode = res.statusCode ?? 200\n    this.socket = res.socket ?? null\n    this.headers = res.headers\n      ? fromNodeOutgoingHttpHeaders(res.headers)\n      : new Headers()\n\n    this.headPromise = new Promise<void>((resolve) => {\n      this.headPromiseResolve = resolve\n    })\n\n    // Attach listeners for the `finish`, `end`, and `error` events to the\n    // `MockedResponse` instance.\n    this.hasStreamed = new Promise<boolean>((resolve, reject) => {\n      this.on('finish', () => resolve(true))\n      this.on('end', () => resolve(true))\n      this.on('error', (err) => reject(err))\n    }).then((val) => {\n      this.headPromiseResolve?.()\n      return val\n    })\n\n    if (res.resWriter) {\n      this.resWriter = res.resWriter\n    }\n  }\n\n  public appendHeader(name: string, value: string | string[]): this {\n    const values = Array.isArray(value) ? value : [value]\n    for (const v of values) {\n      this.headers.append(name, v)\n    }\n\n    return this\n  }\n\n  /**\n   * Returns true if the response has been sent, false otherwise.\n   *\n   * @internal - used internally by Next.js\n   */\n  public get isSent() {\n    return this.finished || this.headersSent\n  }\n\n  /**\n   * The `connection` property is just an alias for the `socket` property.\n   *\n   * @deprecated — since v13.0.0 - Use socket instead.\n   */\n  public get connection(): Socket | null {\n    return this.socket\n  }\n\n  public write(chunk: Uint8Array | Buffer | string) {\n    if (this.resWriter) {\n      return this.resWriter(chunk)\n    }\n    this.buffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk))\n\n    return true\n  }\n\n  public end() {\n    this.finished = true\n    return super.end(...arguments)\n  }\n\n  /**\n   * This method is a no-op because the `MockedResponse` instance is not\n   * actually connected to a socket. This method is not specified on the\n   * interface type for `ServerResponse` but is called by Node.js.\n   *\n   * @see https://github.com/nodejs/node/pull/7949\n   */\n  public _implicitHeader() {}\n\n  public _write(\n    chunk: Buffer | string,\n    _encoding: string,\n    callback: () => void\n  ) {\n    this.write(chunk)\n\n    // According to Node.js documentation, the callback MUST be invoked to\n    // signal that the write completed successfully. If this callback is not\n    // invoked, the 'finish' event will not be emitted.\n    //\n    // https://nodejs.org/docs/latest-v16.x/api/stream.html#writable_writechunk-encoding-callback\n    callback()\n  }\n\n  public writeHead(\n    statusCode: number,\n    statusMessage?: string | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this\n  public writeHead(\n    statusCode: number,\n    statusMessage?:\n      | string\n      | OutgoingHttpHeaders\n      | OutgoingHttpHeader[]\n      | undefined,\n    headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined\n  ): this {\n    if (!headers && typeof statusMessage !== 'string') {\n      headers = statusMessage\n    } else if (typeof statusMessage === 'string' && statusMessage.length > 0) {\n      this.statusMessage = statusMessage\n    }\n\n    if (headers) {\n      // When headers have been set with response.setHeader(), they will be\n      // merged with any headers passed to response.writeHead(), with the\n      // headers passed to response.writeHead() given precedence.\n      //\n      // https://nodejs.org/api/http.html#responsewriteheadstatuscode-statusmessage-headers\n      //\n      // For this reason, we need to only call `set` to ensure that this will\n      // overwrite any existing headers.\n      if (Array.isArray(headers)) {\n        // headers may be an Array where the keys and values are in the same list.\n        // It is not a list of tuples. So, the even-numbered offsets are key\n        // values, and the odd-numbered offsets are the associated values. The\n        // array is in the same format as request.rawHeaders.\n        for (let i = 0; i < headers.length; i += 2) {\n          // The header key is always a string according to the spec.\n          this.setHeader(headers[i] as string, headers[i + 1])\n        }\n      } else {\n        for (const [key, value] of Object.entries(headers)) {\n          // Skip undefined values\n          if (typeof value === 'undefined') continue\n\n          this.setHeader(key, value)\n        }\n      }\n    }\n\n    this.statusCode = statusCode\n    this.headersSent = true\n    this.headPromiseResolve?.()\n\n    return this\n  }\n\n  public hasHeader(name: string): boolean {\n    return this.headers.has(name)\n  }\n\n  public getHeader(name: string): string | undefined {\n    return this.headers.get(name) ?? undefined\n  }\n\n  public getHeaders(): OutgoingHttpHeaders {\n    return toNodeOutgoingHttpHeaders(this.headers)\n  }\n\n  public getHeaderNames(): string[] {\n    return Array.from(this.headers.keys())\n  }\n\n  public setHeader(name: string, value: OutgoingHttpHeader) {\n    if (Array.isArray(value)) {\n      // Because `set` here should override any existing values, we need to\n      // delete the existing values before setting the new ones via `append`.\n      this.headers.delete(name)\n\n      for (const v of value) {\n        this.headers.append(name, v)\n      }\n    } else if (typeof value === 'number') {\n      this.headers.set(name, value.toString())\n    } else {\n      this.headers.set(name, value)\n    }\n\n    return this\n  }\n\n  public removeHeader(name: string): void {\n    this.headers.delete(name)\n  }\n\n  public flushHeaders(): void {\n    // This is a no-op because we don't actually have a socket to flush the\n    // headers to.\n  }\n\n  // The following methods are not implemented as they are not used in the\n  // Next.js codebase.\n\n  public get strictContentLength(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeEarlyHints() {\n    throw new Error('Method not implemented.')\n  }\n\n  public get req(): IncomingMessage {\n    throw new Error('Method not implemented.')\n  }\n\n  public assignSocket() {\n    throw new Error('Method not implemented.')\n  }\n\n  public detachSocket(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeContinue(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public writeProcessing(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public get upgrading(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get chunkedEncoding(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get shouldKeepAlive(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get useChunkedEncodingByDefault(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public get sendDate(): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  public setTimeout(): this {\n    throw new Error('Method not implemented.')\n  }\n\n  public addTrailers(): void {\n    throw new Error('Method not implemented.')\n  }\n\n  public setHeaders(): this {\n    throw new Error('Method not implemented.')\n  }\n}\n\ninterface RequestResponseMockerOptions {\n  url: string\n  headers?: IncomingHttpHeaders\n  method?: string\n  bodyReadable?: Stream.Readable\n  resWriter?: (chunk: Uint8Array | Buffer | string) => boolean\n  socket?: Socket | null\n}\n\nexport function createRequestResponseMocks({\n  url,\n  headers = {},\n  method = 'GET',\n  bodyReadable,\n  resWriter,\n  socket = null,\n}: RequestResponseMockerOptions) {\n  return {\n    req: new MockedRequest({\n      url,\n      headers,\n      method,\n      socket,\n      readable: bodyReadable,\n    }),\n    res: new MockedResponse({ socket, resWriter }),\n  }\n}\n","import path from 'path'\nimport { pathToFileURL } from 'url'\n\n/**\n * The path for a dynamic route must be URLs with a valid scheme.\n *\n * When an absolute Windows path is passed to it, it interprets the beginning of the path as a protocol (`C:`).\n * Therefore, it is important to always construct a complete path.\n * @param dir File directory\n * @param filePath Absolute or relative path\n */\nexport const formatDynamicImportPath = (dir: string, filePath: string) => {\n  const absoluteFilePath = path.isAbsolute(filePath)\n    ? filePath\n    : path.join(dir, filePath)\n  const formattedFilePath = pathToFileURL(absoluteFilePath).toString()\n\n  return formattedFilePath\n}\n","export class AsyncCallbackSet {\n  private callbacks: (() => Promise<void>)[] = []\n\n  public add(callback: () => Promise<void>) {\n    this.callbacks.push(callback)\n  }\n\n  public async runAll(): Promise<void> {\n    if (!this.callbacks.length) {\n      return\n    }\n    const callbacks = this.callbacks\n    this.callbacks = []\n    await Promise.allSettled(\n      callbacks.map(\n        // NOTE: wrapped in an async function to protect against synchronous exceptions\n        async (f) => f()\n      )\n    )\n  }\n}\n","const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n","import type { ModuleLoader } from './module-loader'\n\n/**\n * Loads a module using `await require(id)`.\n */\nexport class NodeModuleLoader implements ModuleLoader {\n  public async load<M>(id: string): Promise<M> {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n      // Need to `await` to cover the case that route is marked ESM modules by ESM escalation.\n      return await (process.env.NEXT_MINIMAL\n        ? // @ts-ignore\n          __non_webpack_require__(id)\n        : require(id))\n    }\n\n    throw new Error('NodeModuleLoader is not supported in edge runtime.')\n  }\n}\n","import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { NextConfigComplete } from '../../config-shared'\nimport type { UrlWithParsedQuery } from 'node:url'\n\nexport type RevalidateFn = (config: {\n  urlPath: string\n  revalidateHeaders: { [key: string]: string | string[] }\n  opts: { unstable_onlyGenerated?: boolean }\n}) => Promise<void>\n\n// The RouterServerContext contains instance specific\n// information that isn't available/relevant when\n// deployed in serverless environments, the key is\n// the relative project dir this allows separate contexts\n// when running multiple next instances in same process\nexport type RouterServerContext = Record<\n  string,\n  {\n    // hostname the server is started with\n    hostname?: string\n    // revalidate function to bypass going through network\n    // to invoke revalidate request (uses mocked req/res)\n    revalidate?: RevalidateFn\n    // function to render the 404 page\n    render404?: (\n      req: IncomingMessage,\n      res: ServerResponse,\n      parsedUrl?: UrlWithParsedQuery,\n      setHeaders?: boolean\n    ) => Promise<void>\n    // current loaded public runtime config\n    publicRuntimeConfig?: NextConfigComplete['publicRuntimeConfig']\n    // exposing nextConfig for dev mode specifically\n    nextConfig?: NextConfigComplete\n    // whether running in custom server mode\n    isCustomServer?: boolean\n    // whether test proxy is enabled\n    experimentalTestProxy?: boolean\n    // allow dev server to log with original stack\n    logErrorWithOriginalStack?: (err: unknown, type: string) => void\n    // allow setting ISR status in dev\n    setIsrStatus?: (key: string, value: boolean | null) => void\n  }\n>\n\nexport const RouterServerContextSymbol = Symbol.for(\n  '@next/router-server-methods'\n)\n\nexport const routerServerGlobal = globalThis as typeof globalThis & {\n  [RouterServerContextSymbol]?: RouterServerContext\n}\n","import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest, RoutesManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from './request/params'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { CacheControl } from './lib/cache-control'\nimport type { WaitUntil } from './after/builtin-request-context'\n\nimport fs from 'fs'\nimport { join, relative } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n  FUNCTIONS_CONFIG_MANIFEST,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer from './base-server'\nimport { getMaybePagePath, getPagePath } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache, {\n  CachedRouteKind,\n  type IncrementalResponseCacheEntry,\n} from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { loadManifest } from './load-manifest.external'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport type { ServerOnInstrumentationRequestError } from './app-render/types'\nimport { RouteKind } from './route-kind'\nimport { InvariantError } from '../shared/lib/invariant-error'\nimport { AwaiterOnce } from './after/awaiter'\nimport { AsyncCallbackSet } from './lib/async-callback-set'\nimport { initializeCacheHandlers, setCacheHandler } from './use-cache/handlers'\nimport type { UnwrapPromise } from '../lib/coalesced-function'\nimport { populateStaticEnv } from '../lib/static-env'\nimport { isPostpone } from './lib/router-utils/is-postpone'\nimport { NodeModuleLoader } from './lib/module-loader/node-module-loader'\nimport { NoFallbackError } from '../shared/lib/no-fallback-error.external'\nimport {\n  ensureInstrumentationRegistered,\n  getInstrumentationModule,\n} from './lib/router-utils/instrumentation-globals.external'\nimport {\n  RouterServerContextSymbol,\n  routerServerGlobal,\n} from './lib/router-utils/router-server-context'\n\nexport * from './base-server'\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nfunction installProcessErrorHandlers(\n  shouldRemoveUncaughtErrorAndRejectionListeners: boolean\n) {\n  // The conventional wisdom of Node.js and other runtimes is to treat\n  // unhandled errors as fatal and exit the process.\n  //\n  // But Next.js is not a generic JS runtime — it's a specialized runtime for\n  // React Server Components.\n  //\n  // Many unhandled rejections are due to the late-awaiting pattern for\n  // prefetching data. In Next.js it's OK to call an async function without\n  // immediately awaiting it, to start the request as soon as possible\n  // without blocking unncessarily on the result. These can end up\n  // triggering an \"unhandledRejection\" if it later turns out that the\n  // data is not needed to render the page. Example:\n  //\n  //     const promise = fetchData()\n  //     const shouldShow = await checkCondition()\n  //     if (shouldShow) {\n  //       return <Component promise={promise} />\n  //     }\n  //\n  // In this example, `fetchData` is called immediately to start the request\n  // as soon as possible, but if `shouldShow` is false, then it will be\n  // discarded without unwrapping its result. If it errors, it will trigger\n  // an \"unhandledRejection\" event.\n  //\n  // Ideally, we would suppress these rejections completely without warning,\n  // because we don't consider them real errors. (TODO: Currently we do warn.)\n  //\n  // But regardless of whether we do or don't warn, we definitely shouldn't\n  // crash the entire process.\n  //\n  // Even a \"legit\" unhandled error unrelated to prefetching shouldn't\n  // prevent the rest of the page from rendering.\n  //\n  // So, we're going to intentionally override the default error handling\n  // behavior of the outer JS runtime to be more forgiving\n\n  // Remove any existing \"unhandledRejection\" and \"uncaughtException\" handlers.\n  // This is gated behind an experimental flag until we've considered the impact\n  // in various deployment environments. It's possible this may always need to\n  // be configurable.\n  if (shouldRemoveUncaughtErrorAndRejectionListeners) {\n    process.removeAllListeners('uncaughtException')\n    process.removeAllListeners('unhandledRejection')\n  }\n\n  // Install a new handler to prevent the process from crashing.\n  process.on('unhandledRejection', (reason: unknown) => {\n    if (isPostpone(reason)) {\n      // React postpones that are unhandled might end up logged here but they're\n      // not really errors. They're just part of rendering.\n      return\n    }\n    // Immediately log the error.\n    // TODO: Ideally, if we knew that this error was triggered by application\n    // code, we would suppress it entirely without logging. We can't reliably\n    // detect all of these, but when cacheComponents is enabled, we could suppress\n    // at least some of them by waiting to log the error until after all in-\n    // progress renders have completed. Then, only log errors for which there\n    // was not a corresponding \"rejectionHandled\" event.\n    console.error(reason)\n  })\n\n  process.on('rejectionHandled', () => {\n    // TODO: See note in the unhandledRejection handler above. In the future,\n    // we may use the \"rejectionHandled\" event to de-queue an error from\n    // being logged.\n  })\n\n  // Unhandled exceptions are errors triggered by non-async functions, so this\n  // is unrelated to the late-awaiting pattern. However, for similar reasons,\n  // we still shouldn't crash the process. Just log it.\n  process.on('uncaughtException', (reason: unknown) => {\n    if (isPostpone(reason)) {\n      return\n    }\n    console.error(reason)\n  })\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  protected cleanupListeners = new AsyncCallbackSet()\n  protected internalWaitUntil: WaitUntil | undefined\n  private isDev: boolean\n  private sriEnabled: boolean\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    const isDev = options.dev ?? false\n    this.isDev = isDev\n    this.sriEnabled = Boolean(options.conf.experimental?.sri?.algorithm)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.experimental.useSkewCookie\n      ? ''\n      : this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const { interceptTestApis } =\n        // eslint-disable-next-line @next/internal/typechecked-require -- experimental/testmode is not built ins next/dist/esm\n        require('next/dist/experimental/testmode/server') as typeof import('../experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n\n    // when using compile mode static env isn't inlined so we\n    // need to populate in normal runtime env\n    if (this.renderOpts.isExperimentalCompile) {\n      populateStaticEnv(this.nextConfig)\n    }\n\n    const shouldRemoveUncaughtErrorAndRejectionListeners = Boolean(\n      options.conf.experimental?.removeUncaughtErrorAndRejectionListeners\n    )\n    installProcessErrorHandlers(shouldRemoveUncaughtErrorAndRejectionListeners)\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    // Ensure prepare process will be finished before preloading entries.\n    await this.prepare()\n\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    await this.loadCustomCacheHandlers()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: true,\n        isDev: this.isDev,\n        sriEnabled: this.sriEnabled,\n      })\n        .then(async ({ ComponentMod }) => {\n          // we need to ensure fetch is patched before we require the page,\n          // otherwise if the fetch is patched by user code, we will be patching it\n          // too late and there won't be any caching behaviors\n          ComponentMod.patchFetch()\n\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async loadInstrumentationModule() {\n    if (!this.serverOptions.dev) {\n      try {\n        this.instrumentation = await getInstrumentationModule(\n          this.dir,\n          this.nextConfig.distDir\n        )\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'An error occurred while loading the instrumentation hook',\n            { cause: err }\n          )\n        }\n      }\n    }\n    return this.instrumentation\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    await this.runInstrumentationHookIfAvailable()\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    await ensureInstrumentationRegistered(this.dir, this.nextConfig.distDir)\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  private async loadCustomCacheHandlers() {\n    const { cacheHandlers } = this.nextConfig.experimental\n    if (!cacheHandlers) return\n\n    // If we've already initialized the cache handlers interface, don't do it\n    // again.\n    if (!initializeCacheHandlers()) return\n\n    for (const [kind, handler] of Object.entries(cacheHandlers)) {\n      if (!handler) continue\n\n      setCacheHandler(\n        kind,\n        interopDefault(\n          await dynamicImportEsmDefault(\n            formatDynamicImportPath(this.distDir, handler)\n          )\n        )\n      )\n    }\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    await this.loadCustomCacheHandlers()\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      generateEtags: boolean\n      poweredByHeader: boolean\n      cacheControl: CacheControl | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      cacheControl: options.cacheControl,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n    // The module supports minimal mode, load the minimal module.\n    // Restore original URL as the handler handles it's own parsing\n    const parsedInitUrl = parseUrl(getRequestMeta(req, 'initURL') || req.url)\n    req.url = `${parsedInitUrl.pathname}${parsedInitUrl.search || ''}`\n\n    const loader = new NodeModuleLoader()\n    const module = (await loader.load(match.definition.filename)) as {\n      handler: (\n        req: IncomingMessage,\n        res: ServerResponse,\n        ctx: {\n          waitUntil: ReturnType<BaseServer['getWaitUntil']>\n        }\n      ) => Promise<void>\n    }\n    addRequestMeta(\n      req.originalRequest,\n      'relativeProjectDir',\n      relative(process.cwd(), this.dir)\n    )\n    addRequestMeta(req.originalRequest, 'distDir', this.distDir)\n    await module.handler(req.originalRequest, res.originalResponse, {\n      waitUntil: this.getWaitUntil(),\n    })\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(\n          req,\n          res,\n          pathname,\n          query,\n          // This code path does not service revalidations for unknown param\n          // shells. As a result, we don't need to pass in the unknown params.\n          null,\n          renderOpts,\n          this.getServerComponentsHmrCache(),\n          false,\n          {\n            buildId: this.buildId,\n          }\n        )\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts,\n        {\n          buildId: this.buildId,\n          deploymentId: this.nextConfig.deploymentId,\n          customServer: this.serverOptions.customServer || undefined,\n        },\n        {\n          isFallback: false,\n          isDraftMode: renderOpts.isDraftMode,\n          developmentNotFoundSourcePage: getRequestMeta(\n            req,\n            'developmentNotFoundSourcePage'\n          ),\n        }\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult,\n    previousCacheEntry?: IncrementalResponseCacheEntry | null\n  ): Promise<{\n    buffer: Buffer\n    contentType: string\n    maxAge: number\n    upstreamEtag: string\n    etag: string\n  }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(imageUpstream, paramsResult, this.nextConfig, {\n        isDev: this.renderOpts.dev,\n        previousCacheEntry,\n      })\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          locale,\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    locale,\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    locale: string | undefined\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (locale) {\n      pagePaths.unshift(\n        ...pagePaths.map((path) => `/${locale}${path === '/' ? '' : path}`)\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n          isDev: this.isDev,\n          sriEnabled: this.sriEnabled,\n        })\n\n        if (\n          locale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${locale}/`) &&\n          pagePath !== `/${locale}`\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n    // Ignore if its a middleware request\n    if (getRequestMeta(req, 'middlewareInvoke')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async ({ previousCacheEntry }) => {\n            const { buffer, contentType, maxAge, upstreamEtag, etag } =\n              await this.imageOptimizer(\n                req,\n                res,\n                paramsResult,\n                previousCacheEntry\n              )\n\n            return {\n              value: {\n                kind: CachedRouteKind.IMAGE,\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n                upstreamEtag,\n              },\n              cacheControl: { revalidate: maxAge, expire: undefined },\n            }\n          },\n          {\n            routeKind: RouteKind.IMAGE,\n            incrementalCache: imageOptimizerCache,\n            isFallback: false,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== CachedRouteKind.IMAGE) {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          cacheEntry.value.etag,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.cacheControl?.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // When in minimal mode we do not bubble the fallback as the\n    // router-server is not present to handle the error\n    addRequestMeta(req, 'bubbleNoFallback', this.minimalMode ? undefined : true)\n\n    // This is needed to expose render404 and nextConfig\n    // for environments without router-server\n    if (!routerServerGlobal[RouterServerContextSymbol]) {\n      routerServerGlobal[RouterServerContextSymbol] = {}\n    }\n    const relativeProjectDir = relative(process.cwd(), this.dir)\n    const existingServerContext =\n      routerServerGlobal[RouterServerContextSymbol][relativeProjectDir]\n\n    if (!existingServerContext) {\n      routerServerGlobal[RouterServerContextSymbol][relativeProjectDir] = {\n        render404: this.render404.bind(this),\n      }\n    }\n    routerServerGlobal[RouterServerContextSymbol][\n      relativeProjectDir\n    ].nextConfig = this.nextConfig\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromRequest(req, pathname),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        // If we handled the request, we can return early.\n        // For api routes edge runtime\n        try {\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null,\n          })\n          if (handled) return true\n        } catch (apiError) {\n          await this.instrumentationOnRequestError(apiError, req, {\n            routePath: match.definition.page,\n            routerKind: 'Pages Router',\n            routeType: 'route',\n            // Edge runtime does not support ISR\n            revalidateReason: undefined,\n          })\n          throw apiError\n        }\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): void {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  protected normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  protected normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const { wrapRequestHandlerNode } =\n        // eslint-disable-next-line @next/internal/typechecked-require -- experimental/testmode is not built ins next/dist/esm\n        require('next/dist/experimental/testmode/server') as typeof import('../experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause an unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n\n    return (req, res, parsedUrl) =>\n      handler(this.normalizeReq(req), this.normalizeRes(res), parsedUrl)\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      mocked.res.statusCode !== 200 &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) {\n      return null\n    } else {\n      const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n      return manifest\n    }\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected async getMiddleware(): Promise<MiddlewareRoutingItem | undefined> {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      const middlewareModule = await this.loadNodeMiddleware()\n\n      if (middlewareModule) {\n        return {\n          match: getMiddlewareRouteMatcher(\n            middlewareModule.config?.matchers || [\n              { regexp: '.*', originalSource: '/:path*' },\n            ]\n          ),\n          page: '/',\n        }\n      }\n\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  private async loadNodeMiddleware() {\n    if (!process.env.NEXT_MINIMAL) {\n      try {\n        const functionsConfig = this.renderOpts.dev\n          ? {}\n          : require(join(this.distDir, 'server', FUNCTIONS_CONFIG_MANIFEST))\n\n        if (\n          this.renderOpts.dev ||\n          functionsConfig?.functions?.['/_middleware']\n        ) {\n          // if used with top level await, this will be a promise\n          return require(join(this.distDir, 'server', 'middleware.js'))\n        }\n      } catch (err) {\n        if (\n          isError(err) &&\n          err.code !== 'ENOENT' &&\n          err.code !== 'MODULE_NOT_FOUND'\n        ) {\n          throw err\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    const nodeMiddleware = await this.loadNodeMiddleware()\n\n    if (!info && nodeMiddleware) {\n      return true\n    }\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = getRequestMeta(params.request, 'locale')\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const requestData = {\n      headers: params.request.headers,\n      method,\n      nextConfig: {\n        basePath: this.nextConfig.basePath,\n        i18n: this.nextConfig.i18n,\n        trailingSlash: this.nextConfig.trailingSlash,\n        experimental: this.nextConfig.experimental,\n      },\n      url: url,\n      page,\n      body:\n        method !== 'GET' && method !== 'HEAD'\n          ? (getRequestMeta(params.request, 'clonableBody') as any)\n          : undefined,\n\n      signal: signalFromNodeResponse(params.response.originalResponse),\n      waitUntil: this.getWaitUntil(),\n    }\n    let result:\n      | UnwrapPromise<ReturnType<typeof import('./web/sandbox').run>>\n      | undefined\n\n    // if no middleware info check for Node.js middleware\n    // this is not in the middleware-manifest as that historically\n    // has only included edge-functions, we need to do a breaking\n    // version bump for that manifest to write this info there if\n    // we decide we want to\n    if (!middlewareInfo) {\n      let middlewareModule\n      middlewareModule = await this.loadNodeMiddleware()\n\n      if (!middlewareModule) {\n        throw new MiddlewareNotFoundError()\n      }\n      const adapterFn: typeof import('./web/adapter').adapter =\n        middlewareModule.default || middlewareModule\n\n      const hasRequestBody =\n        !['HEAD', 'GET'].includes(params.request.method) &&\n        Boolean(requestData.body)\n\n      try {\n        result = await adapterFn({\n          handler: middlewareModule.middleware || middlewareModule,\n          request: {\n            ...requestData,\n            body: hasRequestBody\n              ? requestData.body.cloneBodyStream()\n              : undefined,\n          },\n          page: 'middleware',\n        })\n      } finally {\n        if (hasRequestBody) {\n          requestData.body.finalize()\n        }\n      }\n    } else {\n      const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n      result = await run({\n        distDir: this.distDir,\n        name: middlewareInfo.name,\n        paths: middlewareInfo.paths,\n        edgeFunctionEntry: middlewareInfo,\n        request: requestData,\n        useCache: true,\n        onWarning: params.onWarning,\n      })\n    }\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    // Split compound (comma-separated) set-cookie headers\n    if (result.response.headers.has('set-cookie')) {\n      const cookies = result.response.headers\n        .getSetCookie()\n        .flatMap((maybeCompoundCookie) =>\n          splitCookiesString(maybeCompoundCookie)\n        )\n\n      // Clear existing header(s)\n      result.response.headers.delete('set-cookie')\n\n      // Append each cookie individually.\n      for (const cookie of cookies) {\n        result.response.headers.append('set-cookie', cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = await this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    let maybeDecodedPathname = normalizedPathname\n\n    try {\n      maybeDecodedPathname = decodeURIComponent(normalizedPathname)\n    } catch {\n      /* non-fatal we can't decode so can't match it */\n    }\n\n    if (\n      !(\n        middleware.match(normalizedPathname, req, parsedUrl.query) ||\n        middleware.match(maybeDecodedPathname, req, parsedUrl.query)\n      )\n    ) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: unknown) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(\n      NextNodeServerSpan.getRoutesManifest,\n      () => loadManifest(join(this.distDir, ROUTES_MANIFEST)) as RoutesManifest\n    )\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = getRequestMeta(params.req, 'isNextDataReq')\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n        waitUntil: this.getWaitUntil(),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n      serverComponentsHmrCache: getRequestMeta(\n        params.req,\n        'serverComponentsHmrCache'\n      ),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    // For Node.js runtime production logs, in dev it will be overridden by next-dev-server\n    if (!this.renderOpts.dev) {\n      this.logError(args[0] as Error)\n    }\n  }\n\n  protected onServerClose(listener: () => Promise<void>) {\n    this.cleanupListeners.add(listener)\n  }\n\n  async close(): Promise<void> {\n    await this.cleanupListeners.runAll()\n  }\n\n  protected getInternalWaitUntil(): WaitUntil {\n    this.internalWaitUntil ??= this.createInternalWaitUntil()\n    return this.internalWaitUntil\n  }\n\n  private createInternalWaitUntil() {\n    if (this.minimalMode) {\n      throw new InvariantError(\n        'createInternalWaitUntil should never be called in minimal mode'\n      )\n    }\n\n    const awaiter = new AwaiterOnce({ onError: console.error })\n\n    // TODO(after): warn if the process exits before these are awaited\n    this.onServerClose(() => awaiter.awaiting())\n\n    return awaiter.waitUntil\n  }\n}\n","import type { RouteMatch } from './route-match'\nimport type { PagesAPIRouteDefinition } from '../route-definitions/pages-api-route-definition'\n\nimport { RouteKind } from '../route-kind'\n\nexport interface PagesAPIRouteMatch\n  extends RouteMatch<PagesAPIRouteDefinition> {}\n\n/**\n * Checks if the given match is a Pages API route match.\n * @param match the match to check\n * @returns true if the match is a Pages API route match, false otherwise\n */\nexport function isPagesAPIRouteMatch(\n  match: RouteMatch\n): match is PagesAPIRouteMatch {\n  return match.definition.kind === RouteKind.PAGES_API\n}\n","import type { NextConfig } from '../types'\nimport { Agent as HttpAgent } from 'http'\nimport { Agent as HttpsAgent } from 'https'\n\nexport function setHttpClientAndAgentOptions(config: {\n  httpAgentOptions?: NextConfig['httpAgentOptions']\n}) {\n  if (globalThis.__NEXT_HTTP_AGENT) {\n    // We only need to assign once because we want\n    // to reuse the same agent for all requests.\n    return\n  }\n\n  if (!config) {\n    throw new Error('Expected config.httpAgentOptions to be an object')\n  }\n\n  globalThis.__NEXT_HTTP_AGENT_OPTIONS = config.httpAgentOptions\n  globalThis.__NEXT_HTTP_AGENT = new HttpAgent(config.httpAgentOptions)\n  globalThis.__NEXT_HTTPS_AGENT = new HttpsAgent(config.httpAgentOptions)\n}\n","import type { NextConfigComplete } from '../server/config-shared'\n\nfunction errorIfEnvConflicted(config: NextConfigComplete, key: string) {\n  const isPrivateKey = /^(?:NODE_.+)|^(?:__.+)$/i.test(key)\n  const hasNextRuntimeKey = key === 'NEXT_RUNTIME'\n\n  if (isPrivateKey || hasNextRuntimeKey) {\n    throw new Error(\n      `The key \"${key}\" under \"env\" in ${config.configFileName} is not allowed. https://nextjs.org/docs/messages/env-key-not-allowed`\n    )\n  }\n}\n\n/**\n * Collects all environment variables that are using the `NEXT_PUBLIC_` prefix.\n */\nexport function getNextPublicEnvironmentVariables() {\n  const defineEnv: Record<string, string | undefined> = {}\n  for (const key in process.env) {\n    if (key.startsWith('NEXT_PUBLIC_')) {\n      const value = process.env[key]\n      if (value != null) {\n        defineEnv[`process.env.${key}`] = value\n      }\n    }\n  }\n  return defineEnv\n}\n\n/**\n * Collects the `env` config value from the Next.js config.\n */\nexport function getNextConfigEnv(config: NextConfigComplete) {\n  // Refactored code below to use for-of\n  const defineEnv: Record<string, string | undefined> = {}\n  const env = config.env\n  for (const key in env) {\n    const value = env[key]\n    if (value != null) {\n      errorIfEnvConflicted(config, key)\n      defineEnv[`process.env.${key}`] = value\n    }\n  }\n  return defineEnv\n}\n\nexport function getStaticEnv(config: NextConfigComplete) {\n  const staticEnv: Record<string, string | undefined> = {\n    ...getNextPublicEnvironmentVariables(),\n    ...getNextConfigEnv(config),\n    'process.env.NEXT_DEPLOYMENT_ID': config.deploymentId || '',\n  }\n  return staticEnv\n}\n\nexport function populateStaticEnv(config: NextConfigComplete) {\n  // since inlining comes after static generation we need\n  // to ensure this value is assigned to process env so it\n  // can still be accessed\n  const staticEnv = getStaticEnv(config)\n  for (const key in staticEnv) {\n    const innerKey = key.split('.').pop() || ''\n    if (!process.env[innerKey]) {\n      process.env[innerKey] = staticEnv[key] || ''\n    }\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Readable } from 'stream'\nimport { PassThrough } from 'stream'\n\nexport function requestToBodyStream(\n  context: { ReadableStream: typeof ReadableStream },\n  KUint8Array: typeof Uint8Array,\n  stream: Readable\n) {\n  return new context.ReadableStream({\n    start: async (controller) => {\n      for await (const chunk of stream) {\n        controller.enqueue(new KUint8Array(chunk))\n      }\n      controller.close()\n    },\n  })\n}\n\nfunction replaceRequestBody<T extends IncomingMessage>(\n  base: T,\n  stream: Readable\n): T {\n  for (const key in stream) {\n    let v = stream[key as keyof Readable] as any\n    if (typeof v === 'function') {\n      v = v.bind(base)\n    }\n    base[key as keyof T] = v\n  }\n\n  return base\n}\n\nexport interface CloneableBody {\n  finalize(): Promise<void>\n  cloneBodyStream(): Readable\n}\n\nexport function getCloneableBody<T extends IncomingMessage>(\n  readable: T\n): CloneableBody {\n  let buffered: Readable | null = null\n\n  const endPromise = new Promise<void | { error?: unknown }>(\n    (resolve, reject) => {\n      readable.on('end', resolve)\n      readable.on('error', reject)\n    }\n  ).catch((error) => {\n    return { error }\n  })\n\n  return {\n    /**\n     * Replaces the original request body if necessary.\n     * This is done because once we read the body from the original request,\n     * we can't read it again.\n     */\n    async finalize(): Promise<void> {\n      if (buffered) {\n        const res = await endPromise\n\n        if (res && typeof res === 'object' && res.error) {\n          throw res.error\n        }\n        replaceRequestBody(readable, buffered)\n        buffered = readable\n      }\n    },\n    /**\n     * Clones the body stream\n     * to pass into a middleware\n     */\n    cloneBodyStream() {\n      const input = buffered ?? readable\n      const p1 = new PassThrough()\n      const p2 = new PassThrough()\n      input.on('data', (chunk) => {\n        p1.push(chunk)\n        p2.push(chunk)\n      })\n      input.on('end', () => {\n        p1.push(null)\n        p2.push(null)\n      })\n      buffered = p2\n      return p1\n    },\n  }\n}\n"],"names":["Symbol","Object","Error","reportError","r","e","t","process","n","Array","console","s","URL","Buffer","RangeError","JSON","__dirname","p","o","Boolean","Date","encodeURIComponent","Map","decodeURIComponent","Number","__nccwpck_require__","TypeError","a","isNaN","isFinite","Math","NaN","i","arguments","Promise","setTimeout","clearTimeout","clearInterval","setInterval","u","RegExp","String","globalThis","AsyncLocalStorage","require","WebSocket","defineProperty","configurable","get","set","value","writable","global","crypto","webcrypto","enumerable","module","Set","c","webCrypto","LRUNode","constructor","key","data","size","prev","next","SentinelNode","LRUCache","maxSize","calculateSize","cache","totalSize","head","tail","addToHead","node","removeNode","moveToHead","removeTail","lastNode","warn","existing","newNode","delete","has","iterator","current","remove","currentSize","versions","startsWith","invalidSourceMap","isAnonymousFrameLikelyJSNative","methodName","url","length","regexNextStatic","reactVendoredRe","reactNodeModulesRe","nextInternalsRe","env","stdout","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","replace","index","start","substring","end","nextIndex","indexOf","formatter","open","input","string","bold","red","green","yellow","magenta","white","frameToString","sourceURL","line1","column1","fileLocation","sourceLocation","canParse","path","cwd","computeErrorName","error","name","prepareUnsourcemappedStackTrace","structuredStackTrace","stack","message","toString","shouldIgnoreListGeneratedFrame","file","includes","createUnsourcemappedFrame","frame","ignored","code","patchErrorInspectNodeJS","errorConstructor","inspectSymbol","for","prepareStackTrace","prototype","depth","inspectOptions","inspect","workUnitAsyncStorage","newError","sourceMapError","undefined","cause","parseAndSourceMap","unparsedStack","errorName","idx","lastIndexOf","slice","unsourcemappedStack","parseStack","distDir","__NEXT_DIST_DIR","split","map","line","join","frames","parse","res","exec","pathname","effectiveDistDir","concat","pop","search","lineNumber","column","sourceMapCache","sourceMappedFrames","sourceFrame","push","sourcemappedFrame","getSourcemappedFrameIfPossible","applicableSourceMap","sourceMap","sourceMapConsumer","sourceMapPayload","codeFrame","sourceMapCacheEntry","maybeSourceMapPayload","nativeFindSourceMap","payload","SyncSourceMapConsumer","sourcePosition","originalPositionFor","findApplicableSourceMapPayload","line0","column0","sections","left","right","result","middle","section","offset","ignoreList","sources","source","sourceIndex","originalFrame","colors","sourceContent","sourceContentFor","test","codeFrameColumns","forceColor","ignoreListAnonymousStackFramesIfSandwichedGeneric","isAnonymousFrame","isIgnoredFrame","getMethodName","ignoreFrame","currentFrame","previousFrameIsIgnored","ignoreSandwich","j","nextFrame","sourceMappedStack","hasOwnProperty","call","originalCustomInspect","WeakMap","InvariantError","options","endsWith","abortOnSynchronousPlatformIOAccess","route","expression","errorWithStack","prerenderStore","dynamicTracking","createPrerenderInterruptedError","digest","controller","abort","dynamicAccesses","isDebugDynamicAccesses","syncDynamicErrorWithStack","React","isDynamicPostponeReason","reason","io","type","workUnitStore","workStore","workAsyncStorage","prerenderSignal","signal","aborted","prerenderPhase","requestStore","_random","random","apply","bind","createDate","originalConstructor","originalNow","properties","getOwnPropertyDescriptors","now","Reflect","construct","newConstructor","defineProperties","getRandomValuesExpression","_getRandomValues","getRandomValues","_randomUUID","randomUUID","nodeCrypto","randomUUIDExpression","randomBytesExpression","_randomBytes","randomBytes","randomFillSyncExpression","_randomFillSync","randomFillSync","_randomInt","randomInt","generatePrimeSyncExpression","_generatePrimeSync","generatePrimeSync","generateKeyPairSyncExpression","_generateKeyPairSync","generateKeyPairSync","generateKeySyncExpression","_generateKeySync","generateKeySync","mod","originalRequire","resolveFilename","_resolveFilename","resolve","__non_webpack_require__","hookPropertyMap","addHookAliases","aliases","entries","dirname","originalResolveFilename","requestMap","request","parent","isMain","hookResolved","basename","SP","performance","every","method","DecodeError","NormalizeError","PageNotFoundError","page","MissingStaticPage","PARAM_SEPARATOR","hasAdjacentParameterIssues","normalizeAdjacentParameters","normalized","safePathToRegexp","keys","pathToRegexp","needsNormalization","routeToUse","normalizedRoute","retryError","safeCompile","compile","getRouteMatcher","matcherFn","re","groups","routeMatch","decode","param","params","group","match","pos","repeat","entry","cleaned","isArray","item","NEXT_REQUEST_META","getRequestMeta","req","meta","addRequestMeta","removeRequestMeta","COMPILER_NAMES","client","server","edgeServer","UNDERSCORE_NOT_FOUND_ROUTE","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","PAGES_MANIFEST","APP_PATHS_MANIFEST","SERVER_DIRECTORY","BLOCKED_PAGES","STATIC_STATUS_PAGES","findDir","dir","curDir","fs","ReflectAdapter","target","prop","receiver","deleteProperty","ReadonlyHeadersError","callable","HeadersAdapter","Headers","headers","Proxy","lowercased","toLowerCase","original","find","seal","merge","from","append","forEach","callbackfn","thisArg","values","HTML_CONTENT_TYPE_HEADER","NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","MATCHED_PATH_HEADER","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_CACHE_REVALIDATED_TAGS_HEADER","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","SYMBOL_CLEARED_COOKIES","RedirectStatusCode","getCookieParser","cookie","parseCookieFn","BaseNextRequest","body","cookies","_cookies","BaseNextResponse","destination","redirect","statusCode","setHeader","NodeNextRequest","_req","toUpperCase","fetchMetrics","streaming","originalRequest","stream","ReadableStream","on","chunk","enqueue","Uint8Array","err","NodeNextResponse","originalResponse","_res","textBody","sent","finished","headersSent","statusMessage","removeHeader","getHeaderValues","getHeader","hasHeader","getHeaders","appendHeader","currentValues","send","onClose","callback","sendRenderResult","generateEtags","poweredByHeader","cacheControl","contentType","getCacheControlHeader","revalidate","expire","swrHeader","isDynamic","toUnchunkedString","etag","generateETag","weak","prefix","fnv1a52","len","t0","v0","t1","v1","t2","v2","t3","v3","charCodeAt","fresh","byteLength","pipeToNodeResponse","searchParamsToUrlQuery","searchParams","query","stringifyUrlQueryParam","parseUrl","parseRelativeUrl","base","parseQuery","globalBase","resolvedBase","hash","href","origin","slashes","parsedURL","hostname","port","protocol","prefixes","wait","ready","info","event","trace","LOGGING_METHOD","log","prefixedLog","prefixType","shift","consoleMethod","bootstrap","warnOnceCache","warnOnce","v4Seg","v4Str","v6Seg","IPv6Reg","ensureLeadingSlash","normalizeAppPath","reduce","segment","segments","normalizeRscURL","INTERCEPTION_ROUTE_MARKERS","isInterceptionRouteAppPath","m","TEST_ROUTE","TEST_STRICT_ROUTE","isDynamicRoute","strict","extractInterceptionRouteInformation","interceptingRoute","marker","interceptedRoute","splitInterceptingRoute","HTML_LIMITED_BOT_UA_RE","HEADLESS_BROWSER_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","voidCatch","encoder","TextEncoder","streamFromString","encode","streamFromBuffer","streamToString","decoder","TextDecoder","fatal","splitCookiesString","cookiesString","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","skipWhitespace","charAt","toNodeOutgoingHttpHeaders","nodeHeaders","validateURL","normalizeNextQueryParam","removeTrailingSlash","parsePath","hashIndex","queryIndex","hasQuery","addPathPrefix","addPathSuffix","suffix","pathHasPrefix","getHostname","parsed","host","normalizeLocalePath","locales","detectedLocale","lowercasedLocales","locale","removePathPrefix","withoutPrefix","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","REGEX_LOCALHOST_HOSTNAME","parseURL","Internal","NextURL","baseOrOpts","opts","__NEXT_NO_MIDDLEWARE_URL_NORMALIZE","domainLocale","detectDomainLocale","domainItems","domain","defaultLocale","some","domains","formatPathname","addLocale","ignorePrefix","lower","forceLocale","formatSearch","password","username","toJSON","clone","PageSignatureError","RemovedPageError","RemovedUAError","INTERNALS","NextRequest","Request","init","duplex","nextUrl","RequestCookies","bodyUsed","credentials","fromEntries","integrity","keepalive","mode","referrer","referrerPolicy","ua","ResponseAbortedName","ResponseAborted","DetachedPromise","reject","promise","rej","BaseServerSpan","LoadComponentsSpan","NextNodeServerSpan","clientComponentLoadStart","clientComponentLoadTimes","clientComponentLoadCount","isAbortError","readable","waitUntilForEnd","errored","destroyed","createAbortController","response","AbortController","once","writableFinished","writer","createWriterFromResponse","started","drained","onDrain","off","WritableStream","write","NEXT_OTEL_PERFORMANCE_PREFIX","metrics","getClientComponentLoaderMetrics","reset","measure","flushHeaders","getTracer","spanName","ok","flush","destroy","pipeTo","RenderResult","EMPTY","metadata","fromStatic","waitUntil","assignMetadata","assign","isNull","isBuffer","chainStreams","streams","TransformStream","preventClose","nextStream","then","lastStream","catch","coerce","unshift","normalizePathSep","denormalizePagePath","_page","getPathMatch","regexp","delimiter","sensitive","matcher","regexpToFunction","regexModifier","flags","removeUnnamedParams","reHasRegExp","reReplaceRegExp","escapeStringRegexp","PARAMETER_PATTERN","parseMatchedParameter","optional","getRouteRegex","includeSuffix","includePrefix","excludeOptionalTrailingSlash","parameterizedRoute","getParametrizedRoute","groupIndex","markerMatch","paramMatches","getSafeKeyFromSegment","pattern","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","parseInt","duplicateKey","interceptionPrefix","unescapeSegments","matchHas","missing","hasMatch","hasItem","getSafeParamName","paramName","newParamName","charCode","matches","groupKey","compileNonPath","validate","decodeQueryPathParameter","slashedProtocols","dynamicParamTypesSchema","segmentSchema","flightRouterStateSchema","ACTION_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_URL","FLIGHT_HEADERS","NEXT_RSC_UNION_QUERY","isInterceptionRouteRewrite","filterInternalQuery","paramKeys","isNextQueryPrefix","isNextInterceptionMarkerPrefix","getPreviouslyRevalidatedTags","previewModeId","isError","getProperError","isPlainObject","getObjectClassLabel","getPrototypeOf","safeStringify","obj","seen","WeakSet","stringify","_key","add","LocaleRouteNormalizer","provider","normalize","UrlNode","insert","urlPath","_insert","filter","smoosh","_smoosh","childrenPaths","children","sort","slugName","splice","restSlugName","optionalRestSlugName","routes","curr","placeholder","urlPaths","slugNames","isCatchAll","nextSegment","segmentName","isOptional","handleSlug","previousSlug","nextSlug","slug","RouteMatcher","definition","dynamic","identity","LocaleRouteMatcher","DefaultRouteMatcherManager","compilationID","providers","waitTillReady","waitTillReadyPromise","reload","matchers","providersMatchers","all","duplicates","providerMatchers","duplicated","duplicate","others","previousMatchers","cachedMatcher","static","reference","pathnames","indexes","sorted","getSortedRoutes","normalizedPages","root","pagePath","sortedDynamicMatchers","dynamicMatches","lastCompilationID","matchAll","inferredFromDefault","skipDynamic","Normalizers","normalizers","normalizer","PrefixingNormalizer","normalizePagePath","posix","resolvedPage","UnderscoreNormalizer","AppBundlePathNormalizer","AppFilenameNormalizer","manifestFilename","isAppRouteRoute","STATIC_METADATA_IMAGES","icon","filename","extensions","apple","openGraph","twitter","getExtensionRegexString","staticExtensions","dynamicExtensions","wrapNormalizerFn","fn","AppPathnameNormalizer","AppNormalizers","bundlePath","RouteKind","AppPageRouteMatcher","CachedRouteMatcherProvider","loader","cached","load","compare","transform","ManifestRouteMatcherProvider","manifestName","manifestLoader","AppPageRouteMatcherProvider","manifest","pages","allAppPaths","appPaths","kind","AppRouteRouteMatcher","AppRouteRouteMatcherProvider","isAPIRoute","PagesAPIRouteMatcher","PagesAPILocaleRouteMatcher","PagesBundlePathNormalizer","PagesFilenameNormalizer","PagesNormalizers","PagesAPIRouteMatcherProvider","PagesRouteMatcher","PagesLocaleRouteMatcher","PagesRouteMatcherProvider","ServerManifestLoader","getter","I18NProvider","config","lowerCaseLocales","lowerCaseDomains","http","fromRequest","analysis","sendResponse","status","statusText","headersWithMultipleValuesAllowed","isHeaderPresent","SuffixPathnameNormalizer","matched","RSCPathnameNormalizer","PrefetchRSCPathnameNormalizer","PrefixPathnameNormalizer","NextDataPathnameNormalizer","buildID","toRoute","NEXT_REQUEST_CONTEXT_SYMBOL","REDIRECTS","handleMiddlewareField","NextResponse","Response","cookiesProxy","ResponseCookies","args","newHeaders","getAll","stringifyCookie","redirected","json","initObj","rewrite","debug","NEXT_PRIVATE_DEBUG_CACHE","handlersSymbol","handlersMapSymbol","handlersSetSymbol","NextRequestHint","sourcePage","respondWith","PATTERN","SegmentPrefixRSCPathnameNormalizer","extract","originalPathname","segmentPath","WrappedBuildError","innerError","Server","getServerComponentsHmrCache","experimental","serverComponentsHmrCache","__serverComponentsHmrCache","handleRSCRequest","parsedUrl","segmentPrefetchRSC","prefetchRSC","rsc","header","segmentPrefetchRSCRequest","formatUrl","handleNextDataRequest","getMiddleware","matchNextDataPathname","render404","lastParam","getRouteFromAssetPath","assetPath","ext","localePathResult","handleNextImageRequest","handleCatchallRenderRequest","handleCatchallMiddlewareRequest","normalizeAndAttachMetadata","enabledDirectories","prepared","preparedPromise","customErrorNo404Warn","execOnce","used","Log","quiet","conf","dev","minimalMode","experimentalTestProxy","serverOptions","loadEnvConfig","fetchHostname","formatHostname","isIPv6","publicDir","getPublicDir","hasStaticDir","getHasStaticDir","localeNormalizer","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","getBuildId","NEXT_PRIVATE_MINIMAL_MODE","getEnabledDirectories","isAppPPREnabled","app","checkIsAppPPREnabled","ppr","isAppSegmentPrefetchEnabled","clientSegmentCache","nextFontManifest","getNextFontManifest","NEXT_DEPLOYMENT_ID","deploymentId","renderOpts","supportsDynamicResponse","canonicalBase","amp","previewProps","getPrerenderManifest","preview","ampOptimizerConfig","optimizer","images","optimizeCss","nextConfigOutput","output","nextScriptWorkers","disableOptimizedLoading","domainLocales","serverComponents","cacheLifeProfiles","cacheLife","enableTainting","taint","crossOrigin","largePageDataBytes","runtimeConfig","isExperimentalCompile","htmlLimitedBots","expireTime","staleTimes","clientTraceMetadata","cacheComponents","clientParamParsing","dynamicOnHover","inlineCss","authInterrupts","onInstrumentationRequestError","instrumentationOnRequestError","reactMaxHeadersLength","devtoolSegmentExplorer","setConfig","pagesManifest","getPagesManifest","appPathsManifest","getAppPathsManifest","appPathRoutes","getAppPathRoutes","interceptionRoutePatterns","getinterceptionRoutePatterns","getRouteMatchers","setAssetPrefix","responseCache","getResponseCache","ctx","instrumentation","onRequestError","handlerErr","logError","handleRequest","prepare","tracer","withPropagatedContext","SpanKind","attributes","span","handleRequestImpl","finally","isRSCRequest","setAttributes","setStatus","SpanStatusCode","setAttribute","rootSpanAttributes","getRootSpanAttributes","updateName","utils","middlewareValue","urlNoQuery","urlParts","cleanUrl","normalizeRepeatedSlashes","URLSearchParams","xForwardedProto","isHttps","socket","encrypted","remoteAddress","attachRequestMeta","parseUrlUtil","pathnameInfo","useMatchedPathHeader","matchedPath","fixMojibake","bytes","urlPathname","postponed","normalizedUrlPath","stripNextDataPath","localeAnalysisResult","srcPathname","pageIsDynamic","paramsResult","hasValidParams","getServerUtils","rewrites","caseSensitive","defaultRouteRegex","dynamicRouteMatcher","defaultRouteMatches","getNamedRouteRegex","getNamedParametrizedRoute","prefixRouteKeys","routeKey","fromCharCode","floor","hasInterceptionMarker","namedParameterizedRoute","namedRegex","handleRewrites","rewriteParams","fsPathname","checkRewrite","hasParams","stateHeader","getSelectedParams","currentTree","parallelRoute","isDynamicParameter","segmentValue","parseAndValidateFlightRouterState","state","assert","parsedDestination","destQuery","prepareDestination","destHostnameCompiler","newUrl","parseDestination","escaped","destHostname","destSearch","destPath","destParams","destPathParamKeys","destHostnameParamKeys","destPathCompiler","strOrArray","appendParamsToQuery","actualValue","nextInternalLocale","dynamicParams","beforeFiles","afterFiles","matchesPage","fsPathnameNoSlash","fallback","normalizeQueryParams","routeParamKeys","normalizedKey","v","getParamsFromRouteMatches","routeMatchesHeader","routeMatches","keyName","normalizeDynamicRouteParams","ignoreMissingOptional","defaultValue","isDefaultValue","defaultVal","val","normalizeCdnUrl","_parsedUrl","parseReqUrl","auth","urlObj","querystring","interpolateDynamicPath","paramValue","builtParam","replaceAll","getRoutesManifest","caseSensitiveRoutes","originQueryParams","pathnameBeforeRewrite","rewriteParamKeys","queryParams","didRewrite","matcherParams","curParamsResult","renderError","webServerConfig","incrementalCache","getIncrementalCache","requestHeaders","resetRequestCache","__incrementalCache","cacheHandlers","getCacheHandlers","cacheHandler","previouslyRevalidatedTags","receiveExpiredTags","invokePath","invokeStatus","invokeQuery","parsedMatchedPath","invokePathnameInfo","normalizeResult","bubble","run","NoFallbackError","getRequestHandlerWithMetadata","handler","getRequestHandler","loadInstrumentationModule","prepareImpl","normalizedPath","runImpl","pipe","partialContext","pipeImpl","botType","serveStreamingMetadata","shouldServeStreamingMetadata","userAgent","blockingMetadataUARegex","originalStatus","getStaticHTML","render","internalRender","renderImpl","getWaitUntil","builtinRequestContext","getBuiltinRequestContext","_globalThis","getInternalWaitUntil","customServer","hasPage","getBotType","renderToResponse","getStaticPaths","staticPaths","fallbackMode","parseFallbackField","fallbackField","dynamicRoutes","renderToResponseWithComponents","requestContext","findComponentsResult","renderToResponseWithComponentsImpl","pathCouldBeIntercepted","resolvedPathname","setVaryHeader","isAppPath","baseVaryHeader","addedNextUrlToVary","components","prerenderManifest","pathsResults","routeModule","isErrorPathname","is404Page","is500Page","hasServerProps","getServerSideProps","isPossibleServerAction","getServerActionRequestMetadata","actionId","isURLEncodedAction","isMultipartAction","isFetchAction","isSSG","getStaticProps","resolvedUrlPathname","hasFallback","isNextDataRequest","couldSupportPPR","hasDebugStaticShellQuery","__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING","__nextppronly","minimalPostponed","isRoutePPREnabled","renderingMode","Component","isBotRequest","isDomBotUA","isSupportedDocument","Document","getInitialProps","NEXT_BUILTIN_DOCUMENT","isDev","prerenderedRoutes","smallestFallbackRouteParams","fallbackRouteParams","parsedInitUrl","initPathname","ampValidator","ComponentMod","stripLocale","splitPath","getOriginalAppPaths","originalAppPath","renderPageComponent","bubbleNoFallback","findPageComponents","sriEnabled","sri","algorithm","shouldEnsure","setRootSpanAttribute","isNoFallbackError","renderToResponseImpl","initUrl","rewroteUrl","renderErrorToResponse","isWrappedError","renderToHTML","renderToHTMLImpl","setHeaders","renderErrorImpl","renderErrorToResponseImpl","statusPage","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML","pagePathCache","getMaybePagePath","cacheKey","serverBuildPath","loadManifest","checkManifest","curPath","manifestNoLocales","getPagePath","requirePage","promises","interopDefault","default","ms","SERVER_ACTION_MANIFESTS_SINGLETON","loadManifestWithRetries","manifestPath","attempts","tryLoadManifestWithRetries","evalManifestWithRetries","evalManifest","tryLoadClientReferenceManifest","entryName","context","__RSC_MANIFEST","loadComponentsImpl","reactLoadableManifestPath","DocumentMod","AppMod","manifestLoadAttempts","hasClientManifest","isStaticMetadataRoute","isMetadataRouteFile","appDirRelativePath","pageExtensions","strictlyMatchExtensions","trailingMatcher","suffixMatcher","metadataRouteFilesRegex","normalizedAppDirRelativePath","buildManifest","reactLoadableManifest","dynamicCssManifest","clientReferenceManifest","serverActionsManifest","subresourceIntegrityManifest","SERVER_REFERENCE_MANIFEST","SUBRESOURCE_INTEGRITY_MANIFEST","setReferenceManifestsSingleton","serverModuleMap","clientReferenceManifestsPerPage","createServerModuleMap","_","id","pageName","workerEntry","workers","at","moduleId","async","chunks","App","pageConfig","loadComponents","wrap","getMiddlewareRouteMatcher","Batcher","cacheKeyFn","schedulerFn","pending","create","batch","scheduleOnNextTick","cb","nextTick","CachedRouteKind","IncrementalCacheKind","fromResponseCacheEntry","cacheEntry","html","pageData","rscData","segmentData","toResponseCacheEntry","isMiss","isStale","ResponseCache","minimal_mode","batcher","isOnDemandRevalidate","responseGenerator","hasResolved","previousCacheEntry","isFallback","prom","previousCacheItem","expiresAt","routeKindToIncrementalCacheKind","routeKind","resolved","cachedResponse","isPrefetch","isRevalidating","resolveValue","newRevalidate","min","max","newExpire","MultiFileWriter","tasks","findOrCreateTask","directory","task","mkdir","filePath","writeFile","flatMap","FileSystemCache","flushToDisk","serverDistDir","revalidatedTags","maxMemoryCacheSize","memoryCache","getMemoryCache","revalidateTag","tags","tag","tagsManifest","getFilePath","fileData","readFile","mtime","stat","lastModified","getTime","fetchIdx","fetchUrl","parsedData","storedTags","fetchCache","maybeSegmentData","segmentPaths","segmentsDir","segmentDataFilePath","cacheTags","tagsHeader","combinedTags","softTags","htmlPath","buffer","IncrementalCache","fetchCacheKeyPrefix","CurCacheHandler","allowedRevalidateHeaderKeys","locks","hasCustomCacheHandler","cacheHandlersSymbol","globalCacheHandler","FetchCache","__NEXT_TEST_MAX_ISR_CACHE","disableForTestmode","NEXT_PRIVATE_TEST_PROXY","cacheControls","SharedCacheControls","_requestHeaders","calculateRevalidate","fromTime","timeOrigin","initialRevalidateSeconds","_getPathname","lock","generateCacheKey","bodyChunks","_ogBody","getReader","readableBody","total","arr","arrayBuffer","formData","text","blob","Blob","cacheString","createHash","update","cacheData","revalidateAfter","resumeDataCache","getRenderResumeDataCache","memoryCacheData","fetch","pendingRevalidatedTags","age","notFoundRoutes","prerenderResumeDataCache","getPrerenderResumeDataCache","itemSize","isImplicitBuildTimeCache","warningText","nodeFs","existsSync","readFileSync","f","d","recursive","MockedRequest","Stream","httpVersion","httpVersionMajor","httpVersionMinor","_target","bodyReadable","emit","headersDistinct","_read","connection","complete","trailers","trailersDistinct","rawTrailers","rawHeaders","MockedResponse","buffers","fromNodeOutgoingHttpHeaders","headPromise","headPromiseResolve","hasStreamed","resWriter","isSent","_implicitHeader","_write","_encoding","writeHead","getHeaderNames","strictContentLength","writeEarlyHints","assignSocket","detachSocket","writeContinue","writeProcessing","upgrading","chunkedEncoding","shouldKeepAlive","useChunkedEncodingByDefault","sendDate","addTrailers","formatDynamicImportPath","absoluteFilePath","pathToFileURL","AsyncCallbackSet","callbacks","runAll","allSettled","REACT_POSTPONE_TYPE","isPostpone","$$typeof","NodeModuleLoader","RouterServerContextSymbol","routerServerGlobal","dynamicImportEsmDefault","MiddlewareMatcherCache","NextNodeServer","BaseServer","cleanupListeners","relativeProjectDir","relative","edgeFunctionsPage","getEdgeFunctionsPages","runEdgeFunction","apiError","routePath","routerKind","routeType","revalidateReason","handleApiRequest","isMiddlewareInvoke","handleFinished","normalizedPathname","maybeDecodedPathname","bubblingResult","ensureMiddleware","runMiddleware","BubbledError","__NEXT_OPTIMIZE_CSS","__NEXT_SCRIPT_WORKERS","useSkewCookie","appDocumentPreloading","regex","setHttpClientAndAgentOptions","__NEXT_HTTP_AGENT","__NEXT_HTTP_AGENT_OPTIONS","httpAgentOptions","HttpAgent","__NEXT_HTTPS_AGENT","HttpsAgent","middlewareManifestPath","populateStaticEnv","staticEnv","getNextPublicEnvironmentVariables","defineEnv","getNextConfigEnv","isPrivateKey","hasNextRuntimeKey","configFileName","innerKey","removeUncaughtErrorAndRejectionListeners","removeAllListeners","unstable_preloadEntries","loadCustomCacheHandlers","patchFetch","webpackRequire","__next_app__","handleUpgrade","getInstrumentationModule","runInstrumentationHookIfAvailable","ensureInstrumentationRegistered","forceReload","silent","initializeCacheHandlers","DefaultCache","DefaultCacheHandler","RemoteCache","setCacheHandler","CacheHandler","getCacheFilesystem","cacheMaxMemorySize","routesManifest","buildIdFile","trim","runApi","renderHTML","renderHTMLImpl","imageOptimizer","edgeFunctionsPages","findPageComponentsImpl","_url","pagePaths","NEXT_FONT_MANIFEST","logErrorWithOriginalStack","_err","_type","ensurePage","_opts","normalizeReq","normalizeRes","makeRequestHandler","revalidateHeaders","mocked","createRequestResponseMocks","unstable_onlyGenerated","internal","is404","getMiddlewareManifest","middlewareModule","loadNodeMiddleware","originalSource","getMiddlewareMatcher","stored","functions","getEdgeFunctionInfo","foundPage","pageInfo","files","wasm","binding","assets","hasMiddleware","nodeMiddleware","ensureEdgeFunction","_params","_cachedPreviewManifest","isUpgradeReq","trustHostHeader","getCloneableBody","buffered","endPromise","finalize","replaceRequestBody","cloneBodyStream","p1","PassThrough","p2","_serverDistDir","onServerClose","listener","internalWaitUntil","createInternalWaitUntil"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194]}